<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.ssangyong.mapper.SYMCMEPLMapper">

	<!-- 설계부서에서 Part가 변경 되었지만 BOP에 할당된 Part중 MECO에 반영되지 않은 Part List Up -->
	<select id="findReplacedEndItems" parameterType="java.util.HashMap" resultType="java.util.HashMap">
      SELECT *
      FROM (
         SELECT PI.PITEM_ID, PREV.PITEM_REVISION_ID, CWSO.POBJECT_TYPE, OT.PNAME, CI.PITEM_ID CITEM_ID, POCC.PUID OCC_PUID 
         , POCC.ROCC_THREADU OCC_THREADU
         , (
            SELECT CREV.PITEM_REVISION_ID
            FROM INFODBA.PITEMREVISION CREV
            WHERE CI.PUID = CREV.RITEMS_TAGU
            AND EXISTS (
               SELECT 1
               FROM INFODBA.PRELEASE_STATUS_LIST PSL, INFODBA.PRELEASESTATUS PST
               WHERE PSL.PUID = CREV.PUID
               AND PSL.PVALU_0 = PST.PUID)
               AND CREV.PITEM_REVISION_ID IN (
                  SELECT DISTINCT MAX(MAX_REV.PITEM_REVISION_ID)
                  FROM INFODBA.PITEMREVISION MAX_REV
                  WHERE MAX_REV.RITEMS_TAGU = CREV.RITEMS_TAGU)
         ) CITEM_REVISION_ID
         , (
            SELECT PNCI.PITEM_ID
            FROM INFODBA.PIMANRELATION PREL, INFODBA.PMEAPPEARANCEPATHNODE PNODE, INFODBA.PMEAPPEARANCEPATHROOT PROOT,
            INFODBA.PITEM RI, INFODBA.PPSOCCURRENCE PNODEOCC, INFODBA.PITEM PNCI, INFODBA.PSTRUCTURE_REVISIONS PNSTR,
            INFODBA.PITEMREVISION PNPREV, INFODBA.PITEM PNPI
            WHERE POCC.PUID = PREL.RPRIMARY_OBJECTU
            AND PREL.RSECONDARY_OBJECTU = PNODE.PUID
            AND PNODE.RPATH_ROOTU = PROOT.PUID
            AND PROOT.RTRACKED_ITEMU = RI.PUID
            AND RI.PITEM_ID = #{productId, jdbcType=VARCHAR}
            AND PNODE.ROCC_THREADU = PNODEOCC.ROCC_THREADU
            AND PNODEOCC.RCHILD_ITEMU = PNCI.PUID
            AND PNODEOCC.RPARENT_BVRU = PNSTR.PVALU_0
            AND PNSTR.PUID = PNPREV.PUID
            AND PNPREV.RITEMS_TAGU = PNPI.PUID
            AND PNPREV.PITEM_REVISION_ID IN (
               SELECT DISTINCT MAX(MAX_REV.PITEM_REVISION_ID)
               FROM INFODBA.PITEMREVISION MAX_REV
               WHERE MAX_REV.RITEMS_TAGU = PNPREV.RITEMS_TAGU
            )
            AND EXISTS(
               SELECT 1
               FROM INFODBA.PRELEASE_STATUS_LIST PSL, INFODBA.PRELEASESTATUS PST
               WHERE PSL.PUID = PNPREV.PUID
               AND PSL.PVALU_0 = PST.PUID
            )
         ) EBOM_ITEM_ID
         FROM INFODBA.PITEM PI, INFODBA.PITEMREVISION PREV, INFODBA.PSTRUCTURE_REVISIONS PSTR, INFODBA.PPSOCCURRENCE POCC,
         INFODBA.PITEM CI, INFODBA.PWORKSPACEOBJECT CWSO, INFODBA.PPSOCCURRENCETYPE OT, infodba.pworkspaceobject pwso
         WHERE PI.PUID = PREV.RITEMS_TAGU
         AND PI.PUID = PWSO.PUID
         AND PREV.PUID = PSTR.PUID
         AND PSTR.PVALU_0 = POCC.RPARENT_BVRU
         AND POCC.RCHILD_ITEMU = CI.PUID
         AND POCC.ROCC_TYPEU = OT.PUID(+)
         AND CI.PUID = CWSO.PUID
	     START WITH PI.PUID = #{targetUid, jdbcType=VARCHAR}
	     CONNECT BY PRIOR CI.PUID = PI.PUID
	                AND (OT.PNAME IS NULL OR OT.PNAME = 'MEConsumed')
	                AND PWSO.POBJECT_TYPE IN ('M7_BOPShop', 'M7_BOPLine', 'M7_BOPStation', 'M7_BOPBodyOp', 'M7_BOPAssyOp', 'M7_BOPPaintOp'))
	     WHERE CITEM_ID != EBOM_ITEM_ID
	     ORDER BY PITEM_ID
	</select>
	
	<!-- 변경전 / 변경후 비교해서 변경된 내용만 List 하는 Query -->
	<select id="getChangedStructureCompareResultList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		WITH OLD_STRUCTURE AS (
			SELECT PPSOCCURRENCE.ROCC_THREADU,
				PPSOCCURRENCE.RCHILD_ITEMU,
				PPSOCCURRENCE.PSEQ_NO AS PSEQ_NO,
				PPSOCCURRENCE.PORDER_NO AS SHOWN_ON_NO,
				PPSOCCURRENCE.PQTY_VALUE,
				PPSOCCURRENCE.PUID AS OCC_PUID,
				OLD_REV_VIEW.ITEM_ID AS PARENT_ITEM_ID,
				OLD_REV_VIEW.ITEM_REV_ID AS PARENT_REV_ID,
				PPSOCCURRENCETYPE.PNAME AS OCC_TYPE_NAME,
				DBMS_LOB.SUBSTR (IMAN_MVLBLOB.DATA, 4000, 1) AS OPTION_COND
			FROM INFODBA.PPSOCCURRENCE,
				INFODBA.PPSOCCURRENCETYPE,
				(
					SELECT PSTRUCTURE_REVISIONS.PVALU_0 AS BOMVIEW_PUID,
							PITEMREVISION.PUID AS ITEM_REV_PUID,
							PITEM.PUID AS ITEM_PUID,
							PITEM.PITEM_ID AS ITEM_ID,
							PITEMREVISION.PITEM_REVISION_ID AS ITEM_REV_ID,
							PWORKSPACEOBJECT.POBJECT_TYPE AS ITEM_TYPE
					FROM INFODBA.PITEMREVISION,
							INFODBA.PSTRUCTURE_REVISIONS,
							INFODBA.PITEM,
							INFODBA.PWORKSPACEOBJECT
					  WHERE PITEMREVISION.PUID = PSTRUCTURE_REVISIONS.PUID
							AND PITEMREVISION.RITEMS_TAGU = PITEM.PUID
							AND PWORKSPACEOBJECT.PUID = PITEM.PUID
							AND PITEM.PITEM_ID = #{operationItemId, jdbcType=VARCHAR}
							AND PITEMREVISION.PITEM_REVISION_ID = #{oldRevisionId, jdbcType=VARCHAR}
				) OLD_REV_VIEW,
				INFODBA.IMAN_MVLBLOB
				WHERE     PPSOCCURRENCE.RPARENT_BVRU = OLD_REV_VIEW.BOMVIEW_PUID
					AND PPSOCCURRENCETYPE.PUID(+) = PPSOCCURRENCE.ROCC_TYPEU
					AND PPSOCCURRENCE.PUID = IMAN_MVLBLOB.NAME(+)
		),
		NEW_STRUCTURE AS (
			SELECT PPSOCCURRENCE.ROCC_THREADU,
				PPSOCCURRENCE.RCHILD_ITEMU,
				PPSOCCURRENCE.PSEQ_NO AS PSEQ_NO,
				PPSOCCURRENCE.PORDER_NO AS SHOWN_ON_NO,
				PPSOCCURRENCE.PQTY_VALUE,
				PPSOCCURRENCE.PUID AS OCC_PUID,
				NEW_REV_VIEW.ITEM_ID AS PARENT_ITEM_ID,
				NEW_REV_VIEW.ITEM_REV_ID AS PARENT_REV_ID,
				PPSOCCURRENCETYPE.PNAME AS OCC_TYPE_NAME,
				DBMS_LOB.SUBSTR (IMAN_MVLBLOB.DATA, 4000, 1) AS OPTION_COND
			FROM INFODBA.PPSOCCURRENCE,
				INFODBA.PPSOCCURRENCETYPE,
				(
					SELECT PSTRUCTURE_REVISIONS.PVALU_0 AS BOMVIEW_PUID,
							PITEMREVISION.PUID AS ITEM_REV_PUID,
							PITEM.PUID AS ITEM_PUID,
							PITEM.PITEM_ID AS ITEM_ID,
							PITEMREVISION.PITEM_REVISION_ID AS ITEM_REV_ID,
							PWORKSPACEOBJECT.POBJECT_TYPE AS ITEM_TYPE
					   FROM INFODBA.PITEMREVISION,
							INFODBA.PSTRUCTURE_REVISIONS,
							INFODBA.PITEM,
							INFODBA.PWORKSPACEOBJECT
					  WHERE PITEMREVISION.PUID = PSTRUCTURE_REVISIONS.PUID
							AND PITEMREVISION.RITEMS_TAGU = PITEM.PUID
							AND PWORKSPACEOBJECT.PUID = PITEM.PUID
							AND PITEM.PITEM_ID = #{operationItemId, jdbcType=VARCHAR}
							AND PITEMREVISION.PITEM_REVISION_ID = #{newRevisionId, jdbcType=VARCHAR}
				) NEW_REV_VIEW,
				INFODBA.IMAN_MVLBLOB
			WHERE     PPSOCCURRENCE.RPARENT_BVRU = NEW_REV_VIEW.BOMVIEW_PUID
				AND PPSOCCURRENCETYPE.PUID(+) = PPSOCCURRENCE.ROCC_TYPEU
				AND PPSOCCURRENCE.PUID = IMAN_MVLBLOB.NAME(+)
		),
		NOT_CHANGED AS (
			SELECT OLD_STRUCTURE.ROCC_THREADU  AS OCC_THREADU,
				OLD_STRUCTURE.PSEQ_NO AS OLD_SEQ_NO,
				OLD_STRUCTURE.RCHILD_ITEMU AS OLD_CHILD_ITEMU,
				OLD_STRUCTURE.OPTION_COND AS OLD_OPTION_COND,
				OLD_STRUCTURE.SHOWN_ON_NO AS OLD_ORDER_NO,
				OLD_STRUCTURE.PQTY_VALUE AS OLD_QTY_V,
				NEW_STRUCTURE.PSEQ_NO AS NEW_SEQ_NO,
				NEW_STRUCTURE.RCHILD_ITEMU AS NEW_CHILD_ITEMU,
				NEW_STRUCTURE.OPTION_COND AS NEW_OPTION_COND,
				NEW_STRUCTURE.SHOWN_ON_NO AS NEW_ORDER_NO,
				NEW_STRUCTURE.PQTY_VALUE AS NEW_QTY_V,
				'N/C' AS CHANGE_TYPE,
				NEW_STRUCTURE.OCC_TYPE_NAME AS OCC_TYPE_NAME,
				NEW_STRUCTURE.OCC_PUID AS NEW_OCC_PUID,
				OLD_STRUCTURE.OCC_PUID AS OLD_OCC_PUID
			FROM OLD_STRUCTURE, NEW_STRUCTURE
			WHERE     OLD_STRUCTURE.ROCC_THREADU = NEW_STRUCTURE.ROCC_THREADU
				AND OLD_STRUCTURE.RCHILD_ITEMU = NEW_STRUCTURE.RCHILD_ITEMU
		),
		REPLACED_ITEMS AS (
			SELECT OLD_STRUCTURE.ROCC_THREADU  AS OCC_THREADU,
				OLD_STRUCTURE.PSEQ_NO AS OLD_SEQ_NO,
				OLD_STRUCTURE.RCHILD_ITEMU AS OLD_CHILD_ITEMU,
				OLD_STRUCTURE.OPTION_COND AS OLD_OPTION_COND,
				OLD_STRUCTURE.SHOWN_ON_NO AS OLD_ORDER_NO,
				OLD_STRUCTURE.PQTY_VALUE AS OLD_QTY_V,
				NEW_STRUCTURE.PSEQ_NO AS NEW_SEQ_NO,
				NEW_STRUCTURE.RCHILD_ITEMU AS NEW_CHILD_ITEMU,
				NEW_STRUCTURE.OPTION_COND AS NEW_OPTION_COND,
				NEW_STRUCTURE.SHOWN_ON_NO AS NEW_ORDER_NO,
				NEW_STRUCTURE.PQTY_VALUE AS NEW_QTY_V,
				'REP' AS CHANGE_TYPE,
				NEW_STRUCTURE.OCC_TYPE_NAME AS OCC_TYPE_NAME,
				NEW_STRUCTURE.OCC_PUID AS NEW_OCC_PUID,
				OLD_STRUCTURE.OCC_PUID AS OLD_OCC_PUID
			FROM OLD_STRUCTURE, NEW_STRUCTURE
			WHERE OLD_STRUCTURE.ROCC_THREADU = NEW_STRUCTURE.ROCC_THREADU
				AND OLD_STRUCTURE.RCHILD_ITEMU <![CDATA[<>]]> NEW_STRUCTURE.RCHILD_ITEMU
		),
		DELETED_ITEMS AS (
			SELECT OLD_STRUCTURE.ROCC_THREADU  AS OCC_THREADU,
				OLD_STRUCTURE.PSEQ_NO AS OLD_SEQ_NO,
				OLD_STRUCTURE.RCHILD_ITEMU AS OLD_CHILD_ITEMU,
				OLD_STRUCTURE.OPTION_COND AS OLD_OPTION_COND,
				OLD_STRUCTURE.SHOWN_ON_NO AS OLD_ORDER_NO,
				OLD_STRUCTURE.PQTY_VALUE AS OLD_QTY_V,
				NULL AS NEW_SEQ_NO,
				NULL AS NEW_CHILD_ITEMU,
				NULL AS NEW_OPTION_COND,
				NULL AS NEW_ORDER_NO,
				NULL AS NEW_QTY_V,
				'DEL' AS CHANGE_TYPE,
				OLD_STRUCTURE.OCC_TYPE_NAME AS OCC_TYPE_NAME,
				NULL AS NEW_OCC_PUID,
				OLD_STRUCTURE.OCC_PUID AS OLD_OCC_PUID
			FROM OLD_STRUCTURE
			WHERE OLD_STRUCTURE.ROCC_THREADU IN
				(
					SELECT OLD_STRUCTURE.ROCC_THREADU AS OCC_THREADU
					FROM OLD_STRUCTURE
					MINUS
					SELECT NEW_STRUCTURE.ROCC_THREADU AS OCC_THREADU
					FROM NEW_STRUCTURE
				)
		),
		ADDED_ITEMS AS (
			SELECT NEW_STRUCTURE.ROCC_THREADU  AS OCC_THREADU,
				NULL AS OLD_SEQ_NO,
				NULL AS OLD_CHILD_ITEMU,
				NULL AS OLD_OPTION_COND,
				NULL AS OLD_ORDER_NO,
				NULL AS OLD_QTY_V,
				NEW_STRUCTURE.PSEQ_NO AS NEW_SEQ_NO,
				NEW_STRUCTURE.RCHILD_ITEMU AS NEW_CHILD_ITEMU,
				NEW_STRUCTURE.OPTION_COND AS NEW_OPTION_COND,
				NEW_STRUCTURE.SHOWN_ON_NO AS NEW_ORDER_NO,
				NEW_STRUCTURE.PQTY_VALUE AS NEW_QTY_V,
				'ADD' AS CHANGE_TYPE,
				NEW_STRUCTURE.OCC_TYPE_NAME AS OCC_TYPE_NAME,
				NEW_STRUCTURE.OCC_PUID AS NEW_OCC_PUID,
				NULL AS OLD_OCC_PUID
			FROM NEW_STRUCTURE
			WHERE NEW_STRUCTURE.ROCC_THREADU IN
				(
					SELECT NEW_STRUCTURE.ROCC_THREADU AS OCC_THREADU
					FROM NEW_STRUCTURE
					MINUS
					SELECT OLD_STRUCTURE.ROCC_THREADU AS OCC_THREADU
					FROM OLD_STRUCTURE
				)
		)
		SELECT OCC_THREADU,
		         OLD_CHILD_ITEMU, OLD_OPTION_COND, OLD_ORDER_NO, OLD_SEQ_NO, OLD_QTY_V, OLD_OCC_PUID,
		         NEW_CHILD_ITEMU, NEW_OPTION_COND, NEW_ORDER_NO, NEW_SEQ_NO, NEW_QTY_V, NEW_OCC_PUID,
		         CHANGE_TYPE, OCC_TYPE_NAME
		FROM (
				SELECT OCC_THREADU,
					OLD_CHILD_ITEMU, OLD_OPTION_COND, OLD_ORDER_NO, OLD_SEQ_NO, OLD_QTY_V, OLD_OCC_PUID,
					NEW_CHILD_ITEMU, NEW_OPTION_COND, NEW_ORDER_NO, NEW_SEQ_NO, NEW_QTY_V, NEW_OCC_PUID,
					CHANGE_TYPE, OCC_TYPE_NAME
				FROM ADDED_ITEMS
				UNION
				SELECT OCC_THREADU,
					OLD_CHILD_ITEMU, OLD_OPTION_COND, OLD_ORDER_NO, OLD_SEQ_NO, OLD_QTY_V, OLD_OCC_PUID,
					NEW_CHILD_ITEMU, NEW_OPTION_COND, NEW_ORDER_NO, NEW_SEQ_NO, NEW_QTY_V, NEW_OCC_PUID,
					CHANGE_TYPE, OCC_TYPE_NAME
				FROM NOT_CHANGED
				UNION
				SELECT OCC_THREADU,
					OLD_CHILD_ITEMU, OLD_OPTION_COND, OLD_ORDER_NO, OLD_SEQ_NO, OLD_QTY_V, OLD_OCC_PUID,
					NEW_CHILD_ITEMU, NEW_OPTION_COND, NEW_ORDER_NO, NEW_SEQ_NO, NEW_QTY_V, NEW_OCC_PUID,
					CHANGE_TYPE, OCC_TYPE_NAME
				FROM REPLACED_ITEMS
				UNION
				SELECT OCC_THREADU,
					OLD_CHILD_ITEMU, OLD_OPTION_COND, OLD_ORDER_NO, OLD_SEQ_NO, OLD_QTY_V, OLD_OCC_PUID,
					NEW_CHILD_ITEMU, NEW_OPTION_COND, NEW_ORDER_NO, NEW_SEQ_NO, NEW_QTY_V, NEW_OCC_PUID,
					CHANGE_TYPE, OCC_TYPE_NAME
				FROM DELETED_ITEMS
			)
		WHERE CHANGE_TYPE <![CDATA[<>]]> 'N/C'
		ORDER BY CHANGE_TYPE, OLD_CHILD_ITEMU, OLD_OPTION_COND, OLD_SEQ_NO, NEW_CHILD_ITEMU, NEW_OPTION_COND, NEW_SEQ_NO
	</select>
	
	<!-- Item의 Revision 정보를 List 하는 Query  -->
	<select id="getItemRevisionList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT DISTINCT PITEMREVISION.PUID AS REVISTION_PUID,
			REVISION_OBJECT.POBJECT_TYPE AS REVISION_TYPE,
			ITEM_OBJECT.POBJECT_TYPE AS ITEM_TYPE,
			PITEM.PITEM_ID AS ITEM_ID,
			PITEMREVISION.PITEM_REVISION_ID AS ITEM_REV_ID,
			REVISION_OBJECT.POBJECT_NAME AS NAME,
			PRELEASESTATUS.PNAME AS STATUS_NAME,
			PRELEASESTATUS.PDATE_RELEASED AS RELEASED_DATE
		FROM INFODBA.PITEM,
			INFODBA.PITEMREVISION,
			INFODBA.PRELEASE_STATUS_LIST,
			INFODBA.PRELEASESTATUS,
			INFODBA.PWORKSPACEOBJECT ITEM_OBJECT,
			INFODBA.PWORKSPACEOBJECT REVISION_OBJECT
		WHERE PITEMREVISION.RITEMS_TAGU = PITEM.PUID
			AND ITEM_OBJECT.PUID = PITEM.PUID
			AND REVISION_OBJECT.PUID = PITEMREVISION.PUID
			AND PRELEASE_STATUS_LIST.PVALU_0 = PRELEASESTATUS.PUID
			AND PITEMREVISION.PUID = PRELEASE_STATUS_LIST.PUID
			AND PITEM.PUID = #{itemPuid, jdbcType=VARCHAR}
		ORDER BY RELEASED_DATE DESC
	</select>
	
	<select id="getOperationEPLCrationDate" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT DISTINCT TO_DATE(PARENT_MOD_DATE, 'YYYY-MM-DD HH24:MI') AS PARENT_MOD_DATE
		FROM MECO_EPL
		WHERE MECONO=#{mecoItemId, jdbcType=VARCHAR} 
			AND PARENTNO=#{operationItemId, jdbcType=VARCHAR}
	</select>

	<!-- cf-2037 MEPL 삭제 시 모 또는 자로 삭제 할 수 있도록 추가함.
	-->
	<delete id="deleteOperationEPL" parameterType="java.util.HashMap">
		DELETE MECO_EPL 
		WHERE MECONO=#{mecoItemId, jdbcType=VARCHAR} 
		<if test="operationItemId != null">
			AND PARENTNO=#{operationItemId, jdbcType=VARCHAR}
		</if>
		<if test="newChildItemId != null">
			AND NEW_CHILD_NO=#{newChildItemId, jdbcType=VARCHAR}
		</if>
	</delete>
	
	<insert id="insertOperationMECOEPL" parameterType="java.util.HashMap">
		INSERT INTO MECO_EPL (
			MECONO,
			SHOPNO,
			PAREUNTPUID,
			PARENTTYPE,
			PARENTNO,
			PARENTREV,
			PARENTNAME,
			OLD_CHILD_PUID,
			OLD_CHILD_TYPE,
			OLD_CHILD_NO,
			OLD_CHILD_REV,
			OLD_CHILD_NAME,
			OLD_SHOWN_ON_NO,
			OLD_QTY,
			OLD_VC,
			OLD_OCC_UID,
			NEW_CHILD_PUID,
			NEW_CHILD_TYPE,
			NEW_CHILD_NO,
			NEW_CHILD_REV,
			NEW_CHILD_NAME,
			NEW_SHOWN_ON_NO,
			NEW_QTY,
			NEW_VC,
			NEW_OCC_UID,
			ECO_NO,
			USERID,
			SEQ,
			PARENT_MOD_DATE,
			ROW_CREATION_DATE
		) VALUES (
			#{mecoNo, jdbcType=VARCHAR}
		   ,#{shopNo, jdbcType=VARCHAR}
		   ,#{parentPuid, jdbcType=VARCHAR}
		   ,#{parentType, jdbcType=VARCHAR}
		   ,#{parentNo, jdbcType=VARCHAR}
		   ,#{parentRev, jdbcType=VARCHAR}
		   ,#{parentName, jdbcType=VARCHAR}
		   ,#{old_child_puid, jdbcType=VARCHAR}
		   ,#{old_child_type, jdbcType=VARCHAR}
		   ,#{old_child_no, jdbcType=VARCHAR}
		   ,#{old_child_rev, jdbcType=VARCHAR}
		   ,#{old_child_name, jdbcType=VARCHAR}
		   ,#{old_shown_no_no, jdbcType=VARCHAR}
		   ,#{old_qty, jdbcType=VARCHAR}
		   ,#{old_vc, jdbcType=VARCHAR}
		   ,#{old_occ_uid, jdbcType=VARCHAR}
		   ,#{new_child_puid, jdbcType=VARCHAR}
		   ,#{new_child_type, jdbcType=VARCHAR}
		   ,#{new_child_no, jdbcType=VARCHAR}
		   ,#{new_child_rev, jdbcType=VARCHAR}
		   ,#{new_child_name, jdbcType=VARCHAR}
		   ,#{new_shown_no_no, jdbcType=VARCHAR}
		   ,#{new_qty, jdbcType=VARCHAR}
		   ,#{new_vc, jdbcType=VARCHAR}
		   ,#{new_occ_uid, jdbcType=VARCHAR}
		   ,#{ecoNo, jdbcType=VARCHAR}
		   ,#{userId, jdbcType=VARCHAR}
		   ,#{seq, jdbcType=VARCHAR}
		   ,#{parent_mod_date, jdbcType=VARCHAR}
		   ,#{op_up_date, jdbcType=VARCHAR}
		)
	</insert>
	
	<select id="getMissingMEPLObjectList" parameterType="java.util.HashMap" resultType="java.util.HashMap">	
		SELECT IR.PUID AS ITEM_REV_PUID, 
			ITM.PITEM_ID AS ITEM_ID,
			IR.PITEM_REVISION_ID AS ITEM_REV_ID,
			W.POBJECT_NAME AS ITEM_REV_NAME, 
			W.POBJECT_TYPE AS ITEM_REV_TYPE
		FROM INFODBA.PIMANRELATION R, 
			INFODBA.PIMANTYPE T,
			INFODBA.PITEM ITM, 
			INFODBA.PITEMREVISION IR, 
			INFODBA.PWORKSPACEOBJECT W
		WHERE R.RPRIMARY_OBJECTU IN (
					SELECT PITEMREVISION.PUID AS ITEM_REV_PUID
					FROM INFODBA.PITEMREVISION,
						INFODBA.PITEM,
						INFODBA.PWORKSPACEOBJECT
					WHERE PITEMREVISION.RITEMS_TAGU = PITEM.PUID
						AND PWORKSPACEOBJECT.PUID = PITEM.PUID
						AND PITEM.PITEM_ID = #{mecoItemId, jdbcType=VARCHAR} 
						AND PITEMREVISION.PITEM_REVISION_ID = '000'
						AND PWORKSPACEOBJECT.POBJECT_TYPE='M7_MECO'
				)
			AND R.RRELATION_TYPEU = T.PUID
			AND T.PTYPE_NAME = 'CMHasSolutionItem'
			AND R.RSECONDARY_OBJECTU = IR.PUID
			AND IR.PUID = W.PUID
			AND W.POBJECT_TYPE IN (
				'M7_BOPShopRevision',
				'M7_BOPLineRevision',
				'M7_BOPStationRevision',
				'M7_BOPAssyOpRevision',
				'M7_BOPPaintOpRevision',
				'M7_BOPBodyOpRevision',
				'M7_BOPWeldOPRevision'
			)
			AND IR.RITEMS_TAGU = ITM.PUID
			AND IR.PUID NOT IN (
				<!-- cf-2037 solution에 추가된 대상은 개정이거나 add거나 replace이다.
				     그래서 MEPL 테이블에서 new child에 반드시 있어야 한다.
				     모로 반드시 있을 이유가 없다. 개정 후 하위를 변경한다면 모에 들어가지만 아니라면???? 들어가야하나?
				     PAREUNTPUID 에서 NEW_CHILD_PUID 로 변경함.
				 SELECT DISTINCT PAREUNTPUID -->
				SELECT DISTINCT NEW_CHILD_PUID
				FROM MECO_EPL
				WHERE MECONO = #{mecoItemId, jdbcType=VARCHAR} 
			)
		ORDER BY ITEM_ID
	</select>

	<select id="getMEPLResultList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		WITH OLD_PARENT_REV_VIEW AS (
		    SELECT PSTRUCTURE_REVISIONS.PVALU_0 AS BOMVIEW_PUID,
		            PITEM.PUID AS ITEM_PUID,
		            PITEMREVISION.PUID AS ITEM_REV_PUID,
		            PITEM.PITEM_ID AS ITEM_ID,
		            PITEMREVISION.PITEM_REVISION_ID AS ITEM_REV_ID,
		            ITEMWSO.POBJECT_NAME AS ITEM_NAME,
		            REVWSO.POBJECT_TYPE AS ITEM_REV_TYPE,
		            PPSBOMVIEWREVISION.PSTRUCT_LAST_MOD_DATE AS STRUCT_LAST_MOD_DATE
		    FROM INFODBA.PITEMREVISION,
		            INFODBA.PSTRUCTURE_REVISIONS,
		            INFODBA.PITEM,
		            INFODBA.PWORKSPACEOBJECT REVWSO,
		            INFODBA.PWORKSPACEOBJECT ITEMWSO,
		            INFODBA.PPSBOMVIEWREVISION
		      WHERE PITEMREVISION.PUID = PSTRUCTURE_REVISIONS.PUID
		            AND PSTRUCTURE_REVISIONS.PVALU_0 = PPSBOMVIEWREVISION.PUID
		            AND PITEMREVISION.RITEMS_TAGU = PITEM.PUID
		            AND ITEMWSO.PUID = PITEM.PUID
		            AND REVWSO.PUID = PITEMREVISION.PUID
		            AND PITEM.PITEM_ID = #{parentItemId, jdbcType=VARCHAR}
		            AND PITEMREVISION.PITEM_REVISION_ID = #{oldParentRevId, jdbcType=VARCHAR}
		),
		NEW_PARENT_REV_VIEW AS (
		    SELECT PSTRUCTURE_REVISIONS.PVALU_0 AS BOMVIEW_PUID,
		            PITEM.PUID AS ITEM_PUID,
		            PITEMREVISION.PUID AS ITEM_REV_PUID,
		            PITEM.PITEM_ID AS ITEM_ID,
		            PITEMREVISION.PITEM_REVISION_ID AS ITEM_REV_ID,
		            ITEMWSO.POBJECT_NAME AS ITEM_NAME,
		            REVWSO.POBJECT_TYPE AS ITEM_REV_TYPE,
		            PPSBOMVIEWREVISION.PSTRUCT_LAST_MOD_DATE AS STRUCT_LAST_MOD_DATE
		    FROM INFODBA.PITEMREVISION,
		            INFODBA.PSTRUCTURE_REVISIONS,
		            INFODBA.PITEM,
		            INFODBA.PWORKSPACEOBJECT REVWSO,
		            INFODBA.PWORKSPACEOBJECT ITEMWSO,
		            INFODBA.PPSBOMVIEWREVISION
		      WHERE PITEMREVISION.PUID = PSTRUCTURE_REVISIONS.PUID
		            AND PSTRUCTURE_REVISIONS.PVALU_0 = PPSBOMVIEWREVISION.PUID
		            AND PITEMREVISION.RITEMS_TAGU = PITEM.PUID
		            AND ITEMWSO.PUID = PITEM.PUID
		            AND REVWSO.PUID = PITEMREVISION.PUID
		            AND PITEM.PITEM_ID = #{parentItemId, jdbcType=VARCHAR}
		            AND PITEMREVISION.PITEM_REVISION_ID = #{newParentRevId, jdbcType=VARCHAR}
		),
		OLD_STRUCTURE AS (
		    SELECT PPSOCCURRENCE.ROCC_THREADU,
		        PPSOCCURRENCE.RCHILD_ITEMU,
		        PITEMREVISION.PUID AS REV_PUID,
		        PPSOCCURRENCE.PSEQ_NO AS PSEQ_NO,
		        PPSOCCURRENCE.PORDER_NO AS ORDER_NO,
		        PPSOCCURRENCE.PQTY_VALUE,
		        PPSOCCURRENCE.PUID AS OCC_PUID,
		        PPSOCCURRENCE.RNOTES_REFU AS OCC_NOTE_PUID,
		        PPSOCCURRENCETYPE.PNAME AS OCC_TYPE_NAME,
		        DBMS_LOB.SUBSTR (IMAN_MVLBLOB.DATA, 4000, 1) AS OPTION_COND
		    FROM INFODBA.PPSOCCURRENCE,
		        INFODBA.PPSOCCURRENCETYPE,
		        INFODBA.PITEMREVISION,
		        OLD_PARENT_REV_VIEW,
		        INFODBA.IMAN_MVLBLOB
	        WHERE   PPSOCCURRENCE.RPARENT_BVRU = OLD_PARENT_REV_VIEW.BOMVIEW_PUID
	            AND PPSOCCURRENCETYPE.PUID(+) = PPSOCCURRENCE.ROCC_TYPEU
	            AND PPSOCCURRENCE.PUID = IMAN_MVLBLOB.NAME(+)
	            AND PITEMREVISION.PUID = (
	                    SELECT MAX(T_R.PUID) KEEP(DENSE_RANK FIRST ORDER BY T_PAO.PCREATION_DATE DESC, T_R.PSEQUENCE_ID DESC)
	                    FROM   INFODBA.PITEM T_I, INFODBA.PITEMREVISION T_R, INFODBA.PPOM_APPLICATION_OBJECT T_PAO, INFODBA.PWORKSPACEOBJECT T_WSO
	                    WHERE  T_I.PUID = T_R.RITEMS_TAGU
	                    AND    T_R.PUID = T_PAO.PUID
	                    AND    T_R.PUID = T_WSO.PUID
	                    AND    T_WSO.PDATE_RELEASED IS NOT NULL
	                    AND    T_I.PUID = PPSOCCURRENCE.RCHILD_ITEMU
	            )
	            <if test="childItemId != null">
		        AND PPSOCCURRENCE.RCHILD_ITEMU = (SELECT PUID FROM INFODBA.PITEM WHERE PITEM_ID = #{childItemId, jdbcType=VARCHAR})
		        </if>
		),
		NEW_STRUCTURE AS (
		    SELECT PPSOCCURRENCE.ROCC_THREADU,
		        PPSOCCURRENCE.RCHILD_ITEMU,
		        PITEMREVISION.PUID AS REV_PUID,
		        PPSOCCURRENCE.PSEQ_NO AS PSEQ_NO,
		        PPSOCCURRENCE.PORDER_NO AS ORDER_NO,
		        PPSOCCURRENCE.PQTY_VALUE,
		        PPSOCCURRENCE.PUID AS OCC_PUID,
		        PPSOCCURRENCE.RNOTES_REFU AS OCC_NOTE_PUID,
		        PPSOCCURRENCETYPE.PNAME AS OCC_TYPE_NAME,
		        DBMS_LOB.SUBSTR (IMAN_MVLBLOB.DATA, 4000, 1) AS OPTION_COND
		    FROM INFODBA.PPSOCCURRENCE,
		        INFODBA.PPSOCCURRENCETYPE,
		        INFODBA.PITEMREVISION,
		        NEW_PARENT_REV_VIEW,
		        INFODBA.IMAN_MVLBLOB
		    WHERE     PPSOCCURRENCE.RPARENT_BVRU = NEW_PARENT_REV_VIEW.BOMVIEW_PUID
		        AND PPSOCCURRENCETYPE.PUID(+) = PPSOCCURRENCE.ROCC_TYPEU
		        AND PPSOCCURRENCE.PUID = IMAN_MVLBLOB.NAME(+)
		        AND PITEMREVISION.PUID = (
		                SELECT MAX(T_R.PUID) KEEP(DENSE_RANK FIRST ORDER BY T_PAO.PCREATION_DATE DESC, T_R.PSEQUENCE_ID DESC)
		                FROM   INFODBA.PITEM T_I, INFODBA.PITEMREVISION T_R, INFODBA.PPOM_APPLICATION_OBJECT T_PAO, INFODBA.PWORKSPACEOBJECT T_WSO
		                WHERE  T_I.PUID = T_R.RITEMS_TAGU
		                AND    T_R.PUID = T_PAO.PUID
		                AND    T_R.PUID = T_WSO.PUID
		                AND    T_I.PUID = PPSOCCURRENCE.RCHILD_ITEMU
		        )
	            <if test="childItemId != null">
		        AND PPSOCCURRENCE.RCHILD_ITEMU = (SELECT PUID FROM INFODBA.PITEM WHERE PITEM_ID = #{childItemId, jdbcType=VARCHAR})
		        </if>
		),
		CHANGED AS (
		    SELECT 
		        OLD_STRUCTURE.ROCC_THREADU  AS OCC_THREADU,
		        OLD_STRUCTURE.PSEQ_NO AS OLD_SEQ_NO,
		        OLD_STRUCTURE.RCHILD_ITEMU AS OLD_CHILD_ITEMU,
		        OLD_STRUCTURE.OPTION_COND AS OLD_OPTION_COND,
		        OLD_STRUCTURE.ORDER_NO AS OLD_ORDER_NO,
		        OLD_STRUCTURE.PQTY_VALUE AS OLD_QTY_V,
		        OLD_STRUCTURE.REV_PUID AS OLD_CHILD_REVU,
		        NEW_STRUCTURE.PSEQ_NO AS NEW_SEQ_NO,
		        NEW_STRUCTURE.RCHILD_ITEMU AS NEW_CHILD_ITEMU,
		        NEW_STRUCTURE.OPTION_COND AS NEW_OPTION_COND,
		        NEW_STRUCTURE.ORDER_NO AS NEW_ORDER_NO,
		        NEW_STRUCTURE.PQTY_VALUE AS NEW_QTY_V,
		        NEW_STRUCTURE.REV_PUID AS NEW_CHILD_REVU,
		        'C' AS CHANGE_TYPE,
		        NEW_STRUCTURE.OCC_TYPE_NAME AS OCC_TYPE_NAME,
		        NEW_STRUCTURE.OCC_PUID AS NEW_OCC_PUID,
		        OLD_STRUCTURE.OCC_PUID AS OLD_OCC_PUID,
		        NEW_STRUCTURE.OCC_NOTE_PUID AS NEW_OCC_NOTE_PUID,
		        OLD_STRUCTURE.OCC_NOTE_PUID AS OLD_OCC_NOTE_PUID
		    FROM OLD_STRUCTURE, NEW_STRUCTURE
		    WHERE     OLD_STRUCTURE.ROCC_THREADU = NEW_STRUCTURE.ROCC_THREADU
		        AND OLD_STRUCTURE.RCHILD_ITEMU = NEW_STRUCTURE.RCHILD_ITEMU
		        AND (
		        OLD_STRUCTURE.REV_PUID != NEW_STRUCTURE.REV_PUID
		        OR OLD_STRUCTURE.PSEQ_NO != NEW_STRUCTURE.PSEQ_NO
		        OR OLD_STRUCTURE.OPTION_COND != NEW_STRUCTURE.OPTION_COND
		        OR OLD_STRUCTURE.ORDER_NO != NEW_STRUCTURE.ORDER_NO
		        OR OLD_STRUCTURE.PQTY_VALUE != NEW_STRUCTURE.PQTY_VALUE
		        )
		),
		REPLACED_ITEMS AS (
		    SELECT 
		        OLD_STRUCTURE.ROCC_THREADU  AS OCC_THREADU,
		        OLD_STRUCTURE.PSEQ_NO AS OLD_SEQ_NO,
		        OLD_STRUCTURE.RCHILD_ITEMU AS OLD_CHILD_ITEMU,
		        OLD_STRUCTURE.OPTION_COND AS OLD_OPTION_COND,
		        OLD_STRUCTURE.ORDER_NO AS OLD_ORDER_NO,
		        OLD_STRUCTURE.PQTY_VALUE AS OLD_QTY_V,
		        OLD_STRUCTURE.REV_PUID AS OLD_CHILD_REVU,
		        NEW_STRUCTURE.PSEQ_NO AS NEW_SEQ_NO,
		        NEW_STRUCTURE.RCHILD_ITEMU AS NEW_CHILD_ITEMU,
		        NEW_STRUCTURE.OPTION_COND AS NEW_OPTION_COND,
		        NEW_STRUCTURE.ORDER_NO AS NEW_ORDER_NO,
		        NEW_STRUCTURE.PQTY_VALUE AS NEW_QTY_V,
		        NEW_STRUCTURE.REV_PUID AS NEW_CHILD_REVU,
		        'R' AS CHANGE_TYPE,
		        NEW_STRUCTURE.OCC_TYPE_NAME AS OCC_TYPE_NAME,
		        NEW_STRUCTURE.OCC_PUID AS NEW_OCC_PUID,
		        OLD_STRUCTURE.OCC_PUID AS OLD_OCC_PUID,
		        NEW_STRUCTURE.OCC_NOTE_PUID AS NEW_OCC_NOTE_PUID,
		        OLD_STRUCTURE.OCC_NOTE_PUID AS OLD_OCC_NOTE_PUID
		    FROM OLD_STRUCTURE, NEW_STRUCTURE
		    WHERE OLD_STRUCTURE.ROCC_THREADU = NEW_STRUCTURE.ROCC_THREADU
		        AND OLD_STRUCTURE.RCHILD_ITEMU != NEW_STRUCTURE.RCHILD_ITEMU
		),
		DELETED_ITEMS AS (
		    SELECT 
		        OLD_STRUCTURE.ROCC_THREADU  AS OCC_THREADU,
		        OLD_STRUCTURE.PSEQ_NO AS OLD_SEQ_NO,
		        OLD_STRUCTURE.RCHILD_ITEMU AS OLD_CHILD_ITEMU,
		        OLD_STRUCTURE.OPTION_COND AS OLD_OPTION_COND,
		        OLD_STRUCTURE.ORDER_NO AS OLD_ORDER_NO,
		        OLD_STRUCTURE.PQTY_VALUE AS OLD_QTY_V,
		        OLD_STRUCTURE.REV_PUID AS OLD_CHILD_REVU,
		        NULL AS NEW_SEQ_NO,
		        NULL AS NEW_CHILD_ITEMU,
		        NULL AS NEW_OPTION_COND,
		        NULL AS NEW_ORDER_NO,
		        NULL AS NEW_QTY_V,
		        NULL AS NEW_CHILD_REVU,
		        'D' AS CHANGE_TYPE,
		        OLD_STRUCTURE.OCC_TYPE_NAME AS OCC_TYPE_NAME,
		        NULL AS NEW_OCC_PUID,
		        OLD_STRUCTURE.OCC_PUID AS OLD_OCC_PUID,
		        NULL AS NEW_OCC_NOTE_PUID,
		        OLD_STRUCTURE.OCC_NOTE_PUID AS OLD_OCC_NOTE_PUID
		    FROM OLD_STRUCTURE
		    WHERE OLD_STRUCTURE.ROCC_THREADU IN
		        (
		            SELECT OLD_STRUCTURE.ROCC_THREADU AS OCC_THREADU
		            FROM OLD_STRUCTURE
		            MINUS
		            SELECT NEW_STRUCTURE.ROCC_THREADU AS OCC_THREADU
		            FROM NEW_STRUCTURE
		        )
		),
		ADDED_ITEMS AS (
		    SELECT 
		        NEW_STRUCTURE.ROCC_THREADU  AS OCC_THREADU,
		        NULL AS OLD_SEQ_NO,
		        NULL AS OLD_CHILD_ITEMU,
		        NULL AS OLD_OPTION_COND,
		        NULL AS OLD_ORDER_NO,
		        NULL AS OLD_QTY_V,
		        NULL AS OLD_CHILD_REVU,
		        NEW_STRUCTURE.PSEQ_NO AS NEW_SEQ_NO,
		        NEW_STRUCTURE.RCHILD_ITEMU AS NEW_CHILD_ITEMU,
		        NEW_STRUCTURE.OPTION_COND AS NEW_OPTION_COND,
		        NEW_STRUCTURE.ORDER_NO AS NEW_ORDER_NO,
		        NEW_STRUCTURE.PQTY_VALUE AS NEW_QTY_V,
		        NEW_STRUCTURE.REV_PUID AS NEW_CHILD_REVU,
		        'A' AS CHANGE_TYPE,
		        NEW_STRUCTURE.OCC_TYPE_NAME AS OCC_TYPE_NAME,
		        NEW_STRUCTURE.OCC_PUID AS NEW_OCC_PUID,
		        NULL AS OLD_OCC_PUID,
		        NEW_STRUCTURE.OCC_NOTE_PUID AS NEW_OCC_NOTE_PUID,
		        NULL AS OLD_OCC_NOTE_PUID
		    FROM NEW_STRUCTURE
		    WHERE NEW_STRUCTURE.ROCC_THREADU IN
		        (
		            SELECT NEW_STRUCTURE.ROCC_THREADU AS OCC_THREADU
		            FROM NEW_STRUCTURE
		            MINUS
		            SELECT OLD_STRUCTURE.ROCC_THREADU AS OCC_THREADU
		            FROM OLD_STRUCTURE
		        )
		)
		SELECT  OCC_THREADU,
		        NEW_PARENT_REV_VIEW.ITEM_REV_PUID AS PARENT_REV_PUID,
		        NEW_PARENT_REV_VIEW.ITEM_ID AS PARENT_ID,
		        NEW_PARENT_REV_VIEW.ITEM_REV_ID AS PARENT_REV_ID,
		        NEW_PARENT_REV_VIEW.ITEM_NAME AS PARENT_NAME,
		        NEW_PARENT_REV_VIEW.ITEM_REV_TYPE AS PARENT_REV_TYPE,
		        TO_CHAR(NEW_PARENT_REV_VIEW.STRUCT_LAST_MOD_DATE+9/24, 'YYYY-MM-DD HH24:MI') AS PARENT_STRUCT_LAST_MOD_DATE,
		        CHANGE_TYPE, OCC_TYPE_NAME,
		        (SELECT PITEM_ID FROM INFODBA.PITEM WHERE PUID = OLD_CHILD_ITEMU) AS OLD_CHILD_ID,
		        (SELECT PITEM_REVISION_ID FROM INFODBA.PITEMREVISION WHERE PUID = OLD_CHILD_REVU) AS OLD_CHILD_REV,
		        OLD_CHILD_REVU,
		        OLDWSO.POBJECT_TYPE OLD_ITEM_TYPE,
		        OLDWSO.POBJECT_NAME OLD_ITEM_NAME,
		        OLD_OPTION_COND, TO_CHAR(OLD_ORDER_NO) OLD_ORDER_NO, OLD_SEQ_NO, TO_CHAR(OLD_QTY_V) OLD_QTY_V, OLD_OCC_PUID,
		        (SELECT PNTEXT.PVAL_0
		         FROM INFODBA.PNOTE_TYPES PNTS, INFODBA.PNOTETYPE PNT, INFODBA.PNOTE_TEXTS PNTEXT
		        WHERE PNTS.PVALU_0 = PNT.PUID
		          AND PNTS.PUID = PNTEXT.PUID
		          AND PNTS.PSEQ = PNTEXT.PSEQ
		          AND PNT.PNAME = 'M7_SUBSIDIARY_QTY'
		          AND OLDWSO.POBJECT_TYPE = 'M7_Subsidiary'
		          AND PNTS.PUID = OLD_OCC_NOTE_PUID) OLD_SUBSIDIARY_QTY,
		        (SELECT PITEM_ID FROM INFODBA.PITEM WHERE PUID = NEW_CHILD_ITEMU) AS NEW_CHILD_ID,
		        (SELECT PITEM_REVISION_ID FROM INFODBA.PITEMREVISION WHERE PUID = NEW_CHILD_REVU) AS NEW_CHILD_REV,
		        NEW_CHILD_REVU,
		        NEWWSO.POBJECT_TYPE NEW_ITEM_TYPE,
		        NEWWSO.POBJECT_NAME NEW_ITEM_NAME,
		        NEW_OPTION_COND, TO_CHAR(NEW_ORDER_NO) NEW_ORDER_NO, NEW_SEQ_NO, TO_CHAR(NEW_QTY_V) NEW_QTY_V, NEW_OCC_PUID,
		        (SELECT PNTEXT.PVAL_0
		         FROM INFODBA.PNOTE_TYPES PNTS, INFODBA.PNOTETYPE PNT, INFODBA.PNOTE_TEXTS PNTEXT
		        WHERE PNTS.PVALU_0 = PNT.PUID
		          AND PNTS.PUID = PNTEXT.PUID
		          AND PNTS.PSEQ = PNTEXT.PSEQ
		          AND PNT.PNAME = 'M7_SUBSIDIARY_QTY'
		          AND NEWWSO.POBJECT_TYPE = 'M7_Subsidiary'
		          AND PNTS.PUID = NEW_OCC_NOTE_PUID) NEW_SUBSIDIARY_QTY
		FROM (
		        SELECT MAX(OCC_THREADU) OCC_THREADU,
		            MAX(OLD_CHILD_ITEMU) OLD_CHILD_ITEMU, MAX(OLD_OPTION_COND) OLD_OPTION_COND, TO_NUMBER(MAX(OLD_ORDER_NO)) OLD_ORDER_NO, MAX(OLD_SEQ_NO) OLD_SEQ_NO, SUM(OLD_QTY_V) OLD_QTY_V, MAX(OLD_OCC_PUID) OLD_OCC_PUID, MAX(OLD_CHILD_REVU) OLD_CHILD_REVU,
		            NEW_CHILD_ITEMU, MAX(NEW_OPTION_COND) NEW_OPTION_COND, TO_NUMBER(MAX(NEW_ORDER_NO)) NEW_ORDER_NO, NEW_SEQ_NO, SUM(NEW_QTY_V) NEW_QTY_V, MAX(NEW_OCC_PUID) NEW_OCC_PUID, MAX(NEW_CHILD_REVU) NEW_CHILD_REVU,
		            MAX(CHANGE_TYPE) CHANGE_TYPE, MAX(OCC_TYPE_NAME) OCC_TYPE_NAME, MAX(NEW_OCC_NOTE_PUID) NEW_OCC_NOTE_PUID, MAX(OLD_OCC_NOTE_PUID) OLD_OCC_NOTE_PUID
		        FROM ADDED_ITEMS
		        GROUP BY NEW_CHILD_ITEMU, NEW_SEQ_NO
		        UNION
		        SELECT MAX(OCC_THREADU) OCC_THREADU,
		            MAX(OLD_CHILD_ITEMU) OLD_CHILD_ITEMU, MAX(OLD_OPTION_COND) OLD_OPTION_COND, TO_NUMBER(MAX(OLD_ORDER_NO)) OLD_ORDER_NO, MAX(OLD_SEQ_NO) OLD_SEQ_NO, SUM(OLD_QTY_V) OLD_QTY_V, MAX(OLD_OCC_PUID) OLD_OCC_PUID, MAX(OLD_CHILD_REVU) OLD_CHILD_REVU,
		            NEW_CHILD_ITEMU, MAX(NEW_OPTION_COND) NEW_OPTION_COND, TO_NUMBER(MAX(NEW_ORDER_NO)) NEW_ORDER_NO, NEW_SEQ_NO, SUM(NEW_QTY_V) NEW_QTY_V, MAX(NEW_OCC_PUID) NEW_OCC_PUID, MAX(NEW_CHILD_REVU) NEW_CHILD_REVU,
		            MAX(CHANGE_TYPE) CHANGE_TYPE, MAX(OCC_TYPE_NAME) OCC_TYPE_NAME, MAX(NEW_OCC_NOTE_PUID) NEW_OCC_NOTE_PUID, MAX(OLD_OCC_NOTE_PUID) OLD_OCC_NOTE_PUID
		        FROM CHANGED
		        GROUP BY NEW_CHILD_ITEMU, NEW_SEQ_NO
		        UNION
		        SELECT MAX(OCC_THREADU) OCC_THREADU,
		            MAX(OLD_CHILD_ITEMU) OLD_CHILD_ITEMU, MAX(OLD_OPTION_COND) OLD_OPTION_COND, TO_NUMBER(MAX(OLD_ORDER_NO)) OLD_ORDER_NO, MAX(OLD_SEQ_NO) OLD_SEQ_NO, SUM(OLD_QTY_V) OLD_QTY_V, MAX(OLD_OCC_PUID) OLD_OCC_PUID, MAX(OLD_CHILD_REVU) OLD_CHILD_REVU,
		            NEW_CHILD_ITEMU, MAX(NEW_OPTION_COND) NEW_OPTION_COND, TO_NUMBER(MAX(NEW_ORDER_NO)) NEW_ORDER_NO, NEW_SEQ_NO, SUM(NEW_QTY_V) NEW_QTY_V, MAX(NEW_OCC_PUID) NEW_OCC_PUID, MAX(NEW_CHILD_REVU) NEW_CHILD_REVU,
		            MAX(CHANGE_TYPE) CHANGE_TYPE, MAX(OCC_TYPE_NAME) OCC_TYPE_NAME, MAX(NEW_OCC_NOTE_PUID) NEW_OCC_NOTE_PUID, MAX(OLD_OCC_NOTE_PUID) OLD_OCC_NOTE_PUID
		        FROM REPLACED_ITEMS
		        GROUP BY NEW_CHILD_ITEMU, NEW_SEQ_NO
		        UNION
		        SELECT MAX(OCC_THREADU) OCC_THREADU,
		            OLD_CHILD_ITEMU, MAX(OLD_OPTION_COND) OLD_OPTION_COND, TO_NUMBER(MAX(OLD_ORDER_NO)) OLD_ORDER_NO, OLD_SEQ_NO, SUM(OLD_QTY_V) OLD_QTY_V, MAX(OLD_OCC_PUID) OLD_OCC_PUID, MAX(OLD_CHILD_REVU) OLD_CHILD_REVU,
		            MAX(NEW_CHILD_ITEMU) NEW_CHILD_ITEMU, MAX(NEW_OPTION_COND) NEW_OPTION_COND, TO_NUMBER(MAX(NEW_ORDER_NO)) NEW_ORDER_NO, MAX(NEW_SEQ_NO) NEW_SEQ_NO, SUM(NEW_QTY_V) NEW_QTY_V, MAX(NEW_OCC_PUID) NEW_OCC_PUID, MAX(NEW_CHILD_REVU) NEW_CHILD_REVU,
		            MAX(CHANGE_TYPE) CHANGE_TYPE, MAX(OCC_TYPE_NAME) OCC_TYPE_NAME, MAX(NEW_OCC_NOTE_PUID) NEW_OCC_NOTE_PUID, MAX(OLD_OCC_NOTE_PUID) OLD_OCC_NOTE_PUID
		        FROM DELETED_ITEMS
		        GROUP BY OLD_CHILD_ITEMU, OLD_SEQ_NO
		    ) X,
		    INFODBA.PWORKSPACEOBJECT OLDWSO,
		    INFODBA.PWORKSPACEOBJECT NEWWSO,
		    NEW_PARENT_REV_VIEW
		WHERE X.OLD_CHILD_ITEMU = OLDWSO.PUID(+)
		AND   X.NEW_CHILD_ITEMU = NEWWSO.PUID(+)
		AND   (NEW_CHILD_REVU IN (
		                        SELECT REV.PUID
		                        FROM   (SELECT PUID, RM7_MECO_NOU
		                                FROM   INFODBA.PMEOPREVISION
		                                UNION ALL
		                                SELECT PUID, RM7_MECO_NOU
		                                FROM   INFODBA.PMEPROCESSREVISION
		                                ) MEREV,
		                               INFODBA.PITEMREVISION REV,
		                               INFODBA.PITEM ITEM
		                        WHERE  MEREV.PUID = REV.PUID
		                        AND    ITEM.PUID = REV.RITEMS_TAGU
		                        AND    MEREV.RM7_MECO_NOU = (
		                                   SELECT MECOREV.PUID
		                                   FROM   INFODBA.PITEMREVISION MECOREV, INFODBA.PITEM MITEM, INFODBA.PWORKSPACEOBJECT
		                                   WHERE  MECOREV.RITEMS_TAGU = MITEM.PUID
		                                   AND    PWORKSPACEOBJECT.PUID = MITEM.PUID
		                                   AND    MITEM.PITEM_ID = #{mecoId, jdbcType=VARCHAR}
		                                   AND    MECOREV.PITEM_REVISION_ID = '000'
		                                   AND    PWORKSPACEOBJECT.POBJECT_TYPE='M7_MECO'
		                        )
		     )
		     OR NEWWSO.POBJECT_TYPE NOT LIKE 'M7_BOP%'
		     OR OLDWSO.POBJECT_TYPE NOT LIKE 'M7_BOP%'
		)
		ORDER BY CHANGE_TYPE, OLD_CHILD_ITEMU, OLD_OPTION_COND, OLD_SEQ_NO, NEW_CHILD_ITEMU, NEW_OPTION_COND, NEW_SEQ_NO
	</select>

	<select id="getBOPChildErrorList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT CI.PITEM_ID,
		       CIR.PITEM_REVISION_ID,
		       CIR_WSO.POBJECT_NAME,
		       CIR_WSO.POBJECT_TYPE CHILD_TYPE,
		       PIR_WSO.POBJECT_TYPE PARENT_TYPE,
		       MECO.MECO_ID,
		       CIR.PUID
		FROM   INFODBA.PPSOCCURRENCE OCC,
		       INFODBA.PSTRUCTURE_REVISIONS SR,
		       INFODBA.PITEM PI,
		       INFODBA.PITEMREVISION PIR,
		       INFODBA.PWORKSPACEOBJECT PIR_WSO,
		       INFODBA.PITEM CI,
		       INFODBA.PITEMREVISION CIR,
		       INFODBA.PWORKSPACEOBJECT CIR_WSO,
		       (
		        SELECT MECOITEM.PITEM_ID MECO_ID,
		               ME_REV.PUID MECO_REV_UID
		        FROM   INFODBA.PITEMREVISION MECOREV,
		               INFODBA.PITEM MECOITEM,
		               INFODBA.PWORKSPACEOBJECT MECOWSO,
		               (SELECT PUID, RM7_MECO_NOU
		                FROM   INFODBA.PMEOPREVISION
		                UNION ALL
		                SELECT PUID, RM7_MECO_NOU
		                FROM   INFODBA.PMEPROCESSREVISION
		                ) ME_REV
		        WHERE  MECOREV.RITEMS_TAGU = MECOITEM.PUID
		        AND    MECOWSO.PUID = MECOITEM.PUID
		        AND    ME_REV.RM7_MECO_NOU = MECOREV.PUID
		        AND    MECOREV.PITEM_REVISION_ID = '000'
		        AND    MECOWSO.POBJECT_TYPE='M7_MECO'
		       ) MECO
		WHERE  PIR.PUID = SR.PUID
		AND    PIR.RITEMS_TAGU = PI.PUID
		AND    PIR.PUID = PIR_WSO.PUID
		AND    OCC.RPARENT_BVRU = SR.PVALU_0
		AND    OCC.RCHILD_ITEMU = CI.PUID
		AND    CI.PUID = CIR.RITEMS_TAGU
		AND    CIR.PUID = CIR_WSO.PUID
		AND    CIR.PUID = (
		                SELECT MAX(T_R.PUID) KEEP(DENSE_RANK FIRST ORDER BY T_PAO.PCREATION_DATE DESC, T_R.PSEQUENCE_ID DESC)
		                FROM   INFODBA.PITEM T_I, INFODBA.PITEMREVISION T_R, INFODBA.PPOM_APPLICATION_OBJECT T_PAO, INFODBA.PWORKSPACEOBJECT T_WSO
		                WHERE  T_I.PUID = T_R.RITEMS_TAGU
		                AND    T_R.PUID = T_PAO.PUID
		                AND    T_R.PUID = T_WSO.PUID
		                AND    T_I.PUID = OCC.RCHILD_ITEMU)
		AND    PI.PITEM_ID = #{parentItemId, jdbcType=VARCHAR}
		AND    PIR.PITEM_REVISION_ID = #{parentRevId, jdbcType=VARCHAR}
		AND    MECO.MECO_REV_UID = CIR.PUID
		AND    (PIR_WSO.POBJECT_TYPE IN ('M7_BOPLineRevision', 'M7_BOPStationRevision') AND CIR_WSO.POBJECT_TYPE NOT IN ('M7_MfgProductRevision', 'M7_JigFixtureRevision', 'M7_RobotRevision', 'M7_ToolRevision'))
		AND    CIR_WSO.PDATE_RELEASED IS NULL
		AND    MECO.MECO_ID != #{mecoId, jdbcType=VARCHAR}
		ORDER BY MECO.MECO_ID
	</select>
</mapper>