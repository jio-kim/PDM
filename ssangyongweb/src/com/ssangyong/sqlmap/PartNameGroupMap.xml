<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssangyong.mapper.partnamegroup">

    <!-- [CSH][SR181025-028] -->
    <resultMap type="com.ssangyong.dto.ExcludeFromNameGroup" id="ExcludeFromNameGroup">
        <result column="ex_id" property="id"/>
        <result column="product" property="product"/>
        <result column="my" property="my"/>
        <result column="groupname" property="groupName"/>
        <result column="remarks" property="remarks"/>
        <result column="create_date" property="createDate"/>
    </resultMap>
    
	<insert id="insertPngMaster">
		merge into PNG_MASTER
		using dual
		on (GROUP_ID=#{GROUP_ID, jdbcType=VARCHAR})
		when matched then
		update set GROUP_NAME=#{GROUP_NAME, jdbcType=VARCHAR},
		REF_FUNCS=#{REF_FUNCS, jdbcType=VARCHAR},
		DESCRIPTION=#{DESCRIPTION, jdbcType=VARCHAR},
		DEFAULT_QTY=#{DEFAULT_QTY, jdbcType=NUMERIC},
		IS_ENABLED=#{IS_ENABLED, jdbcType=VARCHAR}
		when not matched then
		insert (GROUP_ID, GROUP_NAME, REF_FUNCS, DESCRIPTION, DEFAULT_QTY, IS_ENABLED)
		values(#{GROUP_ID, jdbcType=VARCHAR}, #{GROUP_NAME, jdbcType=VARCHAR}, #{REF_FUNCS, jdbcType=VARCHAR}, #{DESCRIPTION, jdbcType=VARCHAR}, #{DEFAULT_QTY,
		jdbcType=NUMERIC}
		, #{IS_ENABLED, jdbcType=VARCHAR})
	</insert>
	
	<!-- [20240228] Oracle Version upgrade 로 인한 WM_CONCAT 을 LISTAGG 로 변경 -->
	<select id="getPngMaster" resultType="java.util.HashMap">
		select a.* 
		<if test="SHOW_PART_NAME != null">
		,(select DBMS_LOB.SUBSTR( LISTAGG(part_name, ','), 4000, 1) from PNG_NAME_LIST where group_id=a.group_id) part_names
		</if>
		from PNG_MASTER a, png_assign b where a.group_id = b.group_id(+)
		<if test="GROUP_ID != null">
			and a.GROUP_ID=#{GROUP_ID, jdbcType=VARCHAR}
		</if>	
		<if test="IS_ENABLED != null">
			and a.IS_ENABLED=#{IS_ENABLED, jdbcType=VARCHAR}
		</if>	
		<if test="PRODUCT != null">
			and b.PRODUCT=#{PRODUCT, jdbcType=VARCHAR}
		</if>	
		group by a.group_id, group_name, ref_funcs, description, default_qty, is_enabled	
		order by a.group_id, group_name
	</select>	
	
	<delete id="deletePngMaster">
		delete from PNG_MASTER where GROUP_ID =
		#{GROUP_ID, jdbcType=VARCHAR}
	</delete>	

	<insert id="insertPngNameList">
		insert into PNG_NAME_LIST (GROUP_ID, PART_NAME)
		values(#{GROUP_ID, jdbcType=VARCHAR}, #{PART_NAME, jdbcType=VARCHAR})
	</insert>
	
	<select id="getPngNameList" resultType="java.util.HashMap">
		select * from PNG_NAME_LIST where 1=1
		<if test="GROUP_ID != null">
			and GROUP_ID=#{GROUP_ID, jdbcType=VARCHAR}
		</if>	
		order by GROUP_ID, PART_NAME	
	</select>		

	<delete id="deletePngNameList">
		delete from PNG_NAME_LIST where GROUP_ID = #{GROUP_ID, jdbcType=VARCHAR}
	</delete>

	<insert id="insertPngConditionList">
		insert into PNG_CONDITION_LIST (GROUP_ID, GROUP_NUM, PRODUCT, CONDITION, QTY, OPERATOR, PART_IDX, PART_NAME)
		values(#{GROUP_ID, jdbcType=VARCHAR}, #{GROUP_NUM, jdbcType=NUMERIC}, #{PRODUCT, jdbcType=VARCHAR}
		, #{CONDITION, jdbcType=VARCHAR}, #{QTY, jdbcType=NUMERIC}, #{OPERATOR, jdbcType=VARCHAR}
		, #{PART_IDX, jdbcType=NUMERIC}, #{PART_NAME, jdbcType=VARCHAR})
	</insert>
	
	<select id="getPngConditionList" resultType="java.util.HashMap">
		select * from PNG_CONDITION_LIST where 1=1
		<if test="GROUP_ID != null">
			and GROUP_ID=#{GROUP_ID, jdbcType=VARCHAR}
		</if>		
		<if test="GROUP_NUM != null">
			and GROUP_NUM=#{GROUP_NUM, jdbcType=NUMERIC}
		</if>	
		<if test="PRODUCT != null">
			and PRODUCT=#{PRODUCT, jdbcType=VARCHAR}
		</if>	
		<if test="CONDITION != null">
			and CONDITION=#{CONDITION, jdbcType=VARCHAR}
		</if>	
		<if test="OPERATOR != null">
			and OPERATOR=#{OPERATOR, jdbcType=VARCHAR}
		</if>		
		<if test="QTY != null">
			and QTY=#{QTY, jdbcType=NUMERIC}
		</if>	
		order by Part_idx									
	</select>		

	<delete id="deletePngConditionList">
		delete from PNG_CONDITION_LIST where GROUP_ID =
		#{GROUP_ID, jdbcType=VARCHAR}
	</delete>
	
	<insert id="insertPngProdOrder">
		insert into PNG_PROD_ORDER (PRODUCT, ASSIGN_ORDER)
		values(#{PRODUCT, jdbcType=VARCHAR}
		, #{ASSIGN_ORDER, jdbcType=NUMERIC})
	</insert>
	
	<select id="getPngProdOrder" resultType="java.lang.String">
		select product from PNG_PROD_ORDER order by ASSIGN_ORDER
	</select>	

	<delete id="deletePngProdOrder">
		delete from PNG_PROD_ORDER where 1=1
		<if test="PRODUCT != null">
			and PRODUCT = #{PRODUCT, jdbcType=VARCHAR}
		</if>
	</delete>	

	<update id="insertPngNewNameFromECO" statementType="CALLABLE">
	    {call PKG_NAME_GROUP.INSERT_NEW_PART_NAME(#{ECO_NO, jdbcType=VARCHAR})}
	</update>	
  
    <update id="set1LevelItemList" statementType="CALLABLE">
        {call PKG_NAME_GROUP.set1LevelItemList(#{PRODUCT, jdbcType=VARCHAR}, #{ROWKEY, jdbcType=VARCHAR})}
    </update> 

	<select id="getPngNewNameList" resultType="java.util.HashMap">
		select * from png_new_name_list where part_name not in (select part_name from png_name_list) order by part_name
	</select>
	
	<delete id="deletePngNewNameList">
		delete from PNG_NEW_NAME_LIST where PART_NAME =
		#{PART_NAME, jdbcType=VARCHAR}
	</delete>	
  
    <delete id="deletePngEpl">
        delete from PNG_EPL where ROWKEY = #{ROWKEY, jdbcType=VARCHAR}
    </delete> 
	
	<select id="getProductList" resultType="java.lang.String">
		select item.pItem_ID ITEM_ID from infodba.pItem item, infodba.pItemRevision revision, infodba.pWorkspaceObject wso, INFODBA.PS7_PRODUCTREVISION prodRev 
		where item.puid = REVISION.RITEMS_TAGU and revision.puid = WSO.PUID and WSO.PACTIVE_SEQ = 1 and wso.pObject_type = 'S7_ProductRevision'
		and prodRev.puid = revision.puid and prodRev.ps7_product_type='Vehicle'
		order by item.pItem_ID	
	</select>	

	<select id="getPngAssign" resultType="java.util.HashMap">
		select * from PNG_ASSIGN
	</select>
	
	<insert id="insertPngAssign">
		merge into PNG_Assign
		using dual
		on (GROUP_ID=#{GROUP_ID, jdbcType=VARCHAR} and PRODUCT = #{PRODUCT, jdbcType=VARCHAR})
		when matched then
		update set IS_USE=#{IS_USE, jdbcType=VARCHAR}
		when not matched then
		insert (GROUP_ID, PRODUCT, IS_USE)
		values(#{GROUP_ID, jdbcType=VARCHAR}, #{PRODUCT, jdbcType=VARCHAR}, #{IS_USE, jdbcType=VARCHAR})
	</insert>	
	
	<delete id="deletePngAssign">
		delete from PNG_Assign where 1=1
		<if test="PRODUCT != null">		
		and PRODUCT = #{PRODUCT, jdbcType=VARCHAR}
		</if>
		<if test="GROUP_ID != null">		
		and GROUP_ID = #{GROUP_ID, jdbcType=VARCHAR}
		</if>
	</delete>		
	
	<select id="getUserSpecList" resultType="java.util.HashMap">
		select a.puid, a.product, a.spec_no, 'USER SPEC' "TYPE", a.create_date  from (
		    select sos.puid, pkg_name_group.get_product_from_project( sos.ps7_project_code) product, wso.pObject_name spec_no
		    , pao.pCreation_date + 9/24 create_date 
		    from infodba.PSTOREDOPTIONSET sos, infodba.pWorkSpaceObject wso, infodba.PPOM_APPLICATION_OBJECT pao
		    where sos.puid = wso.puid and wso.puid = pao.puid
		) a where product = #{PRODUCT, jdbcType=VARCHAR}
		<if test="SPEC_NO != null">	
			and a.spec_no like '%' || #{SPEC_NO, jdbcType=VARCHAR} || '%'
		</if>	
	</select>
  
	<!-- 생산 스펙 000 리비젼만 검색 하도록 변경 beenlaho -->
    <!-- SR180209-050 생산스펙의 리비젼 정보 표시 -->
    <!-- 20190412 속도 개선 CSH -->
    <!-- [20240424][UPGRADE] HBOM DBLink 제거 -->
	<select id="getBuildSpecList" resultType="java.util.HashMap">
      with GMODEL as 
      (
        select item.pItem_id product_id, pS7_GMODEL_CODE gmodel_code 
        from infodba.pItem item, infodba.pItemRevision revision, infodba.pWorkSpaceObject wso, INFODBA.PS7_PRODUCTREVISION prod_rev
        where 1=1
        and revision.puid = wso.puid 
        and wso.pActive_seq = 1
        and revision.puid = prod_rev.puid 
        and item.puid = revision.rItems_tagu  
        and item.pitem_id = #{PRODUCT, jdbcType=VARCHAR}
      )
      SELECT sm.spec_no puid, gm.product_id "product", sm.spec_no spec_no, 'BUILD SPEC' "TYPE", sm.create_date as create_date
             , sm.LAST_MODIFY_DATE as LAST_MODIFY_DATE
             , sm.VERSION as VERSION
      FROM GMODEL GM
         , HBOM.PSPEC_MASTER SM
      WHERE sm.GMODEL = gm.gmodel_code
      and sm.status = 'CURR'
      <if test="SPEC_NO != null">
        and sm.spec_no like #{SPEC_NO, jdbcType=VARCHAR} || '%'
      </if>
      <if test="specList != null">
       AND sm.spec_no IN
      <foreach collection="specList" item="code" index="index" separator="," open="("  close=")">
        #{code}
      </foreach>
      </if>
      <if test="PROJECT_NO != null">
      and sm.PROJECT_NO like #{PROJECT_NO, jdbcType=VARCHAR} || '%'
      </if>
      ORDER BY sm.spec_no
	</select>

    <!-- Build Spec Option 변경 이력 조회 beenlaho -->
    <!-- [20240424][UPGRADE] HBOM DBLink 제거 -->
  <select id="getSpecOptionChangeInfo" resultType="java.util.HashMap">
    SELECT A.SPEC_NO, 
       A.VERSION,
       (B.CATE_NO||B.OPTION_NO_TO) AS OPTIONS ,
       CASE WHEN TRIM(B.OPTION_NO_FROM) IS NULL AND TRIM(B.OPTION_NO_TO) IS NOT NULL THEN 'A'
            WHEN TRIM(B.OPTION_NO_FROM) <![CDATA[<>]]> TRIM(B.OPTION_NO_TO) THEN 'C'
            WHEN TRIM(B.OPTION_NO_FROM) IS NOT NULL AND TRIM(B.OPTION_NO_TO) IS NULL THEN 'D'
       END AS FLAG
      FROM HBOM.PSPEC_MASTER A, HBOM.PSPEC_VERSION_HISTORY B
     WHERE A.SPEC_NO = B.SPEC_NO
       AND A.VERSION = B.VERSION
       AND A.STATUS = 'CURR'
       AND A.PAUS_FLAG = 'N'
        <if test="specList != null">
       AND a.spec_no IN 
       <foreach collection="specList" item="code" index="index" separator="union all" open="("  close=")">
        select #{code} from dual
        </foreach>
       
       </if>
  </select>
  
	<!-- [20240424][UPGRADE] HBOM DBLink 제거 -->
	<select id="getPlan15SpecList" resultType="java.util.HashMap">
		SELECT A.SPECNO PUID,
		       B.PRODUCT,
		       A.SPECNO SPEC_NO,
		       'PLAN SPEC' "TYPE",
               A.VERSION,
		       <!-- TO_DATE(A.YYYYMMDD, 'YYYYMMDD') CREATE_DATE -->
		       (SELECT MAX(TO_CHAR(A1.LAST_MODIFY_DATE, 'YYYY-MM-DD'))
	              FROM HBOM.PSPEC_MASTER A1
	             WHERE A1.GMODEL = A.GMODEL
	               AND A1.SPEC_NO = A.SPECNO
	               AND A1.VERSION = A.VERSION) CREATE_DATE,
               TO_DATE(PDATE, 'YYYYMMDD') PRODUCTION_PLAN_DATE
		  FROM IF_MFG_SPEC A,
		       (SELECT PR.PS7_GMODEL_CODE GMODEL, PI.PITEM_ID PRODUCT
		          FROM INFODBA.PITEM               PI,
		               INFODBA.PWORKSPACEOBJECT    PIW,
		               INFODBA.PITEMREVISION       PIR,
		               INFODBA.PS7_PRODUCTREVISION PR
		         WHERE PR.PUID = PIR.PUID
		           AND PIR.PUID = PIW.PUID
		           AND PI.PUID = PIR.RITEMS_TAGU
		           AND PI.PITEM_ID = #{PRODUCT, jdbcType=VARCHAR}
		           AND PIW.POBJECT_TYPE = 'S7_ProductRevision'
		           AND PIR.PS7_MATURITY = 'Released') B
		 WHERE A.GMODEL = B.GMODEL
		   AND A.YYYYMMDD = (SELECT MAX(A1.YYYYMMDD)
		                       FROM IF_MFG_SPEC A1
		                      WHERE A1.GMODEL = A.GMODEL)
		   AND A.VERSION = (SELECT MAX(A1.VERSION)
		                      FROM IF_MFG_SPEC A1
		                     WHERE A1.GMODEL = A.GMODEL
		                       AND A1.SPECNO = A.SPECNO)
		   <if test="SPEC_NO != null">
		   AND A.SPECNO LIKE '%' || #{SPEC_NO, jdbcType=VARCHAR} || '%'
		   </if> 
		 ORDER BY A.SPECNO                         
	</select>
	
	<select id="getResult30SpecList" resultType="java.util.HashMap">
		SELECT A.SPECNO PUID,
		       B.PRODUCT,
               A.VERSION,
		       A.SPECNO SPEC_NO,
		       'RESULT SPEC' "TYPE",
		       TO_DATE(A.YYYYMMDD, 'YYYYMMDD') CREATE_DATE
		  FROM IF_MFG_RSLT_SPEC_VER A,
		       (SELECT PR.PS7_GMODEL_CODE GMODEL, PI.PITEM_ID PRODUCT
		          FROM INFODBA.PITEM               PI,
		               INFODBA.PWORKSPACEOBJECT    PIW,
		               INFODBA.PITEMREVISION       PIR,
		               INFODBA.PS7_PRODUCTREVISION PR
		         WHERE PR.PUID = PIR.PUID
		           AND PIR.PUID = PIW.PUID
		           AND PI.PUID = PIR.RITEMS_TAGU
		           AND PI.PITEM_ID = #{PRODUCT, jdbcType=VARCHAR}
		           AND PIW.POBJECT_TYPE = 'S7_ProductRevision'
		           AND PIR.PS7_MATURITY = 'Released') B
		 WHERE A.GMODEL = B.GMODEL
		   <if test="SPEC_NO != null">
		   AND A.SPECNO LIKE '%' || #{SPEC_NO, jdbcType=VARCHAR} || '%'
		   </if>
          and yyyymmdd <![CDATA[>=]]>  ( SELECT to_char( to_date(MAX(yyyymmdd))-30, 'yyyymmdd') FROM IF_MFG_RSLT_SPEC_VER ) 
		 ORDER BY A.SPECNO                         
	</select>
  
  <!-- [SR170810][LJG] 60일 연동 계획 Spec List 추가 -->
  <select id="getResult60SpecList" resultType="java.util.HashMap">
    SELECT A.SPECNO PUID,
           B.PRODUCT,
           A.SPECNO SPEC_NO,
           A.VERSION,
           'RESULT SPEC' "TYPE",
           TO_DATE(A.YYYYMMDD, 'YYYYMMDD') CREATE_DATE
      FROM IF_MFG_RSLT_SPEC_VER A,
           (SELECT PR.PS7_GMODEL_CODE GMODEL, PI.PITEM_ID PRODUCT
              FROM INFODBA.PITEM               PI,
                   INFODBA.PWORKSPACEOBJECT    PIW,
                   INFODBA.PITEMREVISION       PIR,
                   INFODBA.PS7_PRODUCTREVISION PR
             WHERE PR.PUID = PIR.PUID
               AND PIR.PUID = PIW.PUID
               AND PI.PUID = PIR.RITEMS_TAGU
               AND PI.PITEM_ID = #{PRODUCT, jdbcType=VARCHAR}
               AND PIW.POBJECT_TYPE = 'S7_ProductRevision'
               AND PIR.PS7_MATURITY = 'Released') B
     WHERE A.GMODEL = B.GMODEL
       <if test="SPEC_NO != null">
       AND A.SPECNO LIKE '%' || #{SPEC_NO, jdbcType=VARCHAR} || '%'
       </if> 
     ORDER BY A.SPECNO                         
  </select>
  
	<select id="getEndItemNameList" resultType="java.util.HashMap">
	<![CDATA[
		select nameList.GROUP_ID, p_master.group_name, p_master.default_qty, a.function_no, a.child_no, a.child_name, a.condition, a.supply_mode, a.lv, count(child_name) name_count 
		from table(PKG_NAME_GROUP.GET_1LEVEL_ITEM_WITH_SPEC(#{PRODUCT, jdbcType=VARCHAR}, #{SPEC_TYPE, jdbcType=VARCHAR}, #{PUID, jdbcType=VARCHAR}, #{ROWKEY, jdbcType=VARCHAR})) a, PNG_NAME_LIST nameList, PNG_MASTER p_master
		where a.child_name = nameList.part_name
		and nameList.group_id = p_master.group_id
		and instr(p_master.ref_funcs, substr(a.function_no, 0, 4)) > 0
		group by nameList.GROUP_ID, p_master.group_name, p_master.default_qty, a.function_no, a.child_no, a.child_name, a.condition, a.supply_mode, a.lv
		order by nameList.GROUP_ID, a.function_no, a.lv, a.child_name  	
	]]>
        <!--
        select nameList.GROUP_ID, p_master.group_name, p_master.default_qty, a.function_no, a.child_no, a.child_name, a.condition, a.supply_mode, a.lv, count(child_name) name_count 
        from table(PKG_NAME_GROUP_HOON.GET_END_ITEM_WITH_SPEC(#{PRODUCT, jdbcType=VARCHAR}, #{SPEC_TYPE, jdbcType=VARCHAR}, #{PUID, jdbcType=VARCHAR})) a, PNG_NAME_LIST nameList, PNG_MASTER p_master
        where a.child_name = nameList.part_name
        and nameList.group_id = p_master.group_id
        and instr(p_master.ref_funcs, substr(a.function_no, 0, 4)) > 0
        group by nameList.GROUP_ID, p_master.group_name, p_master.default_qty, a.function_no, a.child_no, a.child_name, a.condition, a.supply_mode, a.lv
        order by nameList.GROUP_ID, a.function_no, a.lv, a.child_name 
        -->
	<!-- 
		select nameList.GROUP_ID, p_master.group_name, p_master.default_qty, count(child_name) name_count 
		from table(PKG_NAME_GROUP.GET_END_ITEM_WITH_SPEC(#{PRODUCT, jdbcType=VARCHAR}, #{SPEC_TYPE, jdbcType=VARCHAR}, #{PUID, jdbcType=VARCHAR})) a, PNG_NAME_LIST nameList, PNG_MASTER p_master
		where a.child_name = nameList.part_name
		and nameList.group_id = p_master.group_id
		group by nameList.GROUP_ID, p_master.group_name, p_master.default_qty			
	 -->
		
	</select>	
	<select id="getSpecEndItemNameList" resultType="java.util.HashMap">
		select a.function_no, a.child_no, a.child_name, a.condition, a.supply_mode, a.lv, count(child_name) name_count, max(a.seq_no) seq_no
		from table(PKG_NAME_GROUP.GET_1LEVEL_ITEM_WITH_SPEC(#{PRODUCT, jdbcType=VARCHAR}, #{SPEC_TYPE, jdbcType=VARCHAR}, #{PUID, jdbcType=VARCHAR}, #{ROWKEY, jdbcType=VARCHAR})) a
		group by a.function_no, a.child_no, a.child_name, a.condition, a.supply_mode, a.lv
		order by a.function_no, a.lv, a.child_name  	
	</select>	
	
	<select id="getSpec" resultType="string">
		select pkg_name_group.get_Spec(#{SPEC_TYPE, jdbcType=VARCHAR}, #{PUID, jdbcType=VARCHAR}) spec from dual
	</select>
  
    <select id="getRowKey" resultType="string">
        select to_char(SYSTIMESTAMP,'yyyymmddhh24missFF3') rowkey from dual
    </select>
	
	<select id="getUserSpecWithCategory" resultType="java.util.HashMap">
		SELECT POPTION CATE_NO, PSTRING_VALUE OPTION_NO
		  FROM INFODBA.PSTOREDOPTIONVALUE
		 WHERE RPARENTU = #{PUID, jdbcType=VARCHAR}
		 ORDER BY PSTRING_VALUE
	</select>
	
	<!-- [20240424][UPGRADE] HBOM DBLink 제거 -->
	<select id="getBuildSpecWithCategory" resultType="java.util.HashMap">
		SELECT CATE_NO, OPTION_NO
		  FROM (SELECT CATE_NO,
		               CASE
		                 WHEN CATE_GROUP_NO IN ('2', '3', '4') THEN
		                  OPTION_NO
		                 ELSE
		                  CATE_NO || OPTION_NO
		               END OPTION_NO
		          FROM HBOM.PSPEC_DETAIL
		         WHERE SPEC_NO = #{PUID, jdbcType=VARCHAR})
		 ORDER BY OPTION_NO
	</select>
	
	<!-- [20240424][UPGRADE] HBOM DBLink 제거 -->
	<select id="getPlanResultSpecWithCategory" resultType="java.util.HashMap">
		SELECT A.CATE_NO,
		       CASE
		         WHEN LENGTH(OPTION_NO) = 4 THEN
		          OPTION_NO
		         ELSE
		          CATE_NO || OPTION_NO
		       END AS OPTION_NO
		  FROM HBOM.PSPEC_DETAIL A
		 WHERE SPEC_NO = #{PUID, jdbcType=VARCHAR}
		 ORDER BY CASE
		            WHEN LENGTH(OPTION_NO) = 4 THEN
		             OPTION_NO
		            ELSE
		             CATE_NO || OPTION_NO
		          END
	</select>
  <!-- 주간 에러 Report 조회 -->
  	<!-- [20240424][UPGRADE] HBOM DBLink 제거 -->
    <select id="getPngWeeklyErrorReport" resultType="java.util.HashMap">
    <!-- [CSH][SR181025-028] -->
    <!--  
      SELECT H.PRODUCT_NO, H.GROUP_NO, M.GROUP_NAME, H.SPEC_NO, H.REASON, TO_CHAR(H.CREATION_DATE,'YYYY-MM-DD') CREATION_DATE
              FROM PNG_WEEKLY_REPORT_HISTORY H, PNG_MASTER M
          WHERE H.GROUP_NO = M.GROUP_ID
         <if test="PRODUCT_NO != null">
                AND H.PRODUCT_NO = #{PRODUCT_NO, jdbcType=VARCHAR}
         </if>
         <if test="GROUP_ID != null">
               AND H.GROUP_NO = #{GROUP_NO, jdbcType=VARCHAR}
         </if>
         <if test="SPEC_NO != null">
               AND UPPER(H.SPEC_NO) LIKE  UPPER('%' || #{SPEC_NO, jdbcType=VARCHAR} ||'%')
         </if>
         <if test="CREATION_DATE_FROM != null">
               AND TO_CHAR(H.CREATION_DATE,'YYYY-MM-DD')  <![CDATA[>=]]> #{CREATION_DATE_FROM, jdbcType=VARCHAR}
         </if>
         <if test="CREATION_DATE_TO != null">
              AND TO_CHAR(H.CREATION_DATE,'YYYY-MM-DD') <![CDATA[<=]]> #{CREATION_DATE_TO, jdbcType=VARCHAR}
         </if>
            ORDER BY CREATION_DATE DESC, H.PRODUCT_NO, H.GROUP_NO, H.SPEC_NO
     -->
          with weekreport as
          (
          SELECT H.PRODUCT_NO PRODUCT_NO
               , H.GROUP_NO GROUP_NO
               , M.GROUP_NAME GROUP_NAME
              , H.SPEC_NO SPEC_NO
              , H.REASON REASON
              , TO_CHAR(H.CREATION_DATE,'YYYY-MM-DD') CREATION_DATE
              , (select cate_no || option_no
                 from HBOM.PSPEC_DETAIL
                 where SPEC_NO = H.SPEC_NO
                 and cate_no = 'A02' ) MY
          FROM PNG_WEEKLY_REPORT_HISTORY H, PNG_MASTER M
          WHERE H.GROUP_NO = M.GROUP_ID
           <if test="PRODUCT_NO != null">
                AND H.PRODUCT_NO = #{PRODUCT_NO, jdbcType=VARCHAR}
           </if>
           <if test="GROUP_ID != null">
                 AND H.GROUP_NO = #{GROUP_NO, jdbcType=VARCHAR}
           </if>
           <if test="SPEC_NO != null">
                 AND UPPER(H.SPEC_NO) LIKE  UPPER('%' || #{SPEC_NO, jdbcType=VARCHAR} ||'%')
           </if>
           <if test="CREATION_DATE_FROM != null">
                 AND TO_CHAR(H.CREATION_DATE,'YYYY-MM-DD')  <![CDATA[>=]]> #{CREATION_DATE_FROM, jdbcType=VARCHAR}
           </if>
           <if test="CREATION_DATE_TO != null">
                AND TO_CHAR(H.CREATION_DATE,'YYYY-MM-DD') <![CDATA[<=]]> #{CREATION_DATE_TO, jdbcType=VARCHAR}
           </if>
          ) 
          select *
          from weekreport w
          where not exists (select my 
                            from part_name_group_exclude_data ex
                            where ex.product = w.product_no 
                            and ex.my = w.my 
                            and nvl(ex.groupname,'1') = CASE
                                                        WHEN nvl(ex.groupname,'1') = '1' THEN '1'
                                                        ELSE w.group_name
                                                        END
                            )
          ORDER BY w.CREATION_DATE DESC, w.PRODUCT_NO, w.GROUP_NO, w.SPEC_NO
    </select>
    <!-- 주간 에러 리포트 수행한 최근 날짜 조회 -->
    <select id="getPngWeeklyRepLastDate" resultType="java.lang.String">
     SELECT TO_CHAR(MAX(H.CREATION_DATE),'YYYY-MM-DD') CREATION_DATE FROM PNG_WEEKLY_REPORT_HISTORY H
    </select>
    
    <!-- [20240424][UPGRADE] HBOM DBLink 제거 -->
     <!-- build spec 별 옵션 코드 리스트 : ljg -->
    <select id="getOptionCodeList" resultType="java.util.HashMap">
     SELECT TMP.OPTION_NO
        FROM (
                SELECT 
                    CASE
                        WHEN LENGTH (OPTION_NO) = 4 THEN OPTION_NO
                        ELSE CATE_NO || OPTION_NO
                     END
                        AS OPTION_NO
                FROM HBOM.PSPEC_DETAIL 
                WHERE  1=1
                AND  SPEC_NO = #{SPEC_NO, jdbcType=VARCHAR}
                ORDER BY CASE WHEN LENGTH(OPTION_NO) = 4 THEN OPTION_NO
                       ELSE CATE_NO || OPTION_NO
                       END
                ) TMP
        WHERE 1=1
        AND  OPTION_NO NOT LIKE '2%' AND OPTION_NO NOT LIKE '3%' AND OPTION_NO NOT LIKE '4%'
    </select>
    
    <!--[20170614][ljg] build spec 별 옵션 코드 리스트 중 Model Year 코드만 가져옴 -->
    <!-- [20240424][UPGRADE] HBOM DBLink 제거 -->
    <select id="getModelYear" resultType="java.lang.String">
     SELECT TMP.OPTION_NO
        FROM (
                SELECT 
                    CASE
                        WHEN LENGTH (OPTION_NO) = 4 THEN OPTION_NO
                        ELSE CATE_NO || OPTION_NO
                     END
                        AS OPTION_NO
                FROM HBOM.PSPEC_DETAIL 
                WHERE  1=1
                AND  SPEC_NO = #{SPEC_NO, jdbcType=VARCHAR}
                ) TMP
        WHERE 1=1
        AND  OPTION_NO LIKE 'A02%'
    </select>
    
    <!-- [CSH][SR181025-028] -->
    <update id="updateExcludeData" parameterType="com.ssangyong.dto.ExcludeFromNameGroup">
        update PART_NAME_GROUP_EXCLUDE_DATA 
           set product = #{product, jdbcType=VARCHAR},
               my = #{my, jdbcType=VARCHAR},
               groupName = #{groupName, jdbcType=VARCHAR},
               remarks = #{remarks, jdbcType=VARCHAR}
         where ex_id = #{id} 
    </update>
    
    <!-- [CSH][SR181025-028] -->
    <insert id="insertExcludeData" parameterType="com.ssangyong.dto.ExcludeFromNameGroup">
        insert into PART_NAME_GROUP_EXCLUDE_DATA 
                    ( ex_id, product, my, groupname, remarks )
        SELECT NVL(MAX( ex_id ), 0) + 1, #{product, jdbcType=VARCHAR}, #{my, jdbcType=VARCHAR}, #{groupName, jdbcType=VARCHAR}, #{remarks, jdbcType=VARCHAR}  FROM PART_NAME_GROUP_EXCLUDE_DATA                 
         
    </insert>
    
    <!-- [CSH][SR181025-028] -->
    <delete id="deleteExcludeData" parameterType="com.ssangyong.dto.ExcludeFromNameGroup">
        delete PART_NAME_GROUP_EXCLUDE_DATA 
         where ex_id = #{id} 
    </delete>
    
    <!-- [CSH][SR181025-028] -->
    <select id="getExcludePartData" parameterType="java.util.HashMap" resultMap="ExcludeFromNameGroup">
        select ex_id, product, my, groupName, remarks, create_date
        from PART_NAME_GROUP_EXCLUDE_DATA
        order by product, my, groupName
    </select>
</mapper>