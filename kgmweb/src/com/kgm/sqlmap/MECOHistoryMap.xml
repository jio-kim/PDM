<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">  

<mapper namespace="com.kgm.mapper.MECOHistoryMapper">  
	<select id="selectUserWorkingECO" resultType="String">  
		select ir.puid
		  from infodba.PS7_ECOREVISION ecoir
		     , infodba.PITEMREVISION ir
		     , infodba.PWORKSPACEOBJECT irw
		     , infodba.PPOM_APPLICATION_OBJECT ira
		     , infodba.PPOM_USER u
		     , infodba.PITEM i
		 where ecoir.puid = ir.puid
		   and ir.puid = irw.puid
		   and irw.pdate_released is null
		   and not exists (select 1 from infodba.pprocess_stage_list where puid = ir.puid)
		   and irw.pactive_seq = 1
		   and irw.puid = ira.puid
		   and ira.rowning_useru = u.puid
		   and u.puser_id = #{user_id, jdbcType=VARCHAR}
		   and ir.ritems_tagu = i.puid
	</select>
	
	<update id="extractEPL" statementType="CALLABLE">
	    {call ECO_EXTRACT_EPL(#{ecoNo, jdbcType=VARCHAR}, 'system', false)}
	</update>	

	<select id="selectEPLData" resultType="String">
		select eco_no
		     , ct
		  from eco_bom_list
		 where parent_no = #{parent_no, jdbcType=VARCHAR}
		   and parent_rev = #{parent_rev, jdbcType=VARCHAR}
		   and occ_threads like <![CDATA['%']]> || #{occ_uid, jdbcType=VARCHAR} || <![CDATA['%']]>
	</select>

	<!-- ECO DWG List -->
	<resultMap id="selectECODwgListResult" type="com.kgm.rac.kernel.SYMCECODwgData">        
        <result property="ecoNo" column="ECO_NO"/>
        <result property="project" column="PROJECT"/>
        <result property="modelType" column="MODEL_TYPE"/>
        <result property="catProduct" column="V5_ASSM"/>
        <result property="partOrigin" column="PART_ORIGIN"/>
        <result property="partNo" column="PART_NO"/>
        <result property="revisionNo" column="PART_REV"/>
        <result property="revUid" column="REV_PUID"/>
        <result property="partName" column="PART_NAME"/>
        <result property="responsibility" column="RESPONSIBILITY"/>
        <result property="has3d" column="HAS_3D"/>
        <result property="has2d" column="HAS_2D"/>        
        <result property="zip" column="ZIP"/>
        <result property="sMode" column="SMODE"/>
        <result property="changeDesc" column="CHG_DESC"/>
    </resultMap>
    
    <!-- 2016-05-30 taeku.jeong ECO_BOM_LIST.PARENT_PROJECT -> ECO_BOM_LIST.NEW_PROJECT 로 수정 -->
	<select id="selectECODwgList" resultMap="selectECODwgListResult" >  
        WITH EPL_DWG AS (
            SELECT DWG.ECO_NO
                 , IR.PS7_PART_TYPE PART_ORIGIN
                 , DWG.PART_NO, DWG.PART_REV, IR.PUID REV_PUID
                 , DECODE(IRW.POBJECT_TYPE, 'S7_StdpartRevision', IRW.POBJECT_NAME || ' ' || IRW.POBJECT_DESC, IRW.POBJECT_NAME) PART_NAME
                 , VPR.PS7_RESPONSIBILITY RESPONSIBILITY
                 , EXISTS_DATASET (IR.PUID, 'CATPart', IRW.PDATE_RELEASED) V5_PART
                 , EXISTS_DATASET (IR.PUID, 'CATProduct', IRW.PDATE_RELEASED) V5_ASSM
                 , EXISTS_DATASET (IR.PUID, 'CATDrawing', IRW.PDATE_RELEASED) V5_DWG
                 , CASE WHEN IRW.POBJECT_TYPE = 'S7_VehpartRevision' AND VPR.PS7_CAT_V4_TYPE IN ('B', 'M') THEN
                             EXISTS_DATASET (IR.PUID, 'catia', IRW.PDATE_RELEASED)
                        ELSE NULL
                   END AS V4_3D
                 , CASE WHEN IRW.POBJECT_TYPE = 'S7_VehpartRevision' AND VPR.PS7_CAT_V4_TYPE IN ('B', 'D') THEN
                             EXISTS_DATASET (IR.PUID, 'catia', IRW.PDATE_RELEASED)
                        ELSE NULL
                   END AS V4_2D
                 , CASE WHEN IRW.POBJECT_TYPE = 'S7_VehpartRevision' THEN VPR.PS7_DRW_SIZE
                        ELSE NULL
                   END AS DWG_SIZE
                 , EXISTS_DATASET (IR.PUID, 'Zip', IRW.PDATE_RELEASED) ZIP
                 , CHG_DESC
             FROM  ECO_DWG_LIST DWG
                 , INFODBA.PITEM I
                 , INFODBA.PITEMREVISION IR
                 , INFODBA.PWORKSPACEOBJECT IRW
                 , INFODBA.PS7_VEHPARTREVISION VPR
             WHERE DWG.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
               AND DWG.PART_NO = I.PITEM_ID
               AND I.PUID = IR.RITEMS_TAGU
               AND IRW.PACTIVE_SEQ = 1
               AND IR.PITEM_REVISION_ID = DWG.PART_REV
               AND IR.PUID = IRW.PUID
               AND IR.PUID = VPR.PUID(+)
        ), DWG_TARGET AS (
            SELECT ECO_NO
                 , PART_ORIGIN, PART_NO, PART_REV, REV_PUID, PART_NAME
                 , RESPONSIBILITY
                 , CASE WHEN V5_PART IS NOT NULL OR V5_ASSM IS NOT NULL OR V5_DWG IS NOT NULL THEN 'V5'
                        WHEN V4_3D IS NOT NULL OR V4_2D IS NOT NULL THEN 'V4'
                        ELSE NULL
                   END AS MODEL_TYPE
                 , DECODE (V5_PART, NULL, DECODE (V5_ASSM, NULL, DECODE(V4_3D, NULL, NULL, V4_3D), V5_ASSM), V5_PART) HAS_3D
                 , V5_ASSM
                 , DECODE (V5_DWG, NULL, DECODE (V4_2D, NULL, NULL, V4_2D), V5_DWG) HAS_2D
                 , DWG_SIZE
                 , ZIP
                 , CHG_DESC
            FROM EPL_DWG
        )
        SELECT BOM.PROJECT
             , DWG.MODEL_TYPE
             , DWG.ECO_NO
             , PART_ORIGIN, DWG.PART_NO, DWG.PART_REV, DWG.REV_PUID, DWG.PART_NAME
             , DWG.RESPONSIBILITY
             , DWG.V5_ASSM
             , DWG.HAS_2D || DECODE(DWG.DWG_SIZE, NULL, '', '.', '', '(' || DWG.DWG_SIZE || ')') HAS_2D
             , DWG.HAS_3D || DECODE(DWG.HAS_3D, NULL, NULL, '/' || EXISTS_JT(DWG.REV_PUID)) HAS_3D
             , DWG.ZIP
             , BOM.SMODE, DWG.CHG_DESC
          FROM DWG_TARGET DWG
             , (SELECT MAX(PARENT_PROJECT) PROJECT
                    , NEW_PART_NO
                    , NEW_PART_REV
                    , MAX(NEW_SMODE) SMODE
                 FROM ECO_BOM_LIST BOM
                WHERE BOM.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
                  AND BOM.NEW_PART_NO IS NOT NULL
                GROUP BY NEW_PART_NO, NEW_PART_REV) BOM
             , INFODBA.PITEMREVISION PIR
         WHERE (MODEL_TYPE IS NOT NULL OR ZIP IS NOT NULL)
           AND DWG.PART_NO = BOM.NEW_PART_NO
           AND DWG.PART_REV = BOM.NEW_PART_REV
           AND DWG.REV_PUID = PIR.PUID(+) 
         ORDER BY DWG.PART_NO
    </select>
    
    <!-- ECO-B : DWG Properties Update  -->     
    <update id="updateECODwgProperties" parameterType="com.kgm.rac.kernel.SYMCECODwgData">      
        UPDATE ECO_DWG_LIST SET
            CHG_DESC = #{changeDesc, jdbcType=VARCHAR}           
        WHERE
            ECO_NO = #{ecoNo, jdbcType=VARCHAR}
            AND PART_NO = #{partNo, jdbcType=VARCHAR}
            AND PART_REV = #{revisionNo, jdbcType=VARCHAR}             
    </update> 
    
    <!-- ECO EPL Requires Regenerate -->
    <!-- [20170104][ymjang] S201, SM01 제외  -->
    <select id="isECOEPLChanged" resultType="String">
        WITH ECO AS (
            SELECT EI.PITEM_ID ECO_NO
                 , EIR.PUID ECO_UID
                 , DECODE(EIR.PS7_ECO_KIND, 'E', 'Y', 'N') IS_ENGIN
              FROM INFODBA.PITEM EI
                 , INFODBA.PITEMREVISION IR
                 , INFODBA.PS7_ECOREVISION EIR
                 , INFODBA.PWORKSPACEOBJECT EIRW
             WHERE EI.PITEM_ID = #{ecoNo, jdbcType=VARCHAR}
               AND EI.PUID = IR.RITEMS_TAGU
               AND IR.PUID = EIR.PUID
               AND EIR.PUID = EIRW.PUID
               AND EIRW.PACTIVE_SEQ = 1
        ), ECO_PART AS (
            SELECT E.ECO_NO, E.ECO_UID, E.IS_ENGIN
                 , I.PITEM_ID NPART_NO, IR.PITEM_REVISION_ID NPART_REV
                 , IR.PUID NPUID, IW.POBJECT_TYPE PART_TYPE
              FROM ECO E
                 , INFODBA.PITEMREVISION IR
                 , INFODBA.PWORKSPACEOBJECT IRW
                 , INFODBA.PITEM I
                 , INFODBA.PWORKSPACEOBJECT IW
             WHERE IR.RS7_ECO_NOU = E.ECO_UID
               AND IR.PUID = IRW.PUID
               AND IRW.PACTIVE_SEQ = 1
               AND IR.RITEMS_TAGU = I.PUID
               AND I.PUID = IW.PUID
               AND 'P' = CASE WHEN IW.POBJECT_TYPE = 'S7_FunctionMast' THEN 'P'
                              ELSE IR.PS7_STAGE
                         END
               AND IW.POBJECT_TYPE IN ('S7_Vehpart', 'S7_FunctionMast')
               AND IRW.PDATE_RELEASED IS NULL
        ), ECO_PART_COMPARE AS (
            SELECT EP.*
                 , BVRO.PLAST_MOD_DATE NBVR_DATE
                 , IRO.PLAST_MOD_DATE NPART_DATE
                 , BP.OPART_NO
                 , BP.OPART_REV
                 , BP.OPUID
              FROM ECO_PART EP
                 , INFODBA.PSTRUCTURE_REVISIONS SR
                 , INFODBA.PPOM_APPLICATION_OBJECT BVRO
                 , INFODBA.PPOM_APPLICATION_OBJECT IRO
                 , (SELECT EP.NPUID
                         , BI.PITEM_ID OPART_NO
                         , BIR.PITEM_REVISION_ID OPART_REV
                         , BIR.PUID OPUID
                         , BIR.PS7_STAGE STAGE
                      FROM ECO_PART EP
                         , INFODBA.PIMANRELATION R
                         , INFODBA.PIMANTYPE T
                         , INFODBA.PITEMREVISION BIR
                         , INFODBA.PWORKSPACEOBJECT BIRW
                         , INFODBA.PITEM BI
                     WHERE EP.NPUID = R.RPRIMARY_OBJECTU
                       AND R.RRELATION_TYPEU = T.PUID
                       AND T.PTYPE_NAME = 'IMAN_based_on'
                       AND R.RSECONDARY_OBJECTU = BIR.PUID
                       AND BIR.PUID = BIRW.PUID
                       AND BIRW.PDATE_RELEASED IS NOT NULL
                       AND 'P' = CASE WHEN EP.PART_TYPE = 'S7_FunctionMast' THEN 'P'
                                      ELSE BIR.PS7_STAGE
                                 END
                       AND BIR.RITEMS_TAGU = BI.PUID) BP
             WHERE EP.NPUID = BP.NPUID(+)
               AND EP.NPUID = SR.PUID(+)
               AND SR.PVALU_0 = BVRO.PUID(+)
               AND EP.NPUID = IRO.PUID
        ), EPL_PART_DELETE AS (
            SELECT DISTINCT E.*
                 , BL.NEW_PART_NO NPART_NO, BL.NEW_PART_REV NPART_REV, BL.NEW_PART_TYPE PART_TYPE
              FROM ECO E
                 , ECO_BOM_LIST BL
             WHERE E.ECO_NO = BL.ECO_NO
               AND BL.EPL_YN = 'Y'
               AND BL.CT <![CDATA[<>]]> 'D'
            UNION
              SELECT DISTINCT E.*
                 , BL.PARENT_NO NPART_NO, BL.PARENT_REV NPART_REV, BL.PARENT_TYPE PART_TYPE
              FROM ECO E
                 , ECO_BOM_LIST BL
             WHERE E.ECO_NO = BL.ECO_NO
        ), EPL_PART_TARGET AS (
            SELECT EP.ECO_UID, EP.IS_ENGIN
                 , EP.NPART_NO, EP.NPART_REV, EP.PART_TYPE
                 , CASE WHEN EP.NBVR_DATE IS NOT NULL THEN EP.NBVR_DATE
                        WHEN OPART_NO IS NULL THEN NULL
                        ELSE (SELECT PLAST_MOD_DATE
                                FROM INFODBA.PSTRUCTURE_REVISIONS SR
                                   , INFODBA.PPOM_APPLICATION_OBJECT BVRAO
                               WHERE EP.OPUID = SR.PUID
                                 AND SR.PVALU_0 = BVRAO.PUID)
                   END NBVR_DATE
                 , (SELECT EPL_DATE
                      FROM ECO_EPL_PART_DATE PD
                     WHERE EP.ECO_NO = PD.ECO_NO
                       AND EP.NPART_NO = PD.PART_NO
                       AND EP.NPART_REV = PD.PART_REV) EPL_BOM_DATE
                 , NPART_DATE
                 , (SELECT MIN(CRE_DATE)
                      FROM ECO_BOM_LIST BL
                     WHERE EP.ECO_NO = BL.ECO_NO
                       AND BL.EPL_YN = 'Y'
                       AND EP.NPART_NO = BL.NEW_PART_NO
                       AND EP.NPART_REV = BL.NEW_PART_REV) EPL_PART_DATE
                 , OPART_NO, OPART_REV
              FROM ECO_PART_COMPARE EP
            UNION ALL
            -- ECO 번호가 변경되거나 삭제된 Part
            SELECT DL.ECO_UID, DL.IS_ENGIN
                 , DL.NPART_NO, DL.NPART_REV, DL.PART_TYPE
                 , NULL NBVR_DATE
                 , (SELECT EPL_DATE
                      FROM ECO_EPL_PART_DATE ED
                     WHERE ED.ECO_NO = DL.ECO_NO
                       AND DL.NPART_NO = ED.PART_NO
                       AND DL.NPART_REV = ED.PART_REV) EPL_BOM_DATE
                 , NULL NPART_DATE
                 , NULL EPL_PART_DATE
                 , (SELECT PITEM_ID
                      FROM INFODBA.PITEM I
                         , INFODBA.PITEMREVISION IR
                         , INFODBA.PWORKSPACEOBJECT IRW
                     WHERE I.PITEM_ID = DL.NPART_NO
                       AND I.PUID = IR.RITEMS_TAGU
                       AND IR.PITEM_REVISION_ID = DL.NPART_REV
                       AND IR.PUID = IRW.PUID
                       AND IRW.PACTIVE_SEQ = 1) OPART_NO
                 , NULL OPART_REV
              FROM EPL_PART_DELETE DL
             WHERE NOT EXISTS (SELECT 1
                                 FROM INFODBA.PITEM I
                                    , INFODBA.PITEMREVISION IR
                                    , INFODBA.PWORKSPACEOBJECT IRW
                                WHERE I.PITEM_ID = DL.NPART_NO
                                  AND I.PUID = IR.RITEMS_TAGU
                                  AND IR.PITEM_REVISION_ID = DL.NPART_REV
                                  AND IR.PUID = IRW.PUID
                                  AND IRW.PACTIVE_SEQ = 1
                                  AND NVL(DL.ECO_UID, '@') = NVL(IR.RS7_ECO_NOU, '@'))
            )
            SELECT DECODE(count(*), 0, 'FALSE', 'TRUE')
              FROM EPL_PART_TARGET
             WHERE 1 = CASE WHEN NBVR_DATE IS NULL AND EPL_BOM_DATE IS NOT NULL THEN 1
                            WHEN NBVR_DATE IS NOT NULL AND EPL_BOM_DATE IS NULL THEN 1
                            WHEN NBVR_DATE <![CDATA[<>]]> EPL_BOM_DATE THEN 1
                            WHEN NPART_DATE IS NOT NULL AND EPL_PART_DATE IS NULL 
                                 AND 1 = ( CASE WHEN #{ecoNo, jdbcType=VARCHAR} LIKE 'CM%' THEN IS_CONNECTED_FUNCTION(NPART_NO)
                                                ELSE IS_CONNECTED_NONIF_FUNCTION(NPART_NO)
                                           END ) OR NPART_DATE <![CDATA[<>]]> EPL_PART_DATE THEN 1
                            WHEN NPART_DATE IS NULL AND OPART_NO IS NULL THEN 1
                            ELSE 0
                        END 
    </select>
    
    <!-- ECO EPL(BOM) List -->
    <resultMap id="BIND_SYMCBOMEditData" type="com.kgm.rac.kernel.SYMCBOMEditData">         
        <result property="eplId" column="EPL_ID"/>
        <result property="ecoNo" column="ECO_NO"/>
        <result property="ecoNoOld" column="ECO_NO_OLD"/>
        <result property="occUid" column="OCC_THREADS"/>
        <result property="changeType" column="CT"/>
        <result property="parentNo" column="PARENT_NO"/>
        <result property="parentRev" column="PARENT_REV"/>
        <result property="projectOld" column="OLD_PROJECT"/>
        <result property="projectNew" column="NEW_PROJECT"/>
        <result property="partOriginOld" column="OLD_PART_ORIGIN"/>
        <result property="partNoOld" column="OLD_PART_NO"/>
        <result property="partRevOld" column="OLD_PART_REV"/>
        <result property="partOriginNew" column="NEW_PART_ORIGIN"/>
        <result property="partNoNew" column="NEW_PART_NO"/>
        <result property="partRevNew" column="NEW_PART_REV"/>
        <result property="partNameNew" column="NEW_PART_NAME"/>
        <result property="partNameOld" column="OLD_PART_NAME"/>                                
        <result property="partTypeNew" column="NEW_PART_TYPE"/>
        <result property="partTypeOld" column="OLD_PART_TYPE"/>                                
        <result property="seqOld" column="OLD_SEQ"/>
        <result property="seqNew" column="NEW_SEQ"/>
        <result property="qtyOld" column="OLD_QTY"/>
        <result property="qtyNew" column="NEW_QTY"/>
        <result property="supplyModeOld" column="OLD_SMODE"/>
        <result property="supplyModeNew" column="NEW_SMODE"/>
        <result property="altOld" column="OLD_APART"/>
        <result property="altNew" column="NEW_APART"/>
        <result property="moduleCodeOld" column="OLD_MCODE"/>
        <result property="moduleCodeNew" column="NEW_MCODE"/>        
        <result property="vcOld" javaType="java.lang.String" jdbcType="CLOB" column="DECODE_OLD_VC"/>
        <result property="vcNew" javaType="java.lang.String" jdbcType="CLOB" column="DECODE_NEW_VC"/>        
        <result property="selNew" column="NEW_SEL"/>
        <result property="selOld" column="OLD_SEL"/>
        <result property="catNew" column="NEW_CAT"/>
        <result property="catOld" column="OLD_CAT"/>
        <result property="colorIdNew" column="NEW_COLOR_I"/>
        <result property="colorIdOld" column="OLD_COLOR_I"/>
        <result property="colorSectionNew" column="NEW_COLOR_S"/>
        <result property="colorSectionOld" column="OLD_COLOR_S"/>
        <result property="shownOnNew" column="NEW_SHOWN_ON"/>
        <result property="shownOnOld" column="OLD_SHOWN_ON"/>
        <result property="icOld" column="OLD_IC"/>
        <result property="icNew" column="NEW_IC"/>
        <result property="pltStkOld" column="OLD_PLT_STK"/>
        <result property="asStkOld" column="OLD_AS_STK"/>       
        <result property="costNew" column="NEW_COST"/>
        <result property="toolNew" column="NEW_TOOL"/>
        <result property="chgDesc" column="CHG_DESC"/>
        <result property="userId" column="UPD_USER_ID"/>       
         <!-- <result property="" column="UPD_DATE"/> -->     
    </resultMap>
    
    <select id="selectECOEplList" parameterType="java.lang.String" resultMap="BIND_SYMCBOMEditData">
        WITH EPL_BOM AS (
            SELECT C.EPL_ID
                 , CASE WHEN C.PARENT_TYPE = 'S7_Function' THEN
                             'ROOT'
                        WHEN EXISTS (SELECT 1
                                       FROM ECO_BOM_LIST BL
                                      WHERE BL.NEW_PART_NO = C.PARENT_NO
                                        AND BL.ECO_NO = C.ECO_NO
                                        AND BL.EPL_YN = 'Y') THEN
                             C.PARENT_NO
                        WHEN C.PARENT_TYPE = 'S7_FunctionMast' THEN 
                             (SELECT DECODE(MIN(BL.PARENT_NO), NULL, 'ROOT', MIN(BL.PARENT_NO))
                                FROM ECO_BOM_LIST BL
                               WHERE BL.ECO_NO = C.ECO_NO
                                 AND BL.PARENT_TYPE = 'S7_Function'
                                 AND BL.EPL_YN = 'Y'
                                 AND INSTR(C.PARENT_NO, BL.PARENT_NO, 1) > 0)
                        ELSE
                             'ROOT'
                   END PID
                 , C.NEW_PART_NO CID
                 , CASE WHEN C.PARENT_TYPE = 'S7_Function' OR C.PARENT_TYPE = 'S7_FunctionMast' THEN
                             0
                        WHEN NOT EXISTS (SELECT 1
                                           FROM ECO_BOM_LIST BL
                                          WHERE BL.NEW_PART_NO = C.PARENT_NO
                                            AND BL.ECO_NO = C.ECO_NO
                                            AND BL.EPL_YN = 'Y') THEN
                             -1
                        ELSE
                             DECODE (C.NEW_SEQ, NULL, TO_NUMBER (C.OLD_SEQ), TO_NUMBER (C.NEW_SEQ))
                   END ORDER_NO
              FROM ECO_BOM_LIST C
             WHERE C.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
               AND C.EPL_YN = 'Y'
        )
        SELECT EB.ORDER_NO, BL.*
             , NEW_PART.PART_ORIGIN NEW_PART_ORIGIN, OLD_PART.PART_ORIGIN OLD_PART_ORIGIN
             , NEW_PART.PART_NAME NEW_PART_NAME, OLD_PART.PART_NAME OLD_PART_NAME
             , DECODE_OPTION_CONDITION(BL.OLD_VC) DECODE_OLD_VC, DECODE_OPTION_CONDITION(BL.NEW_VC) DECODE_NEW_VC
             , NEW_PART.SEL NEW_SEL, OLD_PART.SEL OLD_SEL
             , NEW_PART.CAT NEW_CAT, OLD_PART.CAT OLD_CAT
             , NEW_PART.COLOR_I NEW_COLOR_I, OLD_PART.COLOR_I OLD_COLOR_I
             , NEW_PART.COLOR_S NEW_COLOR_S, OLD_PART.COLOR_S OLD_COLOR_S
             , NEW_PART.SON NEW_SHOWN_ON, OLD_PART.SON OLD_SHOWN_ON
         FROM EPL_BOM EB,
              ECO_BOM_LIST BL,
              (SELECT I.PITEM_ID ITEM_ID
                    , IR.PITEM_REVISION_ID ITEM_REV
                    , IR.PS7_PART_TYPE PART_ORIGIN
                    , DECODE(IRW.POBJECT_TYPE, 'S7_StdpartRevision', IRW.POBJECT_NAME || ' ' || IRW.POBJECT_DESC, IRW.POBJECT_NAME) PART_NAME
                    , IRV.PS7_SELECTIVE_PART SEL
                    , IRV.PS7_REGULATION CAT
                    , IRV.PS7_COLOR COLOR_I
                    , IRV.PS7_COLOR_ID COLOR_S
                    , CASE WHEN IRV.RS7_SHOWN_PART_NOU = 'AAAAAAAAAAAAAA' THEN ''
                           ELSE (SELECT PITEM_ID
                                   FROM INFODBA.PITEM I
                                  WHERE IRV.RS7_SHOWN_PART_NOU = I.PUID)
                      END SON
                 FROM INFODBA.PITEM I
                    , INFODBA.PITEMREVISION IR
                    , INFODBA.PS7_VEHPARTREVISION IRV
                    , INFODBA.PWORKSPACEOBJECT IRW
                WHERE IRW.POBJECT_TYPE IN ('S7_FunctionMastRevision', 'S7_VehpartRevision', 'S7_StdpartRevision')
                  AND IRW.PUID = IRV.PUID(+)
                  AND IRW.PUID = IR.PUID
                  AND IR.RITEMS_TAGU = I.PUID
                  AND IRW.PUID = IR.PUID
                  AND IRW.PACTIVE_SEQ = 1) NEW_PART,
              (SELECT I.PITEM_ID ITEM_ID
                    , IR.PITEM_REVISION_ID ITEM_REV
                    , IR.PS7_PART_TYPE PART_ORIGIN
                    , DECODE(IRW.POBJECT_TYPE, 'S7_StdpartRevision', IRW.POBJECT_NAME || ' ' || IRW.POBJECT_DESC, IRW.POBJECT_NAME) PART_NAME
                    , IRV.PS7_SELECTIVE_PART SEL
                    , IRV.PS7_REGULATION CAT
                    , IRV.PS7_COLOR COLOR_I
                    , IRV.PS7_COLOR_ID COLOR_S
                    , CASE WHEN IRV.RS7_SHOWN_PART_NOU = 'AAAAAAAAAAAAAA' THEN ''
                           ELSE (SELECT PITEM_ID
                                   FROM INFODBA.PITEM I
                                  WHERE IRV.RS7_SHOWN_PART_NOU = I.PUID)
                      END SON
                 FROM INFODBA.PITEM I
                    , INFODBA.PITEMREVISION IR
                    , INFODBA.PS7_VEHPARTREVISION IRV
                    , INFODBA.PWORKSPACEOBJECT IRW
                WHERE IRW.POBJECT_TYPE IN ('S7_FunctionMastRevision', 'S7_VehpartRevision', 'S7_StdpartRevision')
                  AND IRW.PUID = IRV.PUID(+)
                  AND IRW.PUID = IR.PUID
                  AND IR.RITEMS_TAGU = I.PUID
                  AND IRW.PUID = IR.PUID
                  AND IRW.PACTIVE_SEQ = 1) OLD_PART
         WHERE BL.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
           AND BL.EPL_YN = 'Y'
           AND BL.EPL_ID = EB.EPL_ID
           AND NEW_PART_NO = NEW_PART.ITEM_ID(+)
           AND NEW_PART_REV = NEW_PART.ITEM_REV(+)
           AND OLD_PART_NO = OLD_PART.ITEM_ID(+)
           AND OLD_PART_REV = OLD_PART.ITEM_REV(+)
         START WITH EB.PID = 'ROOT'
         CONNECT BY PRIOR EB.CID = EB.PID
         ORDER SIBLINGS BY EB.ORDER_NO
                         , DECODE(BL.PARENT_TYPE, 'S7_FunctionMast', 'F' || SUBSTR(BL.PARENT_NO, 2), BL.PARENT_NO)
                         , DECODE(BL.NEW_SEQ, NULL, TO_NUMBER (BL.OLD_SEQ), TO_NUMBER (BL.NEW_SEQ))
    </select>
    
    <!-- ECO-C : EPL Properties Update  -->
    <update id="updateECOEPLProperties" parameterType="com.kgm.rac.kernel.SYMCBOMEditData">      
        UPDATE ECO_BOM_LIST SET
            NEW_IC = #{icNew, jdbcType=VARCHAR}
            ,OLD_IC = #{icOld, jdbcType=VARCHAR}
            ,OLD_PLT_STK = #{pltStkOld, jdbcType=VARCHAR}
            ,OLD_AS_STK = #{asStkOld, jdbcType=VARCHAR}
            ,NEW_COST = #{costNew, jdbcType=VARCHAR}
            ,NEW_TOOL = #{toolNew, jdbcType=VARCHAR}
            ,CHG_DESC = #{chgDesc, jdbcType=VARCHAR}
        WHERE
            EPL_ID = #{eplId, jdbcType=VARCHAR}
    </update>
    
    <!-- ECO PartList List -->
    <resultMap id="BIND_SYMCPartListData" type="com.kgm.rac.kernel.SYMCPartListData">         
        <result property="partId" column="PART_ID"/>
        <result property="ecoNo" column="ECO_NO"/>
        <result property="project" column="PROJECT"/>
        <result property="parentNo" column="PARENT_NO"/>
        <result property="parentRev" column="PARENT_REV"/>
        <result property="changeType" column="CT"/>
        <result property="partOrigin" column="PART_ORIGIN"/>
        <result property="partNo" column="PART_NO"/>
        <result property="partRev" column="PART_REV"/>
        <result property="partName" column="PART_NAME"/>        
        <result property="seq" column="SEQ"/>
        <result property="qty" column="QTY"/>
        <result property="supplyMode" column="SMODE"/>
        <result property="alt" column="APART"/>
        <result property="moduleCode" column="MCODE"/>                
        <result property="sel" column="SEL"/>
        <result property="cat" column="CAT"/>
        <result property="colorId" column="COLOR_I"/>
        <result property="colorSection" column="COLOR_S"/>
        <result property="shownOn" column="SON"/>
        <result property="pltStk" column="PLT_STK"/>
        <result property="asStk" column="AS_STK"/>       
        <result property="cost" column="COST"/>
        <result property="tool" column="TOOL"/>
        <result property="desc" column="CHG_DESC"/>
    </resultMap>
    
    <select id="selectECOPartList" parameterType="java.lang.String" resultMap="BIND_SYMCPartListData">    
        SELECT E_PART_LIST.*
             , IR.PS7_PART_TYPE PART_ORIGIN
             , DECODE(IRW.POBJECT_TYPE, 'S7_StdpartRevision', IRW.POBJECT_NAME || ' ' || IRW.POBJECT_DESC, IRW.POBJECT_NAME) PART_NAME
             , IRV.PS7_SELECTIVE_PART SEL
             , IRV.PS7_REGULATION CAT
             , IRV.PS7_COLOR COLOR_I
             , IRV.PS7_COLOR_ID COLOR_S
             , CASE WHEN IRV.RS7_SHOWN_PART_NOU = 'AAAAAAAAAAAAAA' THEN ''
                    ELSE (SELECT PITEM_ID
                            FROM INFODBA.PITEM I
                           WHERE IRV.RS7_SHOWN_PART_NOU = I.PUID)
               END SON
          FROM ECO_PART_LIST E_PART_LIST
             , INFODBA.PITEM I
             , INFODBA.PITEMREVISION IR
             , INFODBA.PWORKSPACEOBJECT IRW
             , INFODBA.PS7_VEHPARTREVISION IRV
         WHERE E_PART_LIST.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
           AND E_PART_LIST.PART_NO = I.PITEM_ID
           AND I.PUID = IR.RITEMS_TAGU
           AND IR.PITEM_REVISION_ID = E_PART_LIST.PART_REV
           AND IR.PUID = IRW.PUID
           AND IRW.PACTIVE_SEQ = 1
           AND IRW.PUID = IRV.PUID(+)
         ORDER BY E_PART_LIST.PARENT_NO, E_PART_LIST.PARENT_REV
    </select> 
    
    <!-- ECO-D : ECO PartList Properties Update  -->
    <update id="updateECOPartListProperties" parameterType="com.kgm.rac.kernel.SYMCPartListData">      
        UPDATE ECO_PART_LIST SET            
            PLT_STK = #{pltStk, jdbcType=VARCHAR}
            ,AS_STK = #{asStk, jdbcType=VARCHAR}
            ,COST = #{cost, jdbcType=VARCHAR}
            ,TOOL = #{tool, jdbcType=VARCHAR}
            ,CHG_DESC = #{desc, jdbcType=VARCHAR}
        WHERE
            PART_ID = #{partId, jdbcType=VARCHAR}
    </update>
    
    <select id="selectECOBOMList" parameterType="java.util.HashMap" resultMap="BIND_SYMCBOMEditData">
        SELECT BL.OCC_THREADS, DECODE(BL.CT, 'XX', '', BL.CT) CT
             , BL.NEW_PART_NO, BL.NEW_PART_REV, BL.NEW_PART_TYPE
             , BL.OLD_PART_NO, BL.OLD_PART_REV, BL.OLD_PART_TYPE
             , BL.NEW_SEQ, BL.NEW_QTY, BL.NEW_SMODE, BL.NEW_APART, BL.NEW_MCODE
             , BL.OLD_SEQ, BL.OLD_QTY, BL.OLD_SMODE, BL.OLD_APART, BL.OLD_MCODE
             , NP.PART_ORIGIN NEW_PART_ORIGIN, NP.PART_NAME NEW_PART_NAME
             , OP.PART_ORIGIN OLD_PART_ORIGIN, OP.PART_NAME OLD_PART_NAME
             , NP.SEL NEW_SEL, NP.CAT NEW_CAT, NP.COLOR_I NEW_COLOR_I, NP.COLOR_S NEW_COLOR_S
             , OP.SEL OLD_SEL, OP.CAT OLD_CAT, OP.COLOR_I OLD_COLOR_I, OP.COLOR_S OLD_COLOR_S
             , NP.SON NEW_SHOWN_ON, OP.SON OLD_SHOWN_ON
             , GET_EPL_ECO_NO(BL.ECO_NO, BL.CT, BL.NEW_PART_NO, BL.NEW_PART_REV, BL.PARENT_NO, BL.PARENT_REV, BL.NEW_SEQ, BL.NEW_SMODE, BL.NEW_APART, BL.NEW_MCODE, BL.NEW_VC) ECO_NO
             , GET_EPL_ECO_NO(BL.ECO_NO, DECODE(BL.CT, 'D', 'D', 'XX'), BL.OLD_PART_NO, BL.OLD_PART_REV, BL.PARENT_NO, BL.PARENT_REV, BL.OLD_SEQ, BL.OLD_SMODE, BL.OLD_APART, BL.OLD_MCODE, BL.OLD_VC) ECO_NO_OLD
             , DECODE_OPTION_CONDITION(BL.OLD_VC) DECODE_OLD_VC, DECODE_OPTION_CONDITION(BL.NEW_VC) DECODE_NEW_VC
          FROM ECO_BOM_LIST BL
            , (SELECT I.PITEM_ID ITEM_ID
                    , IR.PITEM_REVISION_ID ITEM_REV
                    , IR.PS7_PART_TYPE PART_ORIGIN
                    , IRW.POBJECT_NAME PART_NAME
                    , IRV.PS7_SELECTIVE_PART SEL
                    , IRV.PS7_REGULATION CAT
                    , IRV.PS7_COLOR COLOR_I
                    , IRV.PS7_COLOR_ID COLOR_S
                    , CASE WHEN IRV.RS7_SHOWN_PART_NOU = 'AAAAAAAAAAAAAA' THEN ''
                           ELSE (SELECT PITEM_ID
                                   FROM INFODBA.PITEM I
                                  WHERE IRV.RS7_SHOWN_PART_NOU = I.PUID)
                      END SON
                 FROM INFODBA.PITEM I
                    , INFODBA.PITEMREVISION IR
                    , INFODBA.PS7_VEHPARTREVISION IRV
                    , INFODBA.PWORKSPACEOBJECT IRW
                WHERE IRW.POBJECT_TYPE IN ('S7_FunctionMastRevision', 'S7_VehpartRevision', 'S7_StdpartRevision')
                  AND IRW.PUID = IRV.PUID(+)
                  AND IRW.PUID = IR.PUID
                  AND IR.RITEMS_TAGU = I.PUID
                  AND IRW.PUID = IR.PUID
                  AND IRW.PACTIVE_SEQ = 1) NP
            , (SELECT I.PITEM_ID ITEM_ID
                    , IR.PITEM_REVISION_ID ITEM_REV
                    , IR.PS7_PART_TYPE PART_ORIGIN
                    , DECODE(IRW.POBJECT_TYPE, 'S7_StdpartRevision', IRW.POBJECT_NAME || ' ' || IRW.POBJECT_DESC, IRW.POBJECT_NAME) PART_NAME
                    , IRV.PS7_SELECTIVE_PART SEL
                    , IRV.PS7_REGULATION CAT
                    , IRV.PS7_COLOR COLOR_I
                    , IRV.PS7_COLOR_ID COLOR_S
                    , CASE WHEN IRV.RS7_SHOWN_PART_NOU = 'AAAAAAAAAAAAAA' THEN ''
                           ELSE (SELECT PITEM_ID
                                   FROM INFODBA.PITEM I
                                  WHERE IRV.RS7_SHOWN_PART_NOU = I.PUID)
                      END SON
                 FROM INFODBA.PITEM I
                    , INFODBA.PITEMREVISION IR
                    , INFODBA.PS7_VEHPARTREVISION IRV
                    , INFODBA.PWORKSPACEOBJECT IRW
                WHERE IRW.POBJECT_TYPE IN ('S7_FunctionMastRevision', 'S7_VehpartRevision', 'S7_StdpartRevision')
                  AND IRW.PUID = IRV.PUID(+)
                  AND IRW.PUID = IR.PUID
                  AND IR.RITEMS_TAGU = I.PUID
                  AND IRW.PUID = IR.PUID
                  AND IRW.PACTIVE_SEQ = 1) OP
         WHERE ECO_NO = #{ecoNo, jdbcType=VARCHAR}
           AND PARENT_NO = #{parentNo, jdbcType=VARCHAR}
           AND PARENT_REV = #{parentRev, jdbcType=VARCHAR}
           AND NEW_PART_NO = NP.ITEM_ID(+)
           AND NEW_PART_REV = NP.ITEM_REV(+)
           AND OLD_PART_NO = OP.ITEM_ID(+)
           AND OLD_PART_REV = OP.ITEM_REV(+)
         ORDER BY DECODE(NEW_SEQ, NULL, OLD_SEQ, NEW_SEQ)
    </select>
    
    <!-- ECO Demon process -->
    <select id="selectECODemonTarget" resultType="java.util.HashMap">
        WITH ECO_PART AS (
            SELECT ECOI.PITEM_ID ECO_NO
                 , ECOIRW.PDATE_RELEASED ECO_DATE
                 , PPART.PART_NO
                 , PPART.PART_REV
                 , PIR.PUID REV_PUID
                 , PSR.PVALU_0 PART_BVR
              FROM INFODBA.PITEMREVISION ECOIR
                 , INFODBA.PWORKSPACEOBJECT ECOIRW
                 , INFODBA.PITEM ECOI
                 , ECO_EPL_PART_DATE PPART
                 , INFODBA.PITEM PI
                 , INFODBA.PITEMREVISION PIR
                 , INFODBA.PWORKSPACEOBJECT PIRW
                 , INFODBA.PSTRUCTURE_REVISIONS PSR
             WHERE ECOIR.PUID = ECOIRW.PUID
               AND ECOIRW.POBJECT_TYPE = 'S7_ECORevision'
               AND ECOIRW.PDATE_RELEASED &gt; SYSDATE - 5
               AND ECOIR.RITEMS_TAGU = ECOI.PUID
               AND ECOI.PITEM_ID = PPART.ECO_NO
               AND PPART.BI_YN = 'N'
               AND PPART.PART_NO = PI.PITEM_ID
               AND PI.PUID = PIR.RITEMS_TAGU
               AND PIR.PITEM_REVISION_ID = PPART.PART_REV
               AND PIR.PUID = PIRW.PUID
               AND PIRW.PACTIVE_SEQ = 1
               AND PIR.PUID = PSR.PUID
         )
         SELECT E.ECO_NO
              , E.PART_NO
              , E.PART_REV
              , E.PART_BVR
              , B.BASE_NO
              , B.BASE_REV
           FROM ECO_PART E
              , (SELECT E.REV_PUID
                      , BI.PITEM_ID BASE_NO
                      , BIR.PITEM_REVISION_ID BASE_REV
                   FROM ECO_PART E
                      , INFODBA.PIMANRELATION REL
                      , INFODBA.PIMANTYPE RT
                      , INFODBA.PITEMREVISION BIR
                      , INFODBA.PITEM BI
                      , INFODBA.PWORKSPACEOBJECT BIW
                  WHERE E.REV_PUID = REL.RPRIMARY_OBJECTU
                    AND REL.RRELATION_TYPEU = RT.PUID
                    AND RT.PTYPE_NAME = 'IMAN_based_on'
                    AND REL.RSECONDARY_OBJECTU = BIR.PUID
                    AND BIR.RITEMS_TAGU = BI.PUID
                    AND BI.PUID = BIW.PUID
                    AND BIW.PACTIVE_SEQ = 1) B
         WHERE E.REV_PUID = B.REV_PUID(+)
         ORDER BY ECO_DATE
    </select>
	<select id="selectOccurrenceECO" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT OCC.ROCC_THREADU
		     , NBL.CT
		     , CASE WHEN SUBSTR(NBL.CT, 1, 1) = 'N' OR SUBSTR(NBL.CT, 1, 1) = 'F' THEN NBL.ECO_NO
		            ELSE (SELECT MIN(ECO_NO)
        		            FROM ECO_BOM_LIST OBL
                		   WHERE OBL.PARENT_NO = #{baseNo, jdbcType=VARCHAR}
		                     AND OBL.PARENT_REV = #{baseRev, jdbcType=VARCHAR}
        		             AND OBL.NEW_PART_NO = DECODE(NBL.OLD_PART_NO, NULL, NBL.NEW_PART_NO, NBL.OLD_PART_NO)
		                     AND OBL.NEW_PART_REV = DECODE(NBL.OLD_PART_NO, NULL, NBL.NEW_PART_REV, NBL.OLD_PART_REV)
        		             AND DBMS_LOB.COMPARE (NVL(OBL.NEW_VC, '@'), NVL(DECODE(NBL.OLD_PART_NO, NULL, NBL.NEW_VC, NBL.OLD_VC), '@')) = 0
                		     AND NVL(OBL.NEW_SEQ, '@') = NVL(DECODE(NBL.OLD_PART_NO, NULL, NBL.NEW_SEQ, NBL.OLD_SEQ), '@')
		                     AND NVL(OBL.NEW_SMODE, '@') = NVL(DECODE(NBL.OLD_PART_NO, NULL, NBL.NEW_SMODE, NBL.OLD_SMODE), '@')
		                     AND NVL(OBL.NEW_APART, '@') = NVL(DECODE(NBL.OLD_PART_NO, NULL, NBL.NEW_APART, NBL.OLD_APART), '@')
        		         )
       		END ECO_NO
		  FROM INFODBA.PPSOCCURRENCE OCC
		     , ECO_BOM_LIST NBL
		 WHERE OCC.RPARENT_BVRU = #{parentBVR, jdbcType=VARCHAR}
		   AND NBL.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
		   AND NBL.PARENT_NO = #{parentNo, jdbcType=VARCHAR}
		   AND NBL.PARENT_REV = #{parentRev, jdbcType=VARCHAR}
		   AND INSTR(NBL.OCC_THREADS, OCC.ROCC_THREADU, 1) > 0
	</select>
	
	<update id="updateOccurrenceECOApplied" parameterType="java.util.HashMap">      
        UPDATE ECO_EPL_PART_DATE
           SET BI_YN = 'Y'
         WHERE ECO_NO = #{ecoNo, jdbcType=VARCHAR}
           AND BI_YN = 'N'
           AND PART_NO = #{parentNo, jdbcType=VARCHAR}
           AND PART_REV = #{parentRev, jdbcType=VARCHAR}
    </update> 
	
	<select id="selectReleasedECO" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT I.PITEM_ID ECO_ID
             , ECOIR.PUID ECO_UID
          FROM INFODBA.PS7_ECOREVISION ECOIR
             , INFODBA.PITEMREVISION IR
             , INFODBA.PWORKSPACEOBJECT IRW
             , INFODBA.PITEM I
         WHERE ECOIR.PUID = IR.PUID
           AND IR.PUID = IRW.PUID
           AND IRW.PDATE_RELEASED IS NOT NULL
           AND IR.RITEMS_TAGU = I.PUID
		<if test="interface != null">
    	   AND IRW.PDATE_RELEASED &gt; SYSDATE - 5
    	   AND ECOIR.PS7_IF_STAT = 'N'
  		</if>
         ORDER BY IRW.PDATE_RELEASED
	</select>
	
	<insert id="insertECOInfoToVPM" parameterType="java.util.HashMap">
		INSERT INTO IF_ECO_INFO_FROM_TC
		      (ECO_NO, ECO_USER, ECO_DEPT
		     , MPNO, MPNO_VER
		     , MPNM
		     , NUM, CHANGE_DIV, PROJECT_NO
		     , CPNO, CPNO_VER, CPNM
		     , FUNCTION_NO
		     , PART_TYPE, SEL, CAT, COLOR, COLOR_SECTION
		     , SHOWN_NO
		     , CHANGE_TYPE, IC
		     , SEQ, QTY
		     , OPTION_CONDITION
		     , SUPPLY_MODE, ALT, MODULE_CODE
		     , PLT_STK, AS_STK
		     , COST, TOOL
		     , CHG_DESC
		     , IF_DATE, MOD_DATE)
		SELECT BL.ECO_NO, #{ecoUser, jdbcType=VARCHAR}, #{ecoGroup, jdbcType=VARCHAR}
		     , BL.PARENT_NO MPNO, BL.PARENT_REV MPNO_VER
		     , (SELECT POBJECT_NAME
		          FROM INFODBA.PITEM I
		             , INFODBA.PITEMREVISION IR
		             , INFODBA.PWORKSPACEOBJECT IRW
		         WHERE I.PITEM_ID = BL.PARENT_NO
		           AND I.PUID = IR.RITEMS_TAGU
		           AND IR.PITEM_REVISION_ID = BL.PARENT_REV
		           AND IR.PUID = IRW.PUID
		           AND IRW.PACTIVE_SEQ = 1) MPNM
		     , BL.NUM, 'NEW' CHANGE_DIV, BL.PARENT_PROJECT PROJECT_NO
		     , BL.NEW_PART_NO CPNO, BL.NEW_PART_REV CPNO_VER, PP.PART_NAME CPNM
		     , GET_RELATED_FUNCTION(BL.NEW_PART_NO) FUNCTION_NO
		     , PP.PART_TYPE, PP.SEL, PP.CAT, PP.COLOR, PP.COLOR_SECTION
		     , PP.SHOWN_NO
		     , BL.CT CHANGE_TYPE, BL.NEW_IC IC
		     , BL.NEW_SEQ SEQ, BL.NEW_QTY QTY
		     , TO_CHAR(DECODE_OPTION_CONDITION(BL.NEW_VC)) OPTION_CONDITION
		     , BL.NEW_SMODE SUPPLY_MODE, BL.NEW_APART ALT, BL.NEW_MCODE MODULE_CODE
		     , NULL PLT_STK, NULL AS_STK
		     , BL.NEW_COST COST, BL.NEW_TOOL TOOL
		     , DECODE(BL.NEW_PART_NO, NULL, NULL, CHG_DESC) CHG_DESC
		     , SYSDATE IF_DATE, SYSDATE MOD_DATE
		  FROM (SELECT BL.*
		             , ROWNUM NUM
		          FROM ECO_BOM_LIST BL
		         WHERE ECO_NO = #{ecoNo, jdbcType=VARCHAR}
		           AND EPL_YN = 'Y'
		         ORDER BY PARENT_NO, TO_NUMBER(DECODE(NEW_SEQ, NULL, OLD_SEQ, NEW_SEQ))) BL
		     , (SELECT I.PITEM_ID PART_NO
		             , IR.PITEM_REVISION_ID PART_REV
		             , IR.PS7_PART_TYPE PART_TYPE
		             , IRW.POBJECT_NAME PART_NAME
		             , IRV.PS7_SELECTIVE_PART SEL
		             , IRV.PS7_REGULATION CAT
		             , IRV.PS7_COLOR COLOR
		             , IRV.PS7_COLOR_ID COLOR_SECTION
		             , (SELECT PITEM_ID
		                  FROM INFODBA.PITEM
		                 WHERE PUID = IRV.RS7_SHOWN_PART_NOU) SHOWN_NO
		          FROM INFODBA.PWORKSPACEOBJECT IRW
		             , INFODBA.PS7_VEHPARTREVISION IRV
		             , INFODBA.PITEMREVISION IR
		             , INFODBA.PITEM I
		         WHERE I.PUID = IR.RITEMS_TAGU
		           AND IR.PUID = IRV.PUID(+)
		           AND IR.PUID = IRW.PUID
		           AND IRW.PACTIVE_SEQ = 1) PP
		 WHERE BL.NEW_PART_NO IS NOT NULL
		   AND BL.NEW_PART_NO = PP.PART_NO
		   AND BL.NEW_PART_REV = PP.PART_REV
		UNION
		SELECT BL.ECO_NO, #{ecoUser, jdbcType=VARCHAR}, #{ecoGroup, jdbcType=VARCHAR}
		     , BL.PARENT_NO MPNO, BL.PARENT_REV MPNO_VER
		     , (SELECT POBJECT_NAME
		          FROM INFODBA.PITEM I
		             , INFODBA.PITEMREVISION IR
		             , INFODBA.PWORKSPACEOBJECT IRW
		         WHERE I.PITEM_ID = BL.PARENT_NO
		           AND I.PUID = IR.RITEMS_TAGU
		           AND IR.PITEM_REVISION_ID = BL.PARENT_REV
		           AND IR.PUID = IRW.PUID
		           AND IRW.PACTIVE_SEQ = 1) MPNM
		     , BL.NUM, 'OLD' CHANGE_DIV, BL.PARENT_PROJECT PROJECT_NO
		     , BL.OLD_PART_NO CPNO, BL.OLD_PART_REV CPNO_VER, PP.PART_NAME CPNM
		     , GET_RELATED_FUNCTION(BL.OLD_PART_NO) FUNCTION_NO
		     , PP.PART_TYPE, PP.SEL, PP.CAT, PP.COLOR, PP.COLOR_SECTION
		     , PP.SHOWN_NO
		     , BL.CT CHANGE_TYPE, BL.OLD_IC IC
		     , BL.OLD_SEQ SEQ, BL.OLD_QTY QTY
		     , TO_CHAR(DECODE_OPTION_CONDITION(BL.OLD_VC)) OPTION_CONDITION
		     , BL.OLD_SMODE SUPPLY_MODE, BL.OLD_APART ALT, BL.OLD_MCODE MODULE_CODE
		     , BL.OLD_PLT_STK PLT_STK, BL.OLD_AS_STK AS_STK
		     , NULL COST, NULL TOOL
		     , DECODE(BL.NEW_PART_NO, NULL, CHG_DESC, NULL) CHG_DESC
		     , SYSDATE IF_DATE, SYSDATE MOD_DATE
		  FROM (SELECT BL.*
		             , ROWNUM NUM
		          FROM ECO_BOM_LIST BL
		         WHERE ECO_NO = #{ecoNo, jdbcType=VARCHAR}
		           AND EPL_YN = 'Y'
		         ORDER BY PARENT_NO, TO_NUMBER(DECODE(NEW_SEQ, NULL, OLD_SEQ, NEW_SEQ))) BL
		     , (SELECT I.PITEM_ID PART_NO
		             , IR.PITEM_REVISION_ID PART_REV
		             , IR.PS7_PART_TYPE PART_TYPE
		             , IRW.POBJECT_NAME PART_NAME
		             , IRV.PS7_SELECTIVE_PART SEL
		             , IRV.PS7_REGULATION CAT
		             , IRV.PS7_COLOR COLOR
		             , IRV.PS7_COLOR_ID COLOR_SECTION
		             , (SELECT PITEM_ID
		                  FROM INFODBA.PITEM
		                 WHERE PUID = IRV.RS7_SHOWN_PART_NOU) SHOWN_NO
		          FROM INFODBA.PWORKSPACEOBJECT IRW
		             , INFODBA.PS7_VEHPARTREVISION IRV
		             , INFODBA.PITEMREVISION IR
		             , INFODBA.PITEM I
		         WHERE I.PUID = IR.RITEMS_TAGU
		           AND IR.PUID = IRV.PUID(+)
		           AND IR.PUID = IRW.PUID
		           AND IRW.PACTIVE_SEQ = 1) PP
		 WHERE BL.OLD_PART_NO IS NOT NULL
		   AND BL.OLD_PART_NO = PP.PART_NO
		   AND BL.OLD_PART_REV = PP.PART_REV
	</insert>
	
	<update id="updateECOInfoInterfacedToVPM" parameterType="java.util.HashMap">      
        UPDATE INFODBA.PS7_ECOREVISION
           SET PS7_IF_STAT = 'Y'
         WHERE PUID = #{ecoUid, jdbcType=VARCHAR}
    </update> 
	
	
</mapper>

    