<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">  
  
<!--  [20140417] Project code Old/New 분리 대응 -->
<mapper namespace="com.kgm.mapper.SYMCECOMapper">
    <!-- ECO NO를 생성 -->
	<select id="getNextECOSerial" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT #{prefix}||LTRIM(NVL(TO_CHAR(TO_NUMBER(MAX(SUBSTR(I.PITEM_ID,LENGTH(I.PITEM_ID)-2)))+1,'009'),'001')) nextID
		FROM INFODBA.PITEM I
		    ,INFODBA.PWORKSPACEOBJECT WO
		WHERE I.PUID = WO.PUID
		   AND WO.POBJECT_TYPE = 'S7_ECO'
		   AND I.PITEM_ID LIKE #{prefix}||'%'
	</select>
	<!-- ECO 결재선 저장 -->
	<insert id="saveApprovalLine" parameterType="ApprovalLineData">
		insert into eco_approval_line 
		     ( 
		       eco_no 
		      ,sort 
		      ,task 
		      ,team_name 
		      ,user_name 
		      ,tc_member_puid 
		       ) 
		values 
		     ( 
		       #{eco_no, jdbcType=VARCHAR} 
		      ,#{sort, jdbcType=VARCHAR} 
		      ,#{task, jdbcType=VARCHAR} 
		      ,#{team_name, jdbcType=VARCHAR} 
		      ,#{user_name, jdbcType=VARCHAR} 
		      ,#{tc_member_puid, jdbcType=VARCHAR} 
		       )
	</insert>
	<!-- ECO 결재선 불러오기 -->
	<select id="getApprovalLine" parameterType="ApprovalLineData" resultType="ApprovalLineData">
		select eco_no 
		      ,sort 
		      ,task 
		      ,team_name 
		      ,user_name 
		      ,tc_member_puid
		      ,saved_name
		from eco_approval_line
		where eco_no = #{eco_no, jdbcType=VARCHAR}
		ORDER BY sort
	</select>
	<!-- ECO 결재선 삭제 -->
	<delete id="removeApprovalLine" parameterType="ApprovalLineData">
		delete from eco_approval_line
		where eco_no = #{eco_no, jdbcType=VARCHAR}
	</delete>
	<!-- 사용자 결재선[ECO/ECI] 저장하기 -->
	<insert id="saveUserApprovalLine" parameterType="ApprovalLineData">
		insert into eco_approval_line 
		     ( 
    		   eco_no
		      ,saved_name 
		      ,saved_user
		      ,sort 
		      ,task 
		      ,team_name 
		      ,user_name 
		      ,tc_member_puid 
		       ) 
		values 
		     (
    		   #{eco_no}
		      ,#{saved_name}
		      ,#{saved_user}
		      ,#{sort} 
		      ,#{task} 
		      ,#{team_name} 
		      ,#{user_name} 
		      ,#{tc_member_puid} 
		       )
	</insert>
	<!-- 저장된 사용자 결재선 이름 모두 가져오기 -->
	<select id="loadSavedUserApprovalLine" parameterType="ApprovalLineData" resultType="ApprovalLineData">
		select distinct saved_name
		from eco_approval_line
		where saved_user = #{saved_user, jdbcType=VARCHAR}
		AND eco_no = #{eco_no, jdbcType=VARCHAR}
	</select>
	
	<delete id="deleteApprovalLine" parameterType="ApprovalLineData">
		DELETE FROM ECO_APPROVAL_LINE
		WHERE SAVED_NAME = #{saved_name, jdbcType=VARCHAR} 
		   AND SAVED_USER = #{saved_user, jdbcType=VARCHAR} 
		   AND ECO_NO = #{eco_no, jdbcType=VARCHAR}
	</delete>
	<!-- 저장된 사용자 결재선 가져오기 -->
	<select id="loadApprovalLine" parameterType="ApprovalLineData" resultType="ApprovalLineData">
		SELECT TASK 
		     ,NVL(G.PNAME,AL.TEAM_NAME) TEAM_NAME 
		     ,NVL(U.PUSER_NAME, AL.USER_NAME) USER_NAME 
		     ,NVL(TC_MEMBER_PUID, AL.TC_MEMBER_PUID) TC_MEMBER_PUID
		     ,saved_name 
		FROM ECO_APPROVAL_LINE AL 
		     ,INFODBA.PPOM_MEMBER M 
		     ,INFODBA.PPOM_USER U 
		     ,INFODBA.PPOM_GROUP G 
		WHERE AL.TC_MEMBER_PUID = M.PUID (+) 
		   AND M.RUSERU = U.PUID (+)
		   AND M.RGROUPU = G.PUID (+)
		   AND SAVED_NAME = #{saved_name} 
		   AND SAVED_USER = #{saved_user} 
		   AND ECO_NO = #{eco_no, jdbcType=VARCHAR}
	    ORDER BY AL.SORT
	</select>
	<!-- ECI 테이블 미생성으로 인한 쿼리 미완성 임. -->
	<!-- [SR140923-023][20140923][jclee] 쿼리 전반적 변경 -->
	<!-- <select id="searchEOStatus" parameterType="SYMCECOStatusData" resultType="SYMCECOStatusData">
		WITH ECI AS (
		    SELECT IR.RPRIMARY_OBJECTU PUID, AI.PITEM_ID, AV.PS7_ECI_MATURITY
		    FROM INFODBA.PITEM AI
			    ,INFODBA.PITEMREVISION AR
			    ,INFODBA.PS7_ECIREVISION AV
			    ,INFODBA.PWORKSPACEOBJECT AW
			    ,INFODBA.PIMANRELATION IR
		    WHERE AI.PUID = AR.RITEMS_TAGU
		    AND AR.PUID = AV.PUID
		    AND AR.PUID = AW.PUID
		    AND AR.PUID = IR.RSECONDARY_OBJECTU
		    AND IR.RPRIMARY_OBJECTU IS NOT NULL
		    AND AW.PACTIVE_SEQ = '1'  ) 
		SELECT  E.PS7_ECR_NO ecrNo
			   ,ECI.PITEM_ID eciNo
		       ,ECI.PS7_ECI_MATURITY eciStatus
			   ,I.PITEM_ID ecoNo
		       ,W.POBJECT_DESC ecoTitle
		       ,DECODE(E.PS7_ECO_MATURITY, NULL, 'In Work', E.PS7_ECO_MATURITY) ecoStatus
		       ,G.PNAME owningTeam
		       ,P.PUSER_NAME owningUser
		       ,TO_CHAR(A.PCREATION_DATE + 9 / 24 ,'YYYY-MM-DD') createDate
		       ,TO_CHAR(TA.PCREATION_DATE + 9 / 24 ,'YYYY-MM-DD') requestDate
		       ,TO_CHAR(W.PDATE_RELEASED + 9 / 24 ,'YYYY-MM-DD') realseDate
		FROM INFODBA.PS7_ECOREVISION E
			,INFODBA.PWORKSPACEOBJECT W
		    ,INFODBA.PPOM_APPLICATION_OBJECT A
		    ,INFODBA.PITEM I
		    ,INFODBA.PITEMREVISION R
		    ,INFODBA.PRELEASE_STATUS_LIST RL
		    ,INFODBA.PRELEASESTATUS RS
		    ,INFODBA.PPOM_GROUP G
		    ,INFODBA.PPOM_USER O
		    ,INFODBA.PUSER U
		    ,INFODBA.PPERSON P
		    ,INFODBA.PATTACHMENTS T
		    ,INFODBA.PPOM_APPLICATION_OBJECT TA
		    ,ECI
		WHERE E.PUID = W.PUID
		AND W.PUID = A.PUID
		AND E.PUID = R.PUID
		AND R.RITEMS_TAGU = I.PUID
		AND W.PACTIVE_SEQ = 1
		AND R.PUID = RL.PUID(+)
		AND RL.PVALU_0 = RS.PUID(+)
		AND A.ROWNING_GROUPU = G.PUID
		AND A.ROWNING_USERU = O.PUID
		AND O.PUID = U.PUID
		AND U.RPERSONU = P.PUID
		AND W.PUID = T.PVALU_0(+)
		AND T.PUID = TA.PUID(+)
		AND R.PUID = ECI.PUID(+)
		<if test="ecrNo != null">
    		AND UPPER(E.PS7_ECR_NO) LIKE #{ecrNo}
  		</if>
  		<if test="eciNo != null">
    		AND UPPER(ECI.PITEM_ID) LIKE #{eciNo}
  		</if>
  		<if test="eciStatus != null">
    		AND ECI.PS7_ECI_MATURITY = #{eciStatus}
  		</if>
  		<if test="ecoNo != null">
    		AND UPPER(I.PITEM_ID) LIKE #{ecoNo}
  		</if>
  		<if test="ecoStatus != null">
    		AND DECODE(E.PS7_ECO_MATURITY, NULL, 'In Work', E.PS7_ECO_MATURITY) = #{ecoStatus}
  		</if>
  		<if test="ecoStatus == null or ecoStatus == 'Completed'">
			AND DECODE(W.PDATE_RELEASED, NULL, '2013-05-04', TO_CHAR(W.PDATE_RELEASED + 9 / 24 ,'YYYY-MM-DD')) <![CDATA[>=]]> #{releaseDateFrom}
			AND DECODE(W.PDATE_RELEASED, NULL, '2013-05-04', TO_CHAR(W.PDATE_RELEASED + 9 / 24 ,'YYYY-MM-DD')) <![CDATA[<=]]> #{releaseDateTo}
		</if>
  		<if test="owningTeam != null">
    		AND UPPER(G.PNAME) LIKE #{owningTeam}
  		</if>
  		<if test="owningUser != null">
    		AND UPPER(P.PUSER_NAME) LIKE #{owningUser}
  		</if>
  		ORDER BY I.PITEM_ID
	</select> -->
	<!-- [20240228] Oracle Version upgrade 로 인한 WM_CONCAT 을 LISTAGG 로 변경 -->
	<select id="searchEOStatus" parameterType="SYMCECOStatusData" resultType="SYMCECOStatusData">
		SELECT E.PS7_ECR_NO ECRNO,
		       (SELECT TO_CHAR(LISTAGG(TE.PVAL_0, ','))
		          FROM INFODBA.PS7_ECI_NO TE
		         WHERE TE.PUID = ECI.PUID) ECINO,
		       I.PITEM_ID ECONO,
		       W.POBJECT_DESC ECOTITLE,
		       DECODE(E.PS7_ECO_MATURITY, NULL, 'In Work', E.PS7_ECO_MATURITY) ECOSTATUS,
		       G.PNAME OWNINGTEAM,
		       P.PUSER_NAME OWNINGUSER,
		       TO_CHAR(A.PCREATION_DATE + 9 / 24, 'YYYY-MM-DD') CREATEDATE,
		       TO_CHAR(TA.PCREATION_DATE + 9 / 24, 'YYYY-MM-DD') REQUESTDATE,
		       TO_CHAR(W.PDATE_RELEASED + 9 / 24, 'YYYY-MM-DD') REALSEDATE
		  FROM INFODBA.PS7_ECOREVISION         E,
		       INFODBA.PWORKSPACEOBJECT        W,
		       INFODBA.PPOM_APPLICATION_OBJECT A,
		       INFODBA.PITEM                   I,
		       INFODBA.PITEMREVISION           R,
		       INFODBA.PRELEASE_STATUS_LIST    RL,
		       INFODBA.PRELEASESTATUS          RS,
		       INFODBA.PPOM_GROUP              G,
		       INFODBA.PPOM_USER               O,
		       INFODBA.PUSER                   U,
		       INFODBA.PPERSON                 P,
		       INFODBA.PATTACHMENTS            T,
		       INFODBA.PPOM_APPLICATION_OBJECT TA,
		       INFODBA.PS7_ECI_NO              ECI
		 WHERE E.PUID = W.PUID
		   AND W.PUID = A.PUID
		   AND E.PUID = R.PUID
		   AND R.RITEMS_TAGU = I.PUID
		   AND W.PACTIVE_SEQ = 1
		   AND R.PUID = RL.PUID(+)
		   AND RL.PVALU_0 = RS.PUID(+)
		   AND A.ROWNING_GROUPU = G.PUID
		   AND A.ROWNING_USERU = O.PUID
		   AND O.PUID = U.PUID
		   AND U.RPERSONU = P.PUID
		   AND W.PUID = T.PVALU_0(+)
		   AND T.PUID = TA.PUID(+)
		   AND R.PUID = ECI.PUID(+)
		<if test="ecrNo != null">
    	   AND UPPER(E.PS7_ECR_NO) LIKE #{ecrNo}
  		</if>
		<if test="eciNo != null">
    	   AND UPPER(ECI.PVAL_0) LIKE #{eciNo}
  		</if>
  		<!--<if test="eciStatus != null">
    	   AND ECI.PS7_ECI_MATURITY = #{eciStatus}
  		</if>-->
  		<if test="ecoNo != null">
    	   AND UPPER(I.PITEM_ID) LIKE #{ecoNo}
  		</if>
  		<if test="ecoStatus != null">
    	   AND DECODE(E.PS7_ECO_MATURITY, NULL, 'In Work', E.PS7_ECO_MATURITY) = #{ecoStatus}
  		</if>
  		<if test="ecoStatus == null or ecoStatus == 'Completed'">
    	   AND DECODE(W.PDATE_RELEASED, NULL, '2013-05-04', TO_CHAR(W.PDATE_RELEASED + 9 / 24 ,'YYYY-MM-DD')) <![CDATA[>=]]> #{releaseDateFrom}
    	   AND DECODE(W.PDATE_RELEASED, NULL, '2013-05-04', TO_CHAR(W.PDATE_RELEASED + 9 / 24 ,'YYYY-MM-DD')) <![CDATA[<=]]> #{releaseDateTo}
		</if>
  		<if test="owningTeam != null">
    	   AND UPPER(G.PNAME) LIKE #{owningTeam}
  		</if>
  		<if test="owningUser != null">
    	   AND UPPER(P.PUSER_NAME) LIKE #{owningUser}
  		</if>
		 GROUP BY ECI.PUID,
		          E.PS7_ECR_NO,
		          I.PITEM_ID,
		          W.POBJECT_DESC,
		          DECODE(E.PS7_ECO_MATURITY, NULL, 'In Work', E.PS7_ECO_MATURITY),
		          G.PNAME,
		          P.PUSER_NAME,
		          TO_CHAR(A.PCREATION_DATE + 9 / 24, 'YYYY-MM-DD'),
		          TO_CHAR(TA.PCREATION_DATE + 9 / 24, 'YYYY-MM-DD'),
		          TO_CHAR(W.PDATE_RELEASED + 9 / 24, 'YYYY-MM-DD')
  		 ORDER BY I.PITEM_ID
	</select>
    <!-- [20171121] DBLINK 제거
	<select id="getVnetTeamInfo" parameterType="com.kgm.dto.VnetTeamInfoData" resultType="com.kgm.dto.VnetTeamInfoData">
		SELECT DISTINCT a.team team_name
		     ,a.tmcod team_code
		     ,a.ord1
		     ,a.ord2
		     ,a.cls ord3
		FROM cals.sysa01tb@LINK_001_VNET a
		     , cals.sysa02tb@LINK_001_VNET b
		WHERE a.app IN ('0','2')
		   AND length(a.tmcod) >= 8
		   AND b.team = a.team
		   <if test="team_name != null">
	    		AND a.team like '%'||#{team_name}||'%'
	  	   </if>
	  	   <if test="team_code != null">
	    		AND a.tmcod = #{team_code}
	  	   </if>
		ORDER BY a.ord1
		     ,decode(a.ord1,'001',a.ord2,'002',a.ord2,a.team)
		     ,a.cls
    </select>
     -->
     <!-- [20171121] DBLINK 제거 -->
     <select id="getVnetTeamInfo" parameterType="com.kgm.dto.VnetTeamInfoData" resultType="com.kgm.dto.VnetTeamInfoData">
    SELECT DISTINCT a.team team_name
         ,a.tmcod team_code
         ,a.ord1
         ,a.ord2
         ,a.cls ord3
    FROM if_user.sysa01tb a
         , if_user.sysa02tb b
    WHERE a.app IN ('0','2')
       AND length(a.tmcod) >= 8
       AND b.team = a.team
       <if test="team_name != null">
          AND a.team like '%'||#{team_name}||'%'
         </if>
         <if test="team_code != null">
          AND a.tmcod = #{team_code}
         </if>
    ORDER BY a.ord1
         ,decode(a.ord1,'001',a.ord2,'002',a.ord2,a.team)
         ,a.cls
    </select>
    <!-- [20171121] DBLINK 제거 -->
    <!--
    <select id="getVnetTeamNames" parameterType="com.kgm.dto.VnetTeamInfoData" resultType="com.kgm.dto.VnetTeamInfoData">
		SELECT DISTINCT a.team team_name
		     ,a.tmcod team_code
		FROM cals.sysa01tb@LINK_001_VNET a
		     , cals.sysa02tb@LINK_001_VNET b
		WHERE a.app IN ('0','2')
		   AND length(a.tmcod) >= 8
		   AND b.team = a.team
		   AND a.tmcod in 
		  <foreach collection="codeList" item="item" index="index" separator="," open="(" close=")">
    			#{item}
		  </foreach>
    </select>
     -->
     <!-- [20171121] DBLINK 제거 -->
    <select id="getVnetTeamNames" parameterType="com.kgm.dto.VnetTeamInfoData" resultType="com.kgm.dto.VnetTeamInfoData">
    SELECT DISTINCT a.team team_name
         ,a.tmcod team_code
    FROM if_user.sysa01tb a
         , if_user.sysa02tb b
    WHERE a.app IN ('0','2')
       AND length(a.tmcod) >= 8
       AND b.team = a.team
       AND a.tmcod in 
      <foreach collection="codeList" item="item" index="index" separator="," open="(" close=")">
          #{item}
      </foreach>
    </select>
    <!-- [20171121] DBLINK 제거 
    <select id="searchUserOnVnet" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    	SELECT TEAM as TEAM, HNAME as the_user, 'Reference' as role, EMPNO as user_name, EMAIL2 as fnd0objectId
    	FROM CALS.SYSA02TB@LINK_001_VNET
    	WHERE 
    			EMAIL2 IS NOT NULL AND
    			USE = 'Y' AND 
    	<if test="empno !=null">
    			TEAM = #{team} AND
    	</if>
    	<if test="hname !=null" >
    			HNAME = #{hname}
    	</if>
    
    </select>
    -->
    <!-- [20171121] DBLINK 제거 -->
    <select id="searchUserOnVnet" parameterType="java.util.HashMap" resultType="java.util.HashMap">
      SELECT TEAM as TEAM, HNAME as the_user, 'Reference' as role, EMPNO as user_name, EMAIL2 as fnd0objectId
      FROM if_user.SYSA02TB
      WHERE 
          EMAIL2 IS NOT NULL AND
          USE = 'Y' AND 
      <if test="empno !=null">
          TEAM = #{team} AND
      </if>
      <if test="hname !=null" >
          HNAME = #{hname}
      </if>
    
    </select>
    
    <select id="getECIfileInfo" resultType="java.util.HashMap">
		SELECT VNET_REGISTERED_ID||REF_FILE FILENAME
			  ,REF_FILE_PATH FILEPATH
		FROM IF_ECI_INFO_TO_VNET
		WHERE PLM_ITEM_PUID = #{itemPuid}
    </select>
    <!-- IF_ECI_INFO_TO_VNET 데이터가 존재하지 않은 -->
    <insert id="interfaceECI">
	    INSERT INTO IF_ECI_INFO_TO_VNET
			       (
			       VNET_REGISTERED_ID
			      ,PLM_ITEM_PUID
			      ,TITLE
			      ,REPRESENT_VEHICLE
			      ,APPLIED_VEHICLE
			      ,BEFORE_PART_NO
			      ,BEFORE_PART_NAME
			      ,BEFORE_DESC
			      ,AFTER_PART_NO
			      ,AFTER_PART_NAME
			      ,AFTER_DESC
			      ,EXP_INVEST
			      ,CHANGE_CODE
			      ,REVIEW_DEPT
			      ,LAW_CHECK
			      ,SYSTEM_CODE
			      ,US
			      ,SUPPLIER
			      ,AS_COMPATIBLE
			      ,SUPPLY_REQ_YN
			      ,SUBSTITUDE_PART
			      ,ECR_NO
			      ,RELATION_ID
			      ,REASON
			      ,BASE_ON
			      ,EC_MANAGE_CODE
			      ,REASON_OFFER_CODE
			      ,REASON_OFFER_DESC
			      ,REF_FILE
			      ,REF_FILE_PATH
			      ,REF_DEPT
			      ,WORKFLOW
			       )
			SELECT CALS.MAIL_TAB_NO.NEXTVAL@LINK_001_VNET
			     ,I.PUID
			     ,DECODE(ECI.PS7_DOC_DIVISION, 'A', '6SIGMA/MI 관련문서'||ECI.PS7_TITLE,'B', 'SCR 관련문서'||ECI.PS7_TITLE, ECI.PS7_TITLE)
			     ,ECI.PS7_REPRESENT_VEHICLE
			     ,ECI.PS7_APPLIED_VEHICLE
			     ,ECI.PS7_BEFORE_PART_NO
			     ,ECI.PS7_BEFORE_PART_NAME
			     ,ECI.PS7_BEFORE_DESC
			     ,ECI.PS7_AFTER_PART_NO
			     ,ECI.PS7_AFTER_PART_NAME
			     ,ECI.PS7_AFTER_DESC
			     ,ECI.PS7_EXP_INVEST
			     ,ECI.PS7_CHANGE_COST
			     ,ECI.PS7_REVIEW_DEPT
			     ,REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(ECI.PS7_LAW_CHECK
						,'국내 차량인증','CAR_CERT_01')
			            ,'유럽 차량인증','CAR_CERT_02')
			            ,'중국 차량인증','CAR_CERT_03')
			            ,'기타 차량인증','CAR_CERT_04')
						,'국내 단품인증','PRODUCT_CERT_01')
			            ,'유럽 단품인증','PRODUCT_CERT_02')
			            ,'중국 단품인증','PRODUCT_CERT_03')
			            ,'기타 단품인증','PRODUCT_CERT_04')
			            ,'해당사항없음','NO_CERT')
			     ,ECI.PS7_BUDGET_CODE
			     ,ECI.PS7_US
			     ,ECI.PS7_SUPPLIER
			     ,ECI.PS7_AS_COMPATIBLE
			     ,ECI.PS7_SUPPLY_REQ_YN
			     ,ECI.PS7_REF_FILE
			     ,ECI.PS7_ECR_NO
			     ,ECI.PS7_RELATION_ID
			     ,DECODE(ECI.PS7_CHANGE_REASON,'09','99','11','99','12','99','10','04','03','05','04','06','05','07','07','08','06','11',ECI.PS7_CHANGE_REASON)
			     ,ECI.PS7_BASE_ON
			     ,ECI.PS7_EC_MANAGE_CODE
			     ,ECI.PS7_REASON_OFFER_CODE
			     ,ECI.PS7_REASON_OFFER_DESC
			     ,ECI.PS7_REF_FILE_PATH
			     ,DECODE(ECI.PS7_REF_FILE_PATH,NULL,NULL,'/pis/'||TO_CHAR(SYSDATE,'YYYY'))
			     ,ECI.PS7_REF_DEPT
			     ,U.PUSER_ID||TO_CHAR(TA.PCREATION_DATE+9/24,'YYYYMMDDHH24MISS')||','||( SELECT LISTAGG(H.PUSER_ID||TO_CHAR(C.PDECISION_DATE+9/24,'YYYYMMDDHH24MISS'), ',')
					FROM INFODBA.PEPMTASK A
					     ,INFODBA.PATTACHMENTS B
					     ,INFODBA.PATTACHMENTS B1
					     ,INFODBA.PSIGNOFF C
					     ,INFODBA.PEPMTASK D
					     ,INFODBA.PEPMTASK R
					     ,INFODBA.PPOM_MEMBER M
					     ,INFODBA.PGROUPMEMBER GM
					     ,INFODBA.PUSER F
					     ,INFODBA.PPERSON G
					     ,INFODBA.PPOM_USER H
					     ,INFODBA.PEPMTASKTEMPLATE ET
					     ,INFODBA.PEPMTASKTEMPLATE ET1
					     ,INFODBA.PPOM_APPLICATION_OBJECT PAO
					     ,INFODBA.PWORKSPACEOBJECT WO
					     ,INFODBA.PITEMREVISION REV
					     ,INFODBA.PITEM I
					     ,INFODBA.PWORKSPACEOBJECT SWO
					WHERE A.PUID = B.PUID
					   AND C.PUID = B.PVALU_0
					   AND A.RTASK_TEMPLATEU = ET.PUID
					   AND ET.PTEMPLATE_NAME = 'select-signoff-team'
					   AND R.PUID = B1.PUID
					   AND D.PUID = A.RPARENT_TASKU
					   AND R.PUID = D.RPARENT_TASKU
					   AND M.PUID = GM.PUID
					   AND M.PUID = C.RGROUP_MEMBERU
					   AND M.RUSERU = F.PUID
					   AND F.RPERSONU = G.PUID
					   AND H.PUID = F.PUID
					   AND D.RTASK_TEMPLATEU = ET1.PUID
					   AND ET1.PTEMPLATE_NAME LIKE 'Review%'
					   AND B1.PVALU_0 = WO.PUID
					   AND PAO.PUID = B1.PUID
					   AND PAO.PCREATION_DATE =
					       (SELECT MAX(PCREATION_DATE)
					       FROM INFODBA.PATTACHMENTS A
					            ,INFODBA.PPOM_APPLICATION_OBJECT B
					       WHERE A.PUID = B.PUID
					          AND A.PVALU_0 = REV.PUID
					       )
					   AND WO.POBJECT_TYPE = 'S7_ECIRevision'
					   AND WO.PUID = REV.PUID
					   AND REV.RITEMS_TAGU = I.PUID
					   AND WO.PACTIVE_SEQ = '1'
					   AND REV.PITEM_REVISION_ID =
					       (SELECT MAX(RRR.PITEM_REVISION_ID)
					       FROM INFODBA.PITEMREVISION RRR
					       WHERE RRR.RITEMS_TAGU = I.PUID
					       )
					   AND SWO.PUID = R.PUID
					   AND SWO.PACTIVE_SEQ = '1'
					   AND I.PUID = #{itemPuid} )
			FROM INFODBA.PITEM I
			     ,INFODBA.PITEMREVISION R
			     ,INFODBA.PWORKSPACEOBJECT W
			     ,INFODBA.PS7_ECIREVISION ECI
			     ,INFODBA.PPOM_APPLICATION_OBJECT A
                 ,INFODBA.PPOM_USER U
                 ,INFODBA.PATTACHMENTS T
                 ,INFODBA.PPOM_APPLICATION_OBJECT TA
			WHERE I.PUID = R.RITEMS_TAGU
			   AND R.PUID = W.PUID
			   AND W.PACTIVE_SEQ = 1
			   AND ECI.PUID = W.PUID
			   AND A.PUID = ECI.PUID
         	   AND A.ROWNING_USERU = U.PUID
               AND T.PVALU_0 = ECI.PUID
               AND T.PUID = TA.PUID
			   AND I.PUID = #{itemPuid}
   </insert>
   <update id="updateFileName">
   		UPDATE IF_ECI_INFO_TO_VNET SET REF_FILE = VNET_REGISTERED_ID||REF_FILE  WHERE PLM_ITEM_PUID = #{itemPuid}
   </update>
   <!-- ECI 검토결과를 I/F 테이블에서 가져오기 -->
   <select id="getECIReviewInfo" resultType="com.kgm.dto.VnetTeamReviewData">
   		SELECT B.PLM_ITEM_PUID, A.*
		FROM IF_ECI_REVIEW_FROM_VNET A
			,IF_ECI_INFO_TO_VNET B
		WHERE A.VNET_REGISTERED_ID = B.VNET_REGISTERED_ID
		AND B.PLM_ITEM_PUID = #{itemPuid}
   </select>
   <!-- ECI I/F 테이블 업데이트 수신확인 업데이트 -->
   <update id="confirmECIReceived">
   	   UPDATE IF_ECI_INFO_FROM_VNET 
	       SET NPLM_RECEIVED = 'Y'
	     ,NPLM_RECEIVED_DATE = SYSDATE 
	   WHERE VNET_REGISTERED_ID = #{vnetId}
	   AND IF_COUNT = #{ifCount}
   </update>
   <!-- IF_ECI_REVIEW_FROM_VNET 테이블 수신확인 업데이트 -->
   <update id="confirmECIReviewReceived">
	   UPDATE IF_ECI_REVIEW_FROM_VNET 
	       SET NPLM_RECEIVED = 'Y'
	     ,NPLM_RECEIVED_DATE = SYSDATE 
	   WHERE NPLM_RECEIVED = 'N'
   </update>
   <!-- ITEM ID 변경 -->
   <update id="changeItemId">
	   UPDATE INFODBA.PITEM
	   SET PITEM_ID = #{itemId}
	   WHERE PUID = #{itemPuid}
   </update>
   <!-- SQL로 팀센터 Object를 업데이트 후 세션 로그아웃 없이 refresh 할 경우 -->
   <update id="refreshTCObject">
	   UPDATE INFODBA.PPOM_OBJECT
	   SET PTIMESTAMP = DECODE(SUBSTR(PTIMESTAMP,LENGTH(PTIMESTAMP)),'X',SUBSTR(PTIMESTAMP,1,LENGTH(PTIMESTAMP)-1)||'Z', SUBSTR(PTIMESTAMP,1,LENGTH(PTIMESTAMP)-1)||'X')
	   WHERE PUID = #{itemPuid}
   </update>
   <update id="refreshTCTimeStamp">
		MERGE INTO INFODBA.POM_TIMESTAMP A
		USING (SELECT PUID TID, PTIMESTAMP, PLSD FROM INFODBA.PPOM_OBJECT WHERE PUID = #{itemPuid}) B
		ON (A.PUID = B.TID)
		WHEN MATCHED THEN
		UPDATE
		SET A.PTIMESTAMP = DECODE(SUBSTR(A.PTIMESTAMP,LENGTH(A.PTIMESTAMP)),'X',SUBSTR(A.PTIMESTAMP,1,LENGTH(A.PTIMESTAMP)-1)||'Z', SUBSTR(A.PTIMESTAMP,1,LENGTH(A.PTIMESTAMP)-1)||'X')
		WHEN NOT MATCHED THEN
		INSERT (PUID, PTIMESTAMP, PDBTIMESTAMP, PDELETED)
		VALUES (B.TID,  B.PTIMESTAMP, B.PLSD, 1)
   </update>
   <!-- SYMC 인트라넷을 통한 메일 발송 -->
   <update id="sendMail" statementType="CALLABLE">
   		{call CALS.MAILSEND@LINK_001_VNET(#{the_sysid},#{the_sabun},#{the_title},#{the_remark},#{the_tsabun})}
   </update>
   <!-- SYMC 인트라넷을 통한 메일 발송 (through EAI) -->
   <!-- [20160921][ymjang] ORA-01461 LONG 값은 LONG 열에 삽입할 때만 바인드할 수 있습니다. 오류 수정 -->
   <select id="sendMailEai">
   INSERT INTO IF_USER.IF_EMAIL (SEQ_NO, SYSTEM_ID, FROM_USERS, TITLE, REMARK, TO_USERS, CREATE_DATE ) 
        SELECT ( SELECT GET_NEXT_MAIL_SEQ() FROM DUAL ) AS SEQ_NO
             , #{the_sysid,jdbcType=VARCHAR,mode=IN}, #{the_sabun,jdbcType=VARCHAR,mode=IN}
             , SUBSTR(#{the_title,jdbcType=VARCHAR,mode=IN}, 1, 4000)
             , SUBSTR(#{the_remark,jdbcType=VARCHAR,mode=IN}, 1, 4000)
             , #{the_tsabun,jdbcType=VARCHAR,mode=IN}
             , SYSDATE
          FROM DUAL
   </select>
   <update id="interfaceECONoToVnetEAI">
   <![CDATA[
	UPDATE IF_ECI_ECR A
	   SET A.ECONO = DECODE(A.ECONO, NULL, #{ECONO, jdbcType=VARCHAR}, A.ECONO || ',' || #{ECONO, jdbcType=VARCHAR})
	     , A.CLS2 = 'Y'
	     , A.STATUS = DECODE(A.STATUS, '07', A.STATUS, '07')
	     , A.UDATE = SYSDATE
	     , A.ECONO_UPD = DECODE(A.ECONO, NULL, #{ECONO, jdbcType=VARCHAR}, A.ECONO || ',' || #{ECONO, jdbcType=VARCHAR})
	     , A.CLS2_UPD = 'Y'
	     , A.STATUS_UPD = DECODE(A.STATUS, '07', A.STATUS, '07')
	     , A.UDATE_UPD = SYSDATE
	     , A.EAI_UPD_FLAG = 'R'
	 WHERE A.NO IN ( SELECT IF1.NO
	                   FROM INFODBA.PITEM I
	                      , INFODBA.PITEMREVISION IR
	                      , INFODBA.PS7_ECI_NO EN
	                      , IF_ECI_ECR IF1
	                  WHERE I.PUID = IR.RITEMS_TAGU
	                    AND IR.PUID = EN.PUID
	                    AND EN.PVAL_0 = IF1.APRVNO
	                    AND IF1.CLS1 = '5'
	                    AND I.PITEM_ID = #{ECONO, jdbcType=VARCHAR}
	                  UNION
	                SELECT IF1.NO
	                   FROM INFODBA.PITEM I
	                      , INFODBA.PITEMREVISION IR
	                      , INFODBA.PS7_ECOREVISION E
	                      , IF_ECI_ECR IF1
	                  WHERE I.PUID = IR.RITEMS_TAGU
	                    AND IR.PUID = E.PUID
	                    AND NVL(INSTR(E.PS7_ECR_NO, IF1.DOCUNO),0) <> 0
	                    AND IF1.CLS1 = '4'
	                    AND I.PITEM_ID = #{ECONO, jdbcType=VARCHAR}
	               )
	   AND NVL(INSTR(A.ECONO, #{ECONO, jdbcType=VARCHAR}),0) = 0 
   ]]>
   </update>
   
   <!-- [20160620][ymjang] DB Link 를 통한 ECI 및 ECR 정보 I/F를 EAI로 변경 개선 --> 
   <update id="interfaceECONoToVnet">
   <![CDATA[
	  UPDATE CALS.PISA01TB@LINK_001_VNET EV
	     SET ECONO = DECODE(ECONO, NULL, #{ECONO, jdbcType=VARCHAR}, ECONO || ',' || #{ECONO, jdbcType=VARCHAR}),
	         CLS2 = 'Y',
	         STATUS = DECODE(STATUS, '07', STATUS, '07'),
	         UDATE = SYSDATE
	   WHERE EV.NO IN (
	   				   SELECT V.NO
	                     FROM INFODBA.PITEM               I,
	                          INFODBA.PITEMREVISION       IR,
	                          INFODBA.PS7_ECI_NO          EN,
	                          CALS.PISA03TB@LINK_001_VNET VA,
	                          CALS.PISA01TB@LINK_001_VNET V
	                    WHERE I.PUID = IR.RITEMS_TAGU
	                      AND IR.PUID = EN.PUID
	                      AND EN.PVAL_0 = VA.APRVNO
	                      AND VA.NO = V.NO
	                      AND V.CLS1 = 5
	                      AND I.PITEM_ID = #{ECONO, jdbcType=VARCHAR}
                        UNION
                        SELECT v.no
                          FROM INFODBA.PITEM               I,
                               INFODBA.PITEMREVISION       IR,
                               INFODBA.PS7_ECOREVISION     E,
                               CALS.PISA01TB@LINK_001_VNET V
                         WHERE I.PUID = IR.RITEMS_TAGU
                           AND IR.PUID = E.PUID
   						   AND NVL(INSTR(E.PS7_ECR_NO, V.DOCUNO),0) <> 0
                           AND V.CLS1 = 4
                           AND I.PITEM_ID = #{ECONO, jdbcType=VARCHAR})
		 AND NVL(INSTR(ECONO, #{ECONO, jdbcType=VARCHAR}),0) = 0
   ]]>
   </update>
    
   <update id="updateECIRevisionWithInterface">
	   	UPDATE INFODBA.PS7_ECIREVISION ER
		SET ER.PS7_ST_DATE = SYSDATE-9/24
		<if test="vnetUrl != null">
    		,ER.PS7_VISIONNET_URL = #{vnetUrl}
  		</if>
		<if test="ifStage != null">
    		,ER.PS7_ECI_MATURITY = #{ifStage}
  		</if>
		<if test="approvalNo != null">
    		,ER.PS7_APPROVAL_NO = #{approvalNo}
  		</if>
		<if test="ecoNo != null">
    		,ER.PS7_ECO_NO = #{ecoNo}
  		</if>
		WHERE ER.PUID = (
		  SELECT R.PUID
		  FROM INFODBA.PITEMREVISION R
		      ,INFODBA.PWORKSPACEOBJECT W
		      ,INFODBA.PS7_ECIREVISION ER
		  WHERE ER.PUID = W.PUID
		    AND W.PACTIVE_SEQ = '1'
		    AND R.PUID = ER.PUID
		    AND R.RITEMS_TAGU = #{itemPuid, jdbcType=VARCHAR} )
   </update>

   <!-- ECR 검색 (through EAI) -->
   <select id="searchECREAI" resultType="java.util.HashMap">
   <![CDATA[
	SELECT TO_CHAR(A.NO) SEQNO
		 , A.DOCUNO DOCNO
	     , A.TITLE
	     , A.TEAM CTEAM
	     , A.HNAME CUSER
	     , TO_CHAR(A.TDATE, 'YYYY-MM-DD') CDATE
	  FROM IF_ECI_ECR A
	 WHERE A.CLS1 = '4'
		-- [SR140819-044][jclee][20140911] 생성일 검색 조건 Blank
		-- AND TO_CHAR(A.TDATE, 'YYYY-MM-DD') BETWEEN ? AND ?
	 ]]>
		<if test="CDATEFROM != null">
		AND TO_CHAR(A.TDATE, 'YYYY-MM-DD') BETWEEN #{CDATEFROM} AND #{CDATETO}
  		</if>
		<if test="CDATEFROM == null">
		AND TO_CHAR(A.TDATE, 'YYYY-MM-DD') <![CDATA[<=]]> #{CDATETO}
  		</if>
		<if test="DOCNO != null">
    		AND UPPER(A.DOCUNO) LIKE #{DOCNO}
  		</if>
  		<if test="TITLE != null">
    		AND UPPER(A.TITLE) LIKE #{TITLE}
  		</if>
  		<if test="CTEAM != null">
    		AND UPPER(A.TEAM) LIKE #{CTEAM}
  		</if>
  		 <if test="CUSER != null">
    		AND UPPER(A.HNAME) LIKE #{CUSER}
  		</if>
   </select>
	
   <!-- ECR 검색 -->
   <select id="searchECR" resultType="java.util.HashMap">
	   SELECT TO_CHAR(A.NO) SEQNO
			, A.DOCUNO DOCNO
		    , A.TITLE
		    , A.TEAM CTEAM
		    , U.HNAME CUSER
		    , TO_CHAR(A.TDATE, 'YYYY-MM-DD') CDATE
		FROM  CALS.PISA01TB@LINK_001_VNET A
		     ,CALS.SYSA02TB@LINK_001_VNET U
		WHERE A.CLS1 = '4'
		AND A.SABUN = U.EMPNO
		<if test="CDATEFROM != null">
		AND TO_CHAR(A.TDATE, 'YYYY-MM-DD') BETWEEN #{CDATEFROM} AND #{CDATETO}
  		</if>
		<if test="CDATEFROM == null">
		AND TO_CHAR(A.TDATE, 'YYYY-MM-DD') <![CDATA[<=]]> #{CDATETO}
  		</if>
		<if test="DOCNO != null">
    		AND UPPER(A.DOCUNO) LIKE #{DOCNO}
  		</if>
  		<if test="TITLE != null">
    		AND UPPER(A.TITLE) LIKE #{TITLE}
  		</if>
  		<if test="CTEAM != null">
    		AND UPPER(A.TEAM) LIKE #{CTEAM}
  		</if>
  		 <if test="CUSER != null">
    		AND UPPER(U.HNAME) LIKE #{CUSER}
  		</if>
   </select>
   
   <!-- ECI 검색 (through EAI) -->
   <select id="searchECIEAI" resultType="java.util.HashMap">
	SELECT TO_CHAR(A.NO) SEQNO
	     , A.APRVNO ECINO
	     , A.TITLE TITLE
	     , A.TEAM CTEAM
	     , A.HNAME CUSER
	     , TO_CHAR(A.TDATE, 'YYYY-MM-DD') CDATE
	  FROM IF_ECI_ECR A
	 WHERE A.CLS1 = '5'
	   <if test="!(ECINO == null || ECINO == '')">
   	   AND UPPER(A.APRVNO) LIKE #{ECINO}
 	   </if>
 	   <if test="!(CUSER == null || CUSER == '')">
   	   AND UPPER(A.HNAME) LIKE #{CUSER}
 	   </if>
   </select>

   <!-- ECI 검색 --> 
   <select id="searchECI" resultType="java.util.HashMap">
	   SELECT TO_CHAR(A.NO) SEQNO
			, VA.APRVNO ECINO
		    , A.TITLE TITLE
		    , A.TEAM CTEAM
		    , U.HNAME CUSER
		    , TO_CHAR(A.TDATE, 'YYYY-MM-DD') CDATE
		FROM  CALS.PISA01TB@LINK_001_VNET A
			 ,CALS.PISA03TB@LINK_001_VNET VA
		     ,CALS.SYSA02TB@LINK_001_VNET U
		WHERE A.CLS1 = '5'
		AND A.NO = VA.NO
		AND A.SABUN = U.EMPNO
 		<if test="!(ECINO == null || ECINO == '')">
    		AND UPPER(VA.APRVNO) LIKE #{ECINO}
  		</if>
  		 <if test="!(CUSER == null || CUSER == '')">
    		AND UPPER(U.HNAME) LIKE #{CUSER}
  		</if>
   </select>
   
   <update id="changeECIStatus">
	   	UPDATE INFODBA.PS7_ECIREVISION ER
		SET ER.PS7_ECI_MATURITY = #{status}
		WHERE ER.PUID = (
		  SELECT R.PUID
		  FROM INFODBA.PITEMREVISION R
		      ,INFODBA.PWORKSPACEOBJECT W
		      ,INFODBA.PS7_ECIREVISION ER
		  WHERE ER.PUID = W.PUID
		    AND W.PACTIVE_SEQ = '1'
		    AND R.PUID = ER.PUID
		    AND R.RITEMS_TAGU = #{itemPuid} )
   </update>
   
   <update id="changeECOStatus">
	   	UPDATE INFODBA.PS7_ECOREVISION ER
		SET ER.PS7_ECO_MATURITY = #{ecoStatus, jdbcType=VARCHAR}
		WHERE ER.PUID = (
		  SELECT R.PUID
		  FROM INFODBA.PITEMREVISION R
		      ,INFODBA.PWORKSPACEOBJECT W
		      ,INFODBA.PS7_ECOREVISION ER
		  WHERE ER.PUID = W.PUID
		    AND W.PACTIVE_SEQ = '1'
		    AND R.PUID = ER.PUID
		    AND R.PUID = #{ecoRevPuid, jdbcType=VARCHAR} )
   </update>
   
   <update id="changeMECOStatus">
	   	UPDATE INFODBA.PM7_MECOREVISION MR
		SET MR.PM7_MECO_MATURITY = #{mecoStatus, jdbcType=VARCHAR}
		WHERE MR.PUID = (
		  SELECT R.PUID
		  FROM INFODBA.PITEMREVISION R
		      ,INFODBA.PWORKSPACEOBJECT W
		      ,INFODBA.PM7_MECOREVISION MR
		  WHERE MR.PUID = W.PUID
		    AND W.PACTIVE_SEQ = '1'
		    AND R.PUID = MR.PUID
		    AND R.PUID = #{mecoRevPuid, jdbcType=VARCHAR} )
   </update>
   
   <select id="getSolutionItems" resultType="java.lang.String">
		SELECT /*+ ordered */ R.PUID 
        FROM ECO_BOM_LIST B
            ,INFODBA.PITEM I
            ,INFODBA.PITEMREVISION R
            ,INFODBA.PWORKSPACEOBJECT W
        WHERE ECO_NO = #{ecoNo, jdbcType=VARCHAR}
        AND B.epl_yn = 'Y'
        AND B.NEW_PART_NO = I.PITEM_ID
        AND I.PUID = R.RITEMS_TAGU
        AND R.PITEM_REVISION_ID = B.NEW_PART_REV
        AND R.PUID = W.PUID
        AND W.PACTIVE_SEQ = '1'
        AND NOT EXISTS ( 
                    SELECT 1 
                    FROM INFODBA.PRELEASE_STATUS_LIST RSL
                        ,INFODBA.PRELEASESTATUS RS
                    WHERE RSL.PUID = R.PUID
                    AND RSL.PVALU_0 = RS.PUID
                    AND RS.PNAME = 'S7_Released' )
        GROUP BY R.PUID
   </select>
   <select id="getProblemItems" resultType="java.lang.String">
		SELECT /*+ ordered */ distinct R.PUID 
        FROM ECO_BOM_LIST B
            ,INFODBA.PITEM I
            ,INFODBA.PITEMREVISION R
            ,INFODBA.PWORKSPACEOBJECT W
        WHERE B.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
        AND B.OLD_PART_NO = I.PITEM_ID
        AND B.OLD_PART_REV = R.PITEM_REVISION_ID
        AND I.PUID = R.RITEMS_TAGU
        AND R.PUID = W.PUID
        AND W.PACTIVE_SEQ = '1'
        AND W.PDATE_RELEASED is not null
   </select>
   <select id="checkEndtoEnd" resultType="java.lang.String">
		SELECT B.NEW_PART_NO||'[S/MODE:'||B.NEW_SMODE||'] 상위 - '||PB.PARENT_NO||'-'||PB.NEW_PART_NO||'[S/MODE:'||PB.NEW_SMODE||']' 
		FROM ECO_BOM_LIST B 
		     ,ECO_BOM_LIST PB 
		WHERE B.NEW_SMODE IN
		       (SELECT V.PVAL_0 
		       FROM INFODBA.PLISTOFVALUES L 
		            ,INFODBA.PLOV_VALUES_3 V 
		            ,INFODBA.PLOV_VALUE_DESCRIPTIONS_3 D 
		       WHERE L.PUID= V.PUID 
		          AND L.PUID =D.PUID 
		          AND V.PSEQ = D.PSEQ 
		          AND L.PLOV_NAME = 'S7_SUPPLY_MODE' 
		          AND SUBSTR( D.PVAL_0,1,1 )  = 'X' 
		       ) 
		   AND B.PARENT_NO = PB.NEW_PART_NO(+) 
		   AND PB.NEW_SMODE IN
		       (SELECT V.PVAL_0 
		       FROM INFODBA.PLISTOFVALUES L 
		            ,INFODBA.PLOV_VALUES_3 V 
		            ,INFODBA.PLOV_VALUE_DESCRIPTIONS_3 D 
		       WHERE L.PUID= V.PUID 
		          AND L.PUID =D.PUID 
		          AND V.PSEQ = D.PSEQ 
		          AND L.PLOV_NAME = 'S7_SUPPLY_MODE' 
		          AND SUBSTR( D.PVAL_0,1,1 )  = 'X'  
		       ) 
		   AND B.ECO_NO = #{ecoNo, jdbcType=VARCHAR} 
		      UNION ALL 
		SELECT B.PARENT_NO||'[S/MODE:'||B.NEW_SMODE||'] 하위 - '||PC.NEW_PART_NO||'[S/MODE:'||PC.NEW_SMODE||']' 
		FROM ECO_BOM_LIST B 
		     ,ECO_BOM_LIST PC 
		WHERE B.NEW_SMODE IN
		       (SELECT V.PVAL_0 
		       FROM INFODBA.PLISTOFVALUES L 
		            ,INFODBA.PLOV_VALUES_3 V 
		            ,INFODBA.PLOV_VALUE_DESCRIPTIONS_3 D 
		       WHERE L.PUID= V.PUID 
		          AND L.PUID =D.PUID 
		          AND V.PSEQ = D.PSEQ 
		          AND L.PLOV_NAME = 'S7_SUPPLY_MODE' 
		          AND SUBSTR( D.PVAL_0,1,1 )  = 'X'  
		       ) 
		   AND B.NEW_PART_NO = PC.PARENT_NO(+) 
		   AND PC.NEW_SMODE IN
		       (SELECT V.PVAL_0 
		       FROM INFODBA.PLISTOFVALUES L 
		            ,INFODBA.PLOV_VALUES_3 V 
		            ,INFODBA.PLOV_VALUE_DESCRIPTIONS_3 D 
		       WHERE L.PUID= V.PUID 
		          AND L.PUID =D.PUID 
		          AND V.PSEQ = D.PSEQ 
		          AND L.PLOV_NAME = 'S7_SUPPLY_MODE' 
		          AND SUBSTR( D.PVAL_0,1,1 )  = 'X' 
		       ) 
		   AND B.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
   </select>
	<!-- [SR없음][2015.06.24][jclee] Affected Project Code 추출 속도 개선 -->
   <select id="getAffectedProject" resultType="java.lang.String">
	SELECT TO_CHAR(LISTAGG(DISTINCT COLUMN_VALUE, ',')) affected_project
	  FROM TABLE(PKG_COMMON.T_SPLIT((SELECT TO_CHAR(LISTAGG(PROJECT, ','))
	                                  FROM (SELECT OLD_PROJECT AS PROJECT
	                                          FROM IF_USER.ECO_BOM_LIST BOM4
	                                         WHERE BOM4.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
	                                           AND BOM4.EPL_YN = 'Y'
	                                        UNION
	                                        SELECT NEW_PROJECT AS PROJECT
	                                          FROM IF_USER.ECO_BOM_LIST BOM4
	                                         WHERE BOM4.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
	                                           AND BOM4.EPL_YN = 'Y') T),
	                                ','))
   </select>
   <update id="makePartHistory" parameterType="java.lang.String" statementType="CALLABLE">
	    {call PRC_PART_HISTORY(#{ecoNo, jdbcType=VARCHAR})}
   </update>
   
   <!-- [SR없음][2015.11.19][jclee] Option 내 동일한 Category 내 옵션이 두개 이상 선택된 경우가 있는지 확인. -->
   <select id="getDuplicateCategoryInVC" resultType="java.lang.String">
		SELECT GET_DUPLICATE_CATEGORY_IN_VC(#{ecoNo, jdbcType=VARCHAR}) FROM DUAL
   </select>
   
   <!-- [20161227] 1. CM ECO일 경우 신규/Revise 된 Project Code 가 S201,S2M2 아닌 부품 발행불가 -->
   <!-- [20161227] 2. CM ECO가 아닐 경우 CM PART가 OLD/NEW로 들어오면 안됨 -->
   <!-- [20161227] 3. CM ECO가 아닐 경우 S로 시작하는 SMODE가 있으면 안됨 -->
   <!-- [20171213][LJG] 이보현 책임 요청으로 SMODE 체크 로직 제외 -->
   <select id="checkECOEPL" resultType="java.util.HashMap">
        WITH REFECO AS (
            SELECT PR.PUID
                ,PR.RS7_ECO_NOU
            FROM INFODBA.PITEMREVISION R
                ,INFODBA.PITEM I
                ,INFODBA.PWORKSPACEOBJECT W
                ,INFODBA.PITEMREVISION PR
                ,INFODBA.PWORKSPACEOBJECT PW
            WHERE PR.PUID = PW.PUID
            AND PW.PACTIVE_SEQ = 1
            AND W.PACTIVE_SEQ = 1
            AND W.PUID = R.PUID
            AND R.PUID = PR.RS7_ECO_NOU
            AND I.PUID = R.RITEMS_TAGU
            AND I.PITEM_ID = #{ecoNo, jdbcType=VARCHAR} 
        ), MISS_ECO AS ( -- ECO 누락
            SELECT /*+ ordered */ B.EPL_ID
            FROM ECO_BOM_LIST B
                ,INFODBA.PITEM I
                ,INFODBA.PITEMREVISION R
                ,INFODBA.PWORKSPACEOBJECT W
            WHERE B.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
            AND B.NEW_PART_NO = I.PITEM_ID
            AND B.NEW_PART_TYPE IN ('S7_Vehpart','S7_FunctionMast')
            AND I.PUID = R.RITEMS_TAGU
            AND R.PITEM_REVISION_ID = B.NEW_PART_REV
            AND R.PUID = W.PUID
            AND NOT EXISTS (
                SELECT 1
                FROM REFECO
                WHERE REFECO.PUID = R.PUID 
                )
            AND W.PACTIVE_SEQ = '1'
            AND NOT EXISTS (
                SELECT 1
                FROM INFODBA.PRELEASE_STATUS_LIST RSL
                    ,INFODBA.PRELEASESTATUS RS
                WHERE RSL.PUID = R.PUID
                AND RSL.PVALU_0 = RS.PUID
                AND RS.PNAME = 'S7_Released' 
                )
        ), MISS_SEQ_NO AS ( -- [SR160325-035][20160329][jclee] SEQ No 누락
            SELECT B.EPL_ID 
            FROM ECO_BOM_LIST B 
            WHERE B.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
            AND B.EPL_YN = 'Y' 
            AND 1 = (CASE WHEN B.OLD_PART_NO IS NOT NULL AND B.OLD_SEQ IS NULL THEN 1
                          WHEN B.NEW_PART_NO IS NOT NULL AND B.NEW_SEQ IS NULL THEN 1
                          ELSE 0 END)
        ), MISS_SMODE AS ( -- SMODE 누락
            SELECT B.EPL_ID
            FROM ECO_BOM_LIST B
            WHERE B.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
            AND B.NEW_SMODE IS NULL -- S/MODE 필수 체크
            AND B.NEW_PART_TYPE IN ('S7_Vehpart','S7_Stdpart') 
        ), MISS_OLDIC AS ( -- OLDIC 누락
            SELECT B.EPL_ID
            FROM ECO_BOM_LIST B
            WHERE B.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
            AND B.PARENT_TYPE != 'S7_Function'
            AND B.OLD_PART_NO IS NOT NULL
            AND B.NEW_PART_NO IS NOT NULL
            AND B.OLD_IC IS NULL 
        ), MISS_NEWIC AS ( -- NEWIC 누락
            SELECT B.EPL_ID
            FROM ECO_BOM_LIST B
            WHERE B.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
            AND B.PARENT_TYPE != 'S7_Function'
            AND B.OLD_PART_NO IS NOT NULL
            AND B.NEW_PART_NO IS NOT NULL
            AND B.NEW_IC IS NULL 
        ), MISS_PSTOCK AS ( -- PLT_STOCK 누락
            SELECT B.EPL_ID
            FROM ECO_BOM_LIST B
            WHERE B.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
            AND B.PARENT_TYPE != 'S7_Function'
            AND B.OLD_PART_NO IS NOT NULL
            AND B.OLD_PLT_STK IS NULL 
        ), MISS_ASTOCK AS ( -- AS_STOCK 누락
            SELECT B.EPL_ID
            FROM ECO_BOM_LIST B
            WHERE B.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
            AND B.PARENT_TYPE != 'S7_Function'
            AND B.OLD_PART_NO IS NOT NULL
            AND B.OLD_AS_STK IS NULL 
        ), MISS_CHANGE_DESC AS ( -- CHANGE_DESC 누락
            SELECT B.EPL_ID
            FROM ECO_BOM_LIST B
            WHERE B.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
            AND B.PARENT_TYPE != 'S7_Function'
            AND B.NEW_SMODE NOT IN ('P8','C8')
            AND B.CHG_DESC IS NULL 
        ), CM_PART_CHECK AS (--CM ECO일 경우 신규/Revise 된 Project Code 가 S201,SM01 아닌 In Work 인 부품 발행불가
            SELECT B.EPL_ID 
            FROM ECO_BOM_LIST B 
               , INFODBA.PITEM PI
               , INFODBA.PITEMREVISION PREV
            WHERE B.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
            AND B.NEW_PROJECT IS NOT NULL
            AND B.ECO_NO LIKE 'CM%'
            AND B.NEW_PART_NO = PI.PITEM_ID 
            AND PI.PUID = PREV.RITEMS_TAGU
            AND PREV.PITEM_REVISION_ID = B.NEW_PART_REV
            --AND B.CT IN ('N1','N2','F2') 
            AND PREV.PS7_MATURITY = 'In Work'
            AND PREV.PS7_PROJECT_CODE NOT IN('S201','SM01') 
        ), CM_PART_CHECK_IN_NOT_CM AS (-- CM ECO가 아닐 경우 CM PART가 OLD/NEW로 들어오면 안됨
            SELECT B.EPL_ID 
            FROM ECO_BOM_LIST B 
               , INFODBA.PITEM PI
               , INFODBA.PITEMREVISION PREV
            WHERE B.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
            AND B.NEW_PROJECT IS NOT NULL
            AND B.ECO_NO NOT LIKE 'CM%'
            AND B.NEW_PART_NO = PI.PITEM_ID 
            AND PI.PUID = PREV.RITEMS_TAGU
            AND PREV.PITEM_REVISION_ID = B.NEW_PART_REV
            AND PREV.PS7_PROJECT_CODE IN('S201','SM01') 
            UNION
            SELECT B.EPL_ID 
            FROM ECO_BOM_LIST B 
               , INFODBA.PITEM PI
               , INFODBA.PITEMREVISION PREV
            WHERE B.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
            AND B.NEW_PROJECT IS NOT NULL
            AND B.ECO_NO NOT LIKE 'CM%'
            AND B.OLD_PART_NO = PI.PITEM_ID
            AND PI.PUID = PREV.RITEMS_TAGU
            AND PREV.PITEM_REVISION_ID = B.OLD_PART_REV
            AND PREV.PS7_PROJECT_CODE IN('S201','SM01') 
        ),UNIALL AS (
            SELECT EPL_ID, 'ECO No 누락' T FROM MISS_ECO UNION ALL
            SELECT EPL_ID, 'Seq No 누락' T FROM MISS_SEQ_NO UNION ALL
            SELECT EPL_ID, 'S/MODE 누락' T FROM MISS_SMODE UNION ALL
            SELECT EPL_ID, 'old IC 누락' T FROM MISS_OLDIC UNION ALL
            SELECT EPL_ID, 'new IC 누락' T FROM MISS_NEWIC UNION ALL
            SELECT EPL_ID, 'PLT  Stock 누락' T FROM MISS_PSTOCK UNION ALL
            SELECT EPL_ID, 'AS Stock 누락' T FROM MISS_ASTOCK UNION ALL
            SELECT EPL_ID, 'Change_desc. 누락' T FROM MISS_CHANGE_DESC UNION ALL 
            SELECT EPL_ID, '타차종 신규부품' T FROM CM_PART_CHECK UNION ALL        
            SELECT EPL_ID, 'CM 부품 오류' T FROM CM_PART_CHECK_IN_NOT_CM         
        )
        SELECT B.EPL_ID
              ,B.ECO_NO
              ,B.OCC_THREADS
              ,B.PARENT_NO
              ,B.PARENT_REV
              ,DECODE(B.NEW_PART_NO, NULL, B.OLD_PART_NO, B.NEW_PART_NO) NEW_PART_NO
              ,DECODE(B.NEW_PART_REV, NULL, B.OLD_PART_REV, B.NEW_PART_REV)  NEW_PART_REV
              ,DECODE(B.NEW_SEQ, NULL, B.OLD_SEQ, B.NEW_SEQ) NEW_SEQ
              ,TO_CHAR(B.NEW_QTY) NEW_QTY
              ,MAX(DECODE(A.T, 'Seq No 누락', A.T)) SEQ_NO
              ,MAX(DECODE(A.T, 'S/MODE 누락', A.T)) NEW_SMODE
              ,MAX(DECODE(A.T, 'ECO No 누락', A.T)) REF_ECO
              ,MAX(DECODE(A.T, 'old IC 누락', A.T)) OLD_IC
              ,MAX(DECODE(A.T, 'new IC 누락', A.T)) NEW_IC
              ,MAX(DECODE(A.T, 'PLT  Stock 누락', A.T)) PLT_ST
              ,MAX(DECODE(A.T, 'AS Stock 누락', A.T)) AS_ST
              ,MAX(DECODE(A.T, 'Change_desc. 누락', A.T)) CHANGE_DESC
              ,MAX(DECODE(A.T, '타차종 신규부품', A.T)) CM_PART_CHECK
              ,MAX(DECODE(A.T, 'CM 부품 오류', A.T)) CM_PART_CHECK_IN_NOT_CM
              ,MAX(DECODE(A.T, 'CM S/MODE 오류', A.T)) INVALID_SMOD_IN_NOT_CM
        FROM ECO_BOM_LIST B
           , UNIALL A
        WHERE B.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
        AND B.EPL_ID = A.EPL_ID
        AND B.EPL_YN = 'Y'
        GROUP BY B.EPL_ID
                 ,B.ECO_NO
                 ,B.OCC_THREADS
                 ,B.PARENT_NO
                 ,B.PARENT_REV
                 ,DECODE(B.NEW_PART_NO, NULL, B.OLD_PART_NO, B.NEW_PART_NO)
                 ,DECODE(B.NEW_PART_REV, NULL, B.OLD_PART_REV, B.NEW_PART_REV)
                 ,DECODE(B.NEW_SEQ, NULL, B.OLD_SEQ, B.NEW_SEQ)
                 ,TO_CHAR(B.NEW_QTY)
   </select>
   
   <update id="updateEcoStatus" statementType="CALLABLE">
   		{call update_eco_status(#{ecoRevPuid, jdbcType=VARCHAR},#{ecoStatus, jdbcType=VARCHAR},#{itemStatus, jdbcType=VARCHAR})}
   </update>
	<!-- [20240228] Oracle Version upgrade 로 인한 WM_CONCAT 을 LISTAGG 로 변경 -->
   <select id="getEcoInfoEAI" resultType="com.kgm.dto.TCEcoModel">
   <![CDATA[
	WITH ECI AS (
	            SELECT EN.PUID PUID,
	                   LISTAGG(EN.PVAL_0, ',') PITEM_ID,
	                   LISTAGG(TO_CHAR(IF1.IDATE, 'YYYY-MM-DD'), ',') RELEASED_DATE,
	                   LISTAGG(IF1.TEAM, ',') PNAME
	              FROM INFODBA.PS7_ECI_NO EN,
	                   IF_ECI_ECR IF1
	             WHERE EN.PVAL_0 = IF1.APRVNO
	               AND IF1.CLS1 = '5'
	          GROUP BY EN.PUID
	            )                                                                                                                                           
	   , ECO AS (
	            SELECT IR.RPRIMARY_OBJECTU PUID, LISTAGG(AI.PITEM_ID, ',') PITEM_ID                                                                                                      
	              FROM INFODBA.PITEM AI                                                                                                                                                 
	                 , INFODBA.PITEMREVISION AR                                                                                                                                         
	                 , INFODBA.PS7_ECOREVISION AV                                                                                                                                       
	                 , INFODBA.PWORKSPACEOBJECT AW                                                                                                                                      
	                 , INFODBA.PIMANRELATION IR                                                                                                                                         
	             WHERE AI.PUID = AR.RITEMS_TAGU                                                                                                                                        
	               AND AR.PUID = AV.PUID                                                                                                                                                 
	               AND AR.PUID = AW.PUID                                                                                                                                                 
	               AND AR.PUID = IR.RSECONDARY_OBJECTU                                                                                                                                   
	               AND IR.RPRIMARY_OBJECTU IS NOT NULL                                                                                                                                   
	               AND AW.PACTIVE_SEQ = '1'                                                                                                                                              
	          GROUP BY IR.RPRIMARY_OBJECTU 
	            )
	   , ECR AS (
	            SELECT TO_CHAR(IF1.NO) SEQNO,
	                   IF1.DOCUNO DOCNO,
	                   IF1.TITLE,
	                   IF1.TEAM CTEAM,
	                   IF1.HNAME CUSER,
	                   TO_CHAR(IF1.TDATE, 'YYYY-MM-DD') CDATE
	              FROM IF_ECI_ECR IF1
	             WHERE IF1.CLS1 = '4'
	               AND EXISTS ( SELECT 'X'
	                              FROM INFODBA.PS7_ECOREVISION E
	                             WHERE NVL(INSTR(E.PS7_ECR_NO, IF1.DOCUNO),0) <> 0 )
		    )
		 , WF AS (  SELECT PUID
		                 , TO_CHAR(DECODE(MAX(DECODE(TN, 'Creator', DCDATE)), NULL, CDATE, MAX(DECODE(TN, 'Creator', DCDATE))), 'YYYY-MM-DD') INWORK
		                 , MAX(DECODE(TN||GN, 'Related Team Review'||#{rndManagement}, GN)) INREVIEW1TEAM
		                 , MAX(DECODE(TN||GN, 'Related Team Review'||#{rndManagement}, UN)) INREVIEW1USER
		                 , MAX(DECODE(TN||GN, 'Related Team Review'||#{rndManagement}, TEL)) INREVIEW1TEL
		                 , TO_CHAR(MAX(DECODE(TN||GN, 'Related Team Review'||#{rndManagement}, DCDATE)), 'YYYY-MM-DD') INREVIEW1
		                 , MAX(DECODE(TN||GN, 'Related Team ReviewVEHICLE CERTIFICATION', GN)) INREVIEW2TEAM
		                 , MAX(DECODE(TN||GN, 'Related Team ReviewVEHICLE CERTIFICATION', UN)) INREVIEW2USER
		                 , MAX(DECODE(TN||GN, 'Related Team ReviewVEHICLE CERTIFICATION', TEL)) INREVIEW2TEL
		                 , TO_CHAR(MAX(DECODE(TN||GN, 'Related Team ReviewVEHICLE CERTIFICATION', DCDATE)), 'YYYY-MM-DD') INREVIEW2
		                 , MAX(DECODE(TN||GN, 'Related Team Review'||#{engineeringCost}, GN)) INREVIEW3TEAM
		                 , MAX(DECODE(TN||GN, 'Related Team Review'||#{engineeringCost}, UN)) INREVIEW3USER
		                 , MAX(DECODE(TN||GN, 'Related Team Review'||#{engineeringCost}, TEL)) INREVIEW3TEL
		                 , TO_CHAR(MAX(DECODE(TN||GN, 'Related Team Review'||#{engineeringCost}, DCDATE)), 'YYYY-MM-DD') INREVIEW3
		                 , MAX(DECODE(TN, 'Sub-team Leader', GN)) INAPPROVALTEAM
		                 , MAX(DECODE(TN, 'Sub-team Leader', UN)) INAPPROVALUSER
		                 , MAX(DECODE(TN, 'Sub-team Leader', TEL)) INAPPROVALTEL
		                 , TO_CHAR(MAX(DECODE(TN,'Sub-team Leader', DCDATE)), 'YYYY-MM-DD') INAPPROVAL
		                 , MAX(DECODE(TN, 'Design Team Leader', GN)) APPROVEDTEAM
		                 , MAX(DECODE(TN, 'Design Team Leader', UN)) APPROVEDUSER
		                 , MAX(DECODE(TN, 'Design Team Leader', TEL)) APPROVEDTEL
		                 , TO_CHAR(MAX(DECODE(TN,'Design Team Leader', DCDATE)), 'YYYY-MM-DD')  APPROVED
		                 , MAX(DECODE(TN, 'Technical Management', GN)) COMPLETEDTEAM
		                 , MAX(DECODE(TN, 'Technical Management', UN)) COMPLETEDUSER
		                 , MAX(DECODE(TN, 'Technical Management', TEL)) COMPLETEDTEL
		                 , TO_CHAR(MAX(DECODE(TN,'Technical Management', DCDATE)), 'YYYY-MM-DD') COMPLETED
		              FROM (
	                      SELECT WO.PUID
	                           , ET1.PTEMPLATE_NAME TN
	                           , H.PUSER_NAME UN
	                           , P.PPA10 TEL
	                           , G.PNAME GN
	                           , WAO.PCREATION_DATE+9/24 WCDATE
	                           , PAO.PCREATION_DATE+9/24 CDATE
	                           , C.PDECISION_DATE+9/24 DCDATE
	                        FROM INFODBA.PEPMTASK A
	                           , INFODBA.PATTACHMENTS B
	                           , INFODBA.PATTACHMENTS B1
	                           , INFODBA.PSIGNOFF C
	                           , INFODBA.PEPMTASK D
	                           , INFODBA.PEPMTASK R
	                           , INFODBA.PPOM_MEMBER M
	                           , INFODBA.PPOM_GROUP G
	                           , INFODBA.PPOM_USER H
	                           , INFODBA.PUSER U
	                           , INFODBA.PPERSON P
	                           , INFODBA.PEPMTASKTEMPLATE ET
	                           , INFODBA.PEPMTASKTEMPLATE ET1
	                           , INFODBA.PPOM_APPLICATION_OBJECT PAO
	                           , INFODBA.PWORKSPACEOBJECT WO
	                           , INFODBA.PPOM_APPLICATION_OBJECT WAO
	                       WHERE A.PUID = B.PUID
	                         AND C.PUID = B.PVALU_0
	                         AND A.RTASK_TEMPLATEU = ET.PUID
	                         AND ET.PTEMPLATE_NAME = 'select-signoff-team'
	                         AND R.PUID = B1.PUID
	                         AND D.PUID = A.RPARENT_TASKU
	                         AND R.PUID = D.RPARENT_TASKU
	                         AND M.PUID = C.RGROUP_MEMBERU
	                         AND M.RUSERU = H.PUID
	                         AND H.PUID = U.PUID
	                         AND U.RPERSONU = P.PUID
	                         AND M.RGROUPU = G.PUID
	                         AND D.RTASK_TEMPLATEU = ET1.PUID
	                         AND ET1.PTEMPLATE_NAME IN ('Creator', 'Related Team Review', 'Sub-team Leader', 'Design Team Leader', 'Technical Management')
	                         AND B1.PVALU_0 = WO.PUID
                             AND WO.PUID = ( SELECT EWO1.PUID
                                               FROM INFODBA.PWORKSPACEOBJECT EWO1                                                                                              
                                                  , INFODBA.PS7_ECOREVISION E1
                                                  , INFODBA.PITEM EI1                                                                                                                      
                                                  , INFODBA.PITEMREVISION ER1
                                              WHERE EWO1.PACTIVE_SEQ = 1
                                                AND EWO1.PUID = E1.PUID
                                                AND E1.PUID = ER1.PUID
                                                AND ER1.RITEMS_TAGU = EI1.PUID
                                                AND EI1.PITEM_ID = UPPER(#{ecoNo, jdbcType=VARCHAR}) )
                             AND PAO.PUID = B1.PUID
	                         AND PAO.PCREATION_DATE = ( SELECT MAX(PCREATION_DATE)
	                                                      FROM INFODBA.PATTACHMENTS A
	                                                         , INFODBA.PPOM_APPLICATION_OBJECT B
	                                                     WHERE A.PUID = B.PUID
	                                                       AND A.PVALU_0 = WO.PUID
	                                                  )
	                        AND WO.POBJECT_TYPE = 'S7_ECORevision'
	                        AND WO.PACTIVE_SEQ = '1'
	                        AND WO.PUID = WAO.PUID
	              ) WF
	       GROUP BY PUID, WCDATE, CDATE
	         )
			SELECT ROW_NUMBER() OVER (ORDER BY A.PCREATION_DATE)  seq
			     , E.PS7_PLANT_CODE plantCode
			     , I.PITEM_ID ecoNo
			     , (  SELECT D.PVAL_0
			        FROM
			          INFODBA.PLISTOFVALUES L
			         ,INFODBA.PLOV_VALUES_3 V
			         ,INFODBA.PLOV_VALUE_DESCRIPTIONS_3 D
			        WHERE L.PUID = V.PUID
			         AND V.PUID = D.PUID
			         AND V.PSEQ = D.PSEQ
			         AND L.PLOV_NAME = 'S7_ECO_REASON'
			         AND V.PVAL_0 = E.PS7_CHANGE_REASON ) changeReason
			     , G.PNAME owningTeam
			     , P.PUSER_NAME owningUser
			     , P.PPA10 ownerTel
			     , DECODE(E.PS7_ECO_MATURITY, NULL, 'In Work', E.PS7_ECO_MATURITY) ecoStatus
			     , TO_CHAR(W.PDATE_RELEASED, 'YYYY-MM-DD HH24:MI:SS') releaseDate
			     , E.PS7_ECR_NO ecrNo
			     , ECR.CDATE ecrDate
			     , ECR.CTEAM ecrDept
			     , ECI.PITEM_ID eciNo
			     , ECI.RELEASED_DATE eciReleaseDate
			     , ECI.PNAME eciDept
			     , TO_CHAR(A.PCREATION_DATE, 'YYYY-MM-DD HH24:MI:SS') createDate
			     , GET_REG_ECO(E.PUID) regNsafe
			     , DECODE(E.PS7_EFFECT_POINT, 'Y', 'ASAP', E.PS7_EFFECT_POINT_DATE) cfgEffectPoint
			     , ECO.PITEM_ID concurrentImpl
			     , W.POBJECT_DESC ecoTitle
			     , WF.INWORK requestDate
			     , WF.INREVIEW1   techDate
			     , WF.INREVIEW1TEAM techTeam
			     , WF.INREVIEW1USER techUser
			     , WF.INREVIEW1TEL techTel
			     , WF.INREVIEW2   purcDate
			     , WF.INREVIEW2TEAM purcTeam
			     , WF.INREVIEW2USER purcUser
			     , WF.INREVIEW2TEL purcTel
			     , WF.INREVIEW3   costDate
			     , WF.INREVIEW3TEAM costTeam
			     , WF.INREVIEW3USER costUser
			     , WF.INREVIEW3TEL costTel
			     , WF.INAPPROVAL inApprovalDate
			     , WF.INAPPROVALTEAM inApprovalTeam
			     , WF.INAPPROVALUSER inApprovalUser
			     , WF.INAPPROVALTEL inApprovalTel
			     , WF.APPROVED approvedDate
			     , WF.APPROVEDTEAM approvedTeam
			     , WF.APPROVEDUSER approvedUser
			     , WF.APPROVEDTEL approvedTel
			     , WF.COMPLETED completedDate
			     , WF.COMPLETEDTEAM completedTeam
			     , WF.COMPLETEDUSER completedUser
			     , WF.COMPLETEDTEL completedTel
			     , E.PS7_ECO_TYPE ecotype
			     , E.PS7_AFFECTED_PROJECT affectedProject
			  FROM INFODBA.PS7_ECOREVISION E
			     , INFODBA.PWORKSPACEOBJECT W
			     , INFODBA.PPOM_APPLICATION_OBJECT A
			     , INFODBA.PITEM I
			     , INFODBA.PITEMREVISION R
			     , INFODBA.PRELEASE_STATUS_LIST RL
			     , INFODBA.PRELEASESTATUS RS
			     , INFODBA.PPOM_GROUP G
			     , INFODBA.PPOM_USER O
			     , INFODBA.PUSER U
			     , INFODBA.PPERSON P
			     , ECI                                                                                                                                                                          
			     , ECO
	         , ECR
			     , WF
			 WHERE E.PUID = W.PUID
			   AND W.PUID = A.PUID
			   AND E.PUID = R.PUID
			   AND R.RITEMS_TAGU = I.PUID
			   AND W.PACTIVE_SEQ = 1
			   AND R.PUID = RL.PUID(+)
			   AND RL.PVALU_0 = RS.PUID(+)
			   AND A.ROWNING_GROUPU = G.PUID
			   AND A.ROWNING_USERU = O.PUID
			   AND O.PUID = U.PUID
			   AND U.RPERSONU = P.PUID
			   AND R.PUID = ECI.PUID(+)
			   AND R.PUID = ECO.PUID(+)
			   AND E.PS7_ECR_NO = ECR.DOCNO(+)
			   AND R.PUID = WF.PUID(+)
			   AND I.PITEM_ID = UPPER(#{ecoNo, jdbcType=VARCHAR})
	]]>
   </select>
   
   <!--	[20160620][ymjang] DB Link 를 통한 ECI 및 ECR 정보 I/F를 EAI로 변경 개선 -->
	<!-- [20240228] Oracle Version upgrade 로 인한 WM_CONCAT 을 LISTAGG 로 변경 -->
   <select id="getEcoInfo" resultType="com.kgm.dto.TCEcoModel">
   <![CDATA[
	   WITH ECI AS (
	      SELECT EN.PUID PUID,
                 LISTAGG(EN.PVAL_0, ',') PITEM_ID,
                 LISTAGG(TO_CHAR(V.IDATE, 'YYYY-MM-DD'), ',') RELEASED_DATE,
                 LISTAGG(V.TEAM, ',') PNAME
            FROM INFODBA.PS7_ECI_NO          EN,
                 CALS.PISA03TB@LINK_001_VNET VA,
                 CALS.PISA01TB@LINK_001_VNET V
           WHERE EN.PVAL_0 = VA.APRVNO
             AND VA.NO = V.NO
             AND V.CLS1 = 5
           GROUP BY EN.PUID
	        )                                                                                                                                           
		, ECO AS (
	            SELECT IR.RPRIMARY_OBJECTU PUID, LISTAGG(AI.PITEM_ID, ',') PITEM_ID                                                                                                      
	            FROM INFODBA.PITEM AI                                                                                                                                                 
	                ,INFODBA.PITEMREVISION AR                                                                                                                                         
	                ,INFODBA.PS7_ECOREVISION AV                                                                                                                                       
	                ,INFODBA.PWORKSPACEOBJECT AW                                                                                                                                      
	                ,INFODBA.PIMANRELATION IR                                                                                                                                         
	            WHERE AI.PUID = AR.RITEMS_TAGU                                                                                                                                        
	            AND AR.PUID = AV.PUID                                                                                                                                                 
	            AND AR.PUID = AW.PUID                                                                                                                                                 
	            AND AR.PUID = IR.RSECONDARY_OBJECTU                                                                                                                                   
	            AND IR.RPRIMARY_OBJECTU IS NOT NULL                                                                                                                                   
	            AND AW.PACTIVE_SEQ = '1'                                                                                                                                              
	        GROUP BY IR.RPRIMARY_OBJECTU )
	    , ECR AS (
	              SELECT TO_CHAR(A.NO) SEQNO,
	                     A.DOCUNO DOCNO,
	                     A.TITLE,
	                     A.TEAM CTEAM,
	                     U.HNAME CUSER,
	                     TO_CHAR(A.TDATE, 'YYYY-MM-DD') CDATE
	                FROM CALS.PISA01TB@LINK_001_VNET A,
	                     CALS.SYSA02TB@LINK_001_VNET U
	               WHERE A.CLS1 = '4'
	                 AND A.SABUN = U.EMPNO
	    )
		, WF AS (                                                                                                                                                                         
	            SELECT PUID                                                                                                                                                           
	                  ,TO_CHAR(CDATE, 'YYYY-MM-DD') INWORK                                                                                                                            
	                  ,MAX(DECODE(TN||GN, 'Related Team Review'||#{rndManagement}, GN)) INREVIEW1TEAM                                                                             
	                  ,MAX(DECODE(TN||GN, 'Related Team Review'||#{rndManagement}, UN)) INREVIEW1USER                                                                             
	                  ,MAX(DECODE(TN||GN, 'Related Team Review'||#{rndManagement}, TEL)) INREVIEW1TEL                                                                             
	                  ,TO_CHAR(MAX(DECODE(TN||GN, 'Related Team Review'||#{rndManagement}, DCDATE)), 'YYYY-MM-DD') INREVIEW1                                                      
	                  ,MAX(DECODE(TN||GN, 'Related Team ReviewVEHICLE CERTIFICATION', GN)) INREVIEW2TEAM                                                                                             
	                  ,MAX(DECODE(TN||GN, 'Related Team ReviewVEHICLE CERTIFICATION', UN)) INREVIEW2USER                                                                                             
	                  ,MAX(DECODE(TN||GN, 'Related Team ReviewVEHICLE CERTIFICATION', TEL)) INREVIEW2TEL                                                                                             
	                  ,TO_CHAR(MAX(DECODE(TN||GN, 'Related Team ReviewVEHICLE CERTIFICATION', DCDATE)), 'YYYY-MM-DD') INREVIEW2                                                                      
	                  ,MAX(DECODE(TN||GN, 'Related Team Review'||#{engineeringCost}, GN)) INREVIEW3TEAM                                                                                      
	                  ,MAX(DECODE(TN||GN, 'Related Team Review'||#{engineeringCost}, UN)) INREVIEW3USER                                                                                      
	                  ,MAX(DECODE(TN||GN, 'Related Team Review'||#{engineeringCost}, TEL)) INREVIEW3TEL                                                                                      
	                  ,TO_CHAR(MAX(DECODE(TN||GN, 'Related Team Review'||#{engineeringCost}, DCDATE)), 'YYYY-MM-DD') INREVIEW3                                                               
	                  ,MAX(DECODE(TN, 'Sub-team Leader', GN)) INAPPROVALTEAM                                                                                                          
	                  ,MAX(DECODE(TN, 'Sub-team Leader', UN)) INAPPROVALUSER                                                                                                          
	                  ,MAX(DECODE(TN, 'Sub-team Leader', TEL)) INAPPROVALTEL                                                                                                          
	                  ,TO_CHAR(MAX(DECODE(TN,'Sub-team Leader', DCDATE)), 'YYYY-MM-DD') INAPPROVAL                                                                                    
	                  ,MAX(DECODE(TN, 'Design Team Leader', GN)) APPROVEDTEAM                                                                                                         
	                  ,MAX(DECODE(TN, 'Design Team Leader', UN)) APPROVEDUSER                                                                                                         
	                  ,MAX(DECODE(TN, 'Design Team Leader', TEL)) APPROVEDTEL                                                                                                         
	                  ,TO_CHAR(MAX(DECODE(TN,'Design Team Leader', DCDATE)), 'YYYY-MM-DD')  APPROVED                                                                                  
	                  ,MAX(DECODE(TN, 'Technical Management', GN)) COMPLETEDTEAM                                                                                                      
	                  ,MAX(DECODE(TN, 'Technical Management', UN)) COMPLETEDUSER                                                                                                      
	                  ,MAX(DECODE(TN, 'Technical Management', TEL)) COMPLETEDTEL                                                                                                      
	                  ,TO_CHAR(MAX(DECODE(TN,'Technical Management', DCDATE)), 'YYYY-MM-DD') COMPLETED                                                                                
	            FROM (                                                                                                                                                                
	              SELECT WO.PUID                                                                                                                                                      
	                   , ET1.PTEMPLATE_NAME TN                                                                                                                                        
	                   , H.PUSER_NAME UN                                                                                                                                              
	                   , P.PPA10 TEL                                                                                                                                                  
	                   , G.PNAME GN                                                                                                                                                   
	                   , WAO.PCREATION_DATE+9/24 WCDATE                                                                                                                               
	                   , PAO.PCREATION_DATE+9/24 CDATE                                                                                                                                
	                   , C.PDECISION_DATE+9/24 DCDATE                                                                                                                                 
	              FROM INFODBA.PEPMTASK A                                                                                                                                             
	                  ,INFODBA.PATTACHMENTS B                                                                                                                                         
	                  ,INFODBA.PATTACHMENTS B1                                                                                                                                        
	                  ,INFODBA.PSIGNOFF C                                                                                                                                             
	                  ,INFODBA.PEPMTASK D                                                                                                                                             
	                  ,INFODBA.PEPMTASK R                                                                                                                                             
	                  ,INFODBA.PPOM_MEMBER M                                                                                                                                          
	                  ,INFODBA.PPOM_GROUP G                                                                                                                                           
	                  ,INFODBA.PPOM_USER H                                                                                                                                            
	                  ,INFODBA.PUSER U                                                                                                                                                
	                  ,INFODBA.PPERSON P                                                                                                                                              
	                  ,INFODBA.PEPMTASKTEMPLATE ET                                                                                                                                    
	                  ,INFODBA.PEPMTASKTEMPLATE ET1                                                                                                                                   
	                  ,INFODBA.PPOM_APPLICATION_OBJECT PAO                                                                                                                            
	                  ,INFODBA.PWORKSPACEOBJECT WO                                                                                                                                    
	                  ,INFODBA.PPOM_APPLICATION_OBJECT WAO                                                                                                                            
	              WHERE A.PUID = B.PUID                                                                                                                                               
	              AND C.PUID = B.PVALU_0                                                                                                                                              
	            AND A.RTASK_TEMPLATEU = ET.PUID                                                                                                                                       
	            AND ET.PTEMPLATE_NAME = 'select-signoff-team'                                                                                                                         
	            AND R.PUID = B1.PUID                                                                                                                                                  
	            AND D.PUID = A.RPARENT_TASKU                                                                                                                                          
	            AND R.PUID = D.RPARENT_TASKU                                                                                                                                          
	            AND M.PUID = C.RGROUP_MEMBERU                                                                                                                                         
	            AND M.RUSERU = H.PUID                                                                                                                                                 
	            AND H.PUID = U.PUID                                                                                                                                                   
	            AND U.RPERSONU = P.PUID                                                                                                                                               
	            AND M.RGROUPU = G.PUID                                                                                                                                                
	            AND D.RTASK_TEMPLATEU = ET1.PUID                                                                                                                                      
	            AND ET1.PTEMPLATE_NAME IN ('Related Team Review', 'Sub-team Leader', 'Design Team Leader', 'Technical Management')                                                    
	            AND B1.PVALU_0 = WO.PUID                                                                                                                                              
	            AND PAO.PUID = B1.PUID                                                                                                                                                
	            AND PAO.PCREATION_DATE =                                                                                                                                              
	               (SELECT MAX(PCREATION_DATE)                                                                                                                                        
	               FROM INFODBA.PATTACHMENTS A                                                                                                                                        
	                ,INFODBA.PPOM_APPLICATION_OBJECT B                                                                                                                                
	               WHERE A.PUID = B.PUID                                                                                                                                              
	                  AND A.PVALU_0 = WO.PUID                                                                                                                                         
	               )                                                                                                                                                                  
	            AND WO.POBJECT_TYPE = 'S7_ECORevision'                                                                                                                                
	            AND WO.PACTIVE_SEQ = '1'                                                                                                                                              
	            AND WO.PUID = WAO.PUID                                                                                                                                                
	            ) WF                                                                                                                                                                  
	            GROUP BY PUID, WCDATE, CDATE )                                                                                                                                        
		SELECT                                                                                                                                                                            
		    ROW_NUMBER() OVER (ORDER BY A.PCREATION_DATE)  seq                                                                                                                            
		    ,E.PS7_PLANT_CODE plantCode                                                                                                                                                   
		    ,I.PITEM_ID ecoNo                                                                                                                                                             
		    ,(  SELECT D.PVAL_0                                                                                                                                                           
		        FROM                                                                                                                                                                      
		          INFODBA.PLISTOFVALUES L                                                                                                                                                 
		         ,INFODBA.PLOV_VALUES_3 V                                                                                                                                                 
		         ,INFODBA.PLOV_VALUE_DESCRIPTIONS_3 D                                                                                                                                     
		        WHERE L.PUID = V.PUID                                                                                                                                                     
		         AND V.PUID = D.PUID                                                                                                                                                      
		         AND V.PSEQ = D.PSEQ                                                                                                                                                      
		         AND L.PLOV_NAME = 'S7_ECO_REASON'                                                                                                                                        
		         AND V.PVAL_0 = E.PS7_CHANGE_REASON ) changeReason                                                                                                                        
		    ,G.PNAME owningTeam                                                                                                                                                           
		    ,P.PUSER_NAME owningUser                                                                                                                                                      
		    ,P.PPA10 ownerTel                                                                                                                                                             
		    ,DECODE(E.PS7_ECO_MATURITY, NULL, 'In Work', E.PS7_ECO_MATURITY) ecoStatus                                                                                                   
		    ,TO_CHAR(W.PDATE_RELEASED, 'YYYY-MM-DD HH24:MI:SS') releaseDate                                                                                                               
		    ,E.PS7_ECR_NO ecrNo                                                                                                                                                           
		    ,ECR.CDATE ecrDate	/* [SR141021-025][jclee] ECR Date, ECR Dept 누락 수정 */
		    ,ECR.CTEAM ecrDept
		    ,ECI.PITEM_ID eciNo                                                                                                                                                           
		    ,ECI.RELEASED_DATE eciReleaseDate                                                                                                                                             
		    ,ECI.PNAME eciDept                                                                                                                                                            
		    ,TO_CHAR(A.PCREATION_DATE, 'YYYY-MM-DD HH24:MI:SS') createDate  
		    ,GET_REG_ECO(E.PUID) regNsafe                                                                                                            
		    ,DECODE(E.PS7_EFFECT_POINT, 'Y', 'ASAP', E.PS7_EFFECT_POINT_DATE) cfgEffectPoint                                                                                              
		    ,ECO.PITEM_ID concurrentImpl                                                                                                                                                  
		    ,W.POBJECT_DESC ecoTitle                                                                                                                                                      
		    ,WF.INWORK requestDate                                                                                                                                                        
		    ,WF.INREVIEW1   techDate                                                                                                                                                      
		    ,WF.INREVIEW1TEAM techTeam                                                                                                                                                    
		    ,WF.INREVIEW1USER techUser                                                                                                                                                    
		    ,WF.INREVIEW1TEL techTel                                                                                                                                                      
		    ,WF.INREVIEW2   purcDate                                                                                                                                                      
		    ,WF.INREVIEW2TEAM purcTeam                                                                                                                                                    
		    ,WF.INREVIEW2USER purcUser                                                                                                                                                    
		    ,WF.INREVIEW2TEL purcTel                                                                                                                                                      
		    ,WF.INREVIEW3   costDate                                                                                                                                                      
		    ,WF.INREVIEW3TEAM costTeam                                                                                                                                                    
		    ,WF.INREVIEW3USER costUser                                                                                                                                                    
		    ,WF.INREVIEW3TEL costTel
		    ,WF.INAPPROVAL inApprovalDate
		    ,WF.INAPPROVALTEAM inApprovalTeam
		    ,WF.INAPPROVALUSER inApprovalUser
		    ,WF.INAPPROVALTEL inApprovalTel
		    ,WF.APPROVED approvedDate
		    ,WF.APPROVEDTEAM approvedTeam
		    ,WF.APPROVEDUSER approvedUser
		    ,WF.APPROVEDTEL approvedTel
		    ,WF.COMPLETED completedDate
		    ,WF.COMPLETEDTEAM completedTeam
		    ,WF.COMPLETEDUSER completedUser
		    ,WF.COMPLETEDTEL completedTel
		    ,E.PS7_ECO_TYPE ecotype
		    ,E.PS7_AFFECTED_PROJECT affectedProject /* [SR140918-028][20140925][jclee] affectedProj를 affectedProject 로 alias 변경. ECO Report에서 Affected Project 누락 건. */
		FROM INFODBA.PS7_ECOREVISION E
		    ,INFODBA.PWORKSPACEOBJECT W
		    ,INFODBA.PPOM_APPLICATION_OBJECT A
		    ,INFODBA.PITEM I
		    ,INFODBA.PITEMREVISION R
		    ,INFODBA.PRELEASE_STATUS_LIST RL
		    ,INFODBA.PRELEASESTATUS RS
		    ,INFODBA.PPOM_GROUP G
		    ,INFODBA.PPOM_USER O
		    ,INFODBA.PUSER U
		    ,INFODBA.PPERSON P
		    ,ECI                                                                                                                                                                          
		    ,ECO
        	,ECR
		    ,WF
		WHERE E.PUID = W.PUID
		AND W.PUID = A.PUID
		AND E.PUID = R.PUID
		AND R.RITEMS_TAGU = I.PUID
		AND W.PACTIVE_SEQ = 1
		AND R.PUID = RL.PUID(+)
		AND RL.PVALU_0 = RS.PUID(+)
		AND A.ROWNING_GROUPU = G.PUID
		AND A.ROWNING_USERU = O.PUID
		AND O.PUID = U.PUID
		AND U.RPERSONU = P.PUID
		AND R.PUID = ECI.PUID(+)
		AND R.PUID = ECO.PUID(+)
		AND E.PS7_ECR_NO = ECR.DOCNO(+)
		AND R.PUID = WF.PUID(+)
		AND I.PITEM_ID = UPPER(#{ecoNo, jdbcType=VARCHAR})
	]]>
   </select>
   
   <select id="getEcoWorkflowInfo" resultType="java.util.HashMap">
		SELECT NVL(ET1.PTEMPLATE_NAME, ' ') TN
		     , NVL(H.PUSER_NAME, ' ') UN
		     , NVL(P.PPA10, ' ') TEL
		     , NVL(TO_CHAR(C.PDECISION_DATE+9/24, 'YYYY-MM-DD'), ' ') DCDATE
		     , NVL(G.PNAME, ' ') GN 
		FROM INFODBA.PEPMTASK A 
		        ,INFODBA.PATTACHMENTS B 
		        ,INFODBA.PATTACHMENTS B1
		        ,INFODBA.PSIGNOFF C 
		        ,INFODBA.PEPMTASK D 
		        ,INFODBA.PEPMTASK R 
		        ,INFODBA.PPOM_MEMBER M
		        ,INFODBA.PPOM_GROUP G 
		        ,INFODBA.PPOM_USER H
		        ,INFODBA.PUSER U
		        ,INFODBA.PPERSON P
		        ,INFODBA.PEPMTASKTEMPLATE ET
		        ,INFODBA.PEPMTASKTEMPLATE ET1 
		        ,INFODBA.PPOM_APPLICATION_OBJECT PAO
		        ,INFODBA.PWORKSPACEOBJECT WO
		        ,INFODBA.PPOM_APPLICATION_OBJECT WAO
		        ,INFODBA.PITEMREVISION ER
		        ,INFODBA.PITEM EI
		WHERE A.PUID = B.PUID 
		AND C.PUID = B.PVALU_0
		AND A.RTASK_TEMPLATEU = ET.PUID 
		AND ET.PTEMPLATE_NAME = 'select-signoff-team' 
		AND R.PUID = B1.PUID
		AND D.PUID = A.RPARENT_TASKU
		AND R.PUID = D.RPARENT_TASKU
		AND M.PUID = C.RGROUP_MEMBERU 
		AND M.RUSERU = H.PUID 
		AND H.PUID = U.PUID 
		AND U.RPERSONU = P.PUID 
		AND M.RGROUPU = G.PUID
		AND D.RTASK_TEMPLATEU = ET1.PUID
		AND ET1.PTEMPLATE_NAME IN ('Related Team Review', 'Sub-team Leader', 'Design Team Leader', 'Technical Management','Reference Department')
		AND B1.PVALU_0 = WO.PUID
		AND PAO.PUID = B1.PUID
		AND PAO.PCREATION_DATE = (
		         SELECT MAX(PCREATION_DATE)
		         FROM INFODBA.PATTACHMENTS A
		        ,INFODBA.PPOM_APPLICATION_OBJECT B
		         WHERE A.PUID = B.PUID
		        AND A.PVALU_0 = WO.PUID )
		AND WO.PACTIVE_SEQ = '1'
		AND WO.PUID = WAO.PUID
		AND WO.PUID = ER.PUID
		AND ER.RITEMS_TAGU = EI.PUID
		AND EI.PITEM_ID = #{ecoNo, jdbcType=VARCHAR}
		ORDER BY DECODE(ET1.PTEMPLATE_NAME,'Related Team Review', 1, 'Sub-team Leader', 2, 'Design Team Leader', 3, 'Technical Management', 4, 'Reference Department', 5)
    </select>
   	<select id="childrenCount" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT COUNT(PUID) FROM INFODBA.PPSOCCURRENCE O WHERE O.RPARENT_BVRU = #{bvrPuid}
	</select>
  
	<select id="workflowCount" parameterType="java.lang.String" resultType="java.lang.String">
      SELECT COUNT(W.PUID) 
      FROM INFODBA.PWORKSPACEOBJECT W 
      WHERE W.POBJECT_TYPE = 'Job' 
      AND W.POBJECT_NAME LIKE 'ECO ['||#{ecoNo, jdbcType=VARCHAR}||'%'
	</select>
  
	<select id="getEcoRevisionPuid" parameterType="java.lang.String" resultType="java.lang.String">
	    SELECT EIR.PUID
        FROM INFODBA.PITEM EI
             , INFODBA.PITEMREVISION IR
             , INFODBA.PS7_ECOREVISION EIR
             , INFODBA.PWORKSPACEOBJECT EIRW
        WHERE EI.PITEM_ID = #{ecoNo, jdbcType=VARCHAR}
           AND EI.PUID = IR.RITEMS_TAGU
           AND IR.PUID = EIR.PUID
           AND EIR.PUID = EIRW.PUID
           AND EIRW.PACTIVE_SEQ = 1
	</select>
	
   <update id="updateALC" statementType="CALLABLE">
   		{call PROC_ALC_UPDATE(#{ECO_NO, jdbcType=VARCHAR})}
   </update>	
   
   <update id="correctEPL" statementType="CALLABLE">
   		{call PKG_EPL_CORRECTION.CORRECTING_EPL(#{ECO_NO, jdbcType=VARCHAR})}
   </update>   
   
   <!-- [SR160527-024][20160620][ymjang] A ECO 에서 신규로 붙은 Parent 하위 Part 가 
                                         B ECO 에서 리비전될 때 B ECO 에 A ECO 에서 신규로 붙은 Parent 가 추출이 안되는 문제 해결 
        [20160721][ymjang] java.io.NotSerializableException 오류 개선                                 
   -->
	<select id="getIncorrectList" resultType="java.util.HashMap">
	select eco_no,epl_yn,occ_threads,ct,parent_no,parent_rev,parent_type,old_project,new_project
	     , old_part_no,old_part_rev,old_part_type,new_part_no,new_part_rev,new_part_type,old_seq,new_seq
	     , old_qty,new_qty,old_smode,new_smode,old_apart,new_apart,old_mcode,new_mcode
	     , pkg_common.convert_to_simple(old_vc) as old_vc,pkg_common.convert_to_simple(new_vc) as new_vc
	     , old_ic,new_ic,old_plt_stk,old_as_stk,new_cost,new_tool,chg_desc,old_desc
	     , cre_date,upd_user_id,upd_date,epl_id
	     , old_occs,correct_desc,correction_uid
	  from eco_epl_correction 
	 where eco_no = #{ECO_NO, jdbcType=VARCHAR}
	</select>   
	
	<select id="getEPL" parameterType="java.lang.String" resultType="java.util.HashMap">
	    SELECT * from eco_bom_list where ct!='XX' and epl_yn='Y' and epl_id = #{EPL_ID, jdbcType=VARCHAR}
	</select>   
	
	<select id="getChangedOcc" parameterType="java.lang.String" resultType="java.util.HashMap">
	    select * from table(PKG_EPL_CORRECTION.GET_CHANGED_OCC(#{ECO_NO, jdbcType=VARCHAR}))
	</select>   
	
	<update id="updateOccthread" statementType="CALLABLE">
			{call PKG_EPL_CORRECTION.update_occ_thread(#{ECO_NO, jdbcType=VARCHAR}, #{ADDED_OCC_THREAD, jdbcType=VARCHAR}, #{DELETED_OCC_THREAD, jdbcType=VARCHAR})}
	</update>   	
		
   	<select id="getDuplicatedOrderNoList" resultType="java.util.HashMap">
		with child_order as (select parent_id, parent_rev_id, occ.rocc_threadu occ_thread, OCC.PORDER_NO order_no,  child_item.pItem_id child_id
		from
		(
		   select item.pItem_id parent_id, REVISION.PITEM_REVISION_ID parent_rev_id, STRREV.PUID parent_rev_puid, obj.pObject_type parent_rev_type, STRREV.PVALU_0 parent_rev_view_puid
		      from infodba.PSTRUCTURE_REVISIONS strRev
		            , infodba.ppsbomviewrevision bvr
		            , infodba.ppsbomview bv
		            , infodba.pworkspaceobject obj
		            , infodba.pItemRevision revision
		            , infodba.pItem item
		    where
		       STRREV.pvalu_0 = bvr.puid    --BOM view revision PUID
		       and bv.puid = bvr.rbom_viewu        --BOM view PUID
		       and STRREV.PUID = obj.puid
		       and STRREV.puid = revision.puid
		       and revision.rItems_tagu = item.puid
		       and item.pItem_id = #{PARENT_NO, jdbcType=VARCHAR}
		       and revision.pItem_revision_id = #{PARENT_REV, jdbcType=VARCHAR}
		) basic, infodba.PPSOCCURRENCE occ, infodba.pItem child_item
		where OCC.RPARENT_BVRU = basic.parent_rev_view_puid
		and OCC.RCHILD_ITEMU = child_item.puid
		)
		select * from  child_order where Order_no in (
		    select a.Order_no from child_order a group by Order_no having count(Order_no) > 1
		) order by parent_id, parent_rev_id	
   	</select>
   	
   	<select id="getMaxOrderNo" resultType="java.lang.String">
		select max(OCC.PORDER_NO) order_no
		from
		(
		   select item.pItem_id parent_id, REVISION.PITEM_REVISION_ID parent_rev_id, STRREV.PUID parent_rev_puid, obj.pObject_type parent_rev_type, STRREV.PVALU_0 parent_rev_view_puid
		      from infodba.PSTRUCTURE_REVISIONS strRev
		            , infodba.ppsbomviewrevision bvr
		            , infodba.ppsbomview bv
		            , infodba.pworkspaceobject obj
		            , infodba.pItemRevision revision
		            , infodba.pItem item
		    where
		       STRREV.pvalu_0 = bvr.puid    --BOM view revision PUID
		       and bv.puid = bvr.rbom_viewu        --BOM view PUID
		       and STRREV.PUID = obj.puid
		       and STRREV.puid = revision.puid
		       and revision.rItems_tagu = item.puid
		       and item.pItem_id = #{PARENT_NO, jdbcType=VARCHAR}
		       and revision.pItem_revision_id = #{PARENT_REV, jdbcType=VARCHAR}
		) basic, infodba.PPSOCCURRENCE occ, infodba.pItem child_item
		where OCC.RPARENT_BVRU = basic.parent_rev_view_puid
		and OCC.RCHILD_ITEMU = child_item.puid   	
   	</select>

   <select id="getInEcoFromECOBOMList" resultType="java.lang.String">
   
	   SELECT
	   		DISTINCT EB.ECO_NO
	   FROM 
	   		ECO_BOM_LIST EB
	   WHERE
	   			EB.PARENT_NO =  #{PARENT_NO}
	   		AND EB.PARENT_REV =  #{PARENT_REV}
	   		AND EB.NEW_PART_NO =  #{NEW_PART_NO}
	   		AND EB.NEW_PART_REV =  #{NEW_PART_REV}
   </select>   	
   
   <select id="getEcoEndItemCount" resultType="java.lang.String">
      select count(eco_no)
      from eco_bom_list
      where eco_no = #{ecoNo, jdbcType=VARCHAR}
      and epl_yn = 'Y'
      and new_part_no is not null
      and is_end_item(new_smode) = 'Y'
   </select> 

    <select id="getColorIDWarningList" resultType="java.util.HashMap">
        WITH eco_bom_list_parts AS (  
          select distinct eco_no, new_part_no, new_part_rev
          from eco_bom_list
          where eco_no = #{ecoNo, jdbcType=VARCHAR}
          and epl_yn = 'Y'
          and new_part_no is not null
        ) 
        select /*+ ordered */ eb.eco_no ECO_NO, it.pitem_id PART_NO, ir.pitem_revision_id PART_REV, vr.ps7_color COLOR_ID, vr.ps7_color_id COLOR_SECTION_NO
        from eco_bom_list_parts eb
           , infodba.pitem it
           , infodba.pitemrevision ir
           , infodba.ps7_vehpartrevision vr
           , infodba.pworkspaceobject wo
        where eb.new_part_no = it.pitem_id
        and it.puid = ir.ritems_tagu
        and ir.pitem_revision_id = eb.new_part_rev
        and ir.puid = vr.puid
        and vr.puid = wo.puid
        and wo.pactive_seq = 1
        and wo.pobject_type = 'S7_VehpartRevision'
        and vr.ps7_color != '.'
        and vr.ps7_color_id is null
	</select>

	<select id="getColorIDChangingList" resultType="java.util.HashMap">
	<![CDATA[
		SELECT DISTINCT
			   E.ECO_NO       ECO_NO,
		       E.OLD_PART_NO  OLD_PART_NO,
		       E.OLD_PART_REV OLD_PART_REV,
		       OV.PS7_COLOR   OLD_PART_COLOR_ID,
		       E.NEW_PART_NO  NEW_PART_NO,
		       E.NEW_PART_REV NEW_PART_REV,
		       NV.PS7_COLOR   NEW_PART_COLOR_ID
		  FROM ECO_BOM_LIST                E,
		       INFODBA.PITEM               OI,
		       INFODBA.PITEMREVISION       OIR,
		       INFODBA.PS7_VEHPARTREVISION OV,
		       INFODBA.PITEM               NI,
		       INFODBA.PITEMREVISION       NIR,
		       INFODBA.PS7_VEHPARTREVISION NV,
		       INFODBA.PWORKSPACEOBJECT    OIW,
		       INFODBA.PWORKSPACEOBJECT    NIW,
		       INFODBA.PWORKSPACEOBJECT    OIRW,
		       INFODBA.PWORKSPACEOBJECT    NIRW
		 WHERE E.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
		   AND E.EPL_YN = 'Y'
		   AND E.NEW_PART_TYPE = 'S7_Vehpart'
		   AND OLD_PART_NO IS NOT NULL
		   AND NEW_PART_NO IS NOT NULL
		   AND OI.PUID = OIW.PUID
		   AND NI.PUID = NIW.PUID
		   AND OIR.PUID = OIRW.PUID
		   AND NIR.PUID = NIRW.PUID
		   AND OIW.POBJECT_TYPE = 'S7_Vehpart'
		   AND NIW.POBJECT_TYPE = 'S7_Vehpart'
		   AND OIRW.POBJECT_TYPE = 'S7_VehpartRevision'
		   AND NIRW.POBJECT_TYPE = 'S7_VehpartRevision'
		   AND OIW.PACTIVE_SEQ = 1
		   AND NIW.PACTIVE_SEQ = 1
		   AND OIRW.PACTIVE_SEQ = 1
		   AND NIRW.PACTIVE_SEQ = 1
		   AND OI.PUID = OIR.RITEMS_TAGU
		   AND OIR.PUID = OV.PUID
		   AND NI.PUID = NIR.RITEMS_TAGU
		   AND NIR.PUID = NV.PUID
		   AND OI.PITEM_ID = E.OLD_PART_NO
		   AND OIR.PITEM_REVISION_ID = E.OLD_PART_REV
		   AND NI.PITEM_ID = E.NEW_PART_NO
		   AND NIR.PITEM_REVISION_ID = E.NEW_PART_REV
		   AND OV.PS7_COLOR <> NV.PS7_COLOR
	]]>
	</select>
	
   <update id="makeBOMHistoryMaster" statementType="CALLABLE">
   		{call PRC_BOM_HISTORY_MASTER(#{ECO_NO, jdbcType=VARCHAR})}
   </update>	   	
	
   <select id="isConnectedFunction" resultType="java.lang.String">
	   SELECT IS_CONNECTED_FUNCTION(#{PART_NO, jdbcType=VARCHAR}) FROM DUAL
   </select>
   
	<!-- [20240228] Oracle Version upgrade 로 인한 WM_CONCAT 을 LISTAGG 로 변경 -->
   <select id="getCarProjectInEPL" resultType="java.util.HashMap">
   <![CDATA[
	   WITH PROJECTS AS
		 (SELECT I.PITEM_ID PROJECT_CODE
		    FROM INFODBA.PITEM               I,
		         INFODBA.PITEMREVISION       IR,
		         INFODBA.PS7_PROJECTREVISION P
		   WHERE I.PUID = IR.RITEMS_TAGU
		     AND IR.PUID = P.PUID
		     AND P.PS7_VEHICLE_NO IS NOT NULL),
		EPLS AS
		 (SELECT DISTINCT E.NEW_PART_NO, E.NEW_PROJECT
		    FROM ECO_BOM_LIST E
		   WHERE SUBSTR(E.PARENT_NO, 1, 4) IN ('M010',
		                                       'M030',
		                                       'M050',
		                                       'M070',
		                                       'M090',
		                                       'M140',
		                                       'M150',
		                                       'M180',
		                                       'M200',
		                                       'M220')
		     AND E.PARENT_TYPE = 'S7_FunctionMast'
		     AND INSTR(E.NEW_SMODE, 'P') > 0
		     AND E.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
		     AND E.EPL_YN = 'Y'),
		SPLIT_EPLS AS
		 (SELECT DISTINCT E1.NEW_PART_NO, E2.NEW_PROJECT
		    FROM EPLS E1,
		         (SELECT DISTINCT REGEXP_SUBSTR(TO_CHAR(E.NEW_PROJECT),
		                                        '[^|]+',
		                                        1,
		                                        LEVEL) NEW_PROJECT
		            FROM (SELECT REPLACE(LISTAGG(DISTINCT T.NEW_PROJECT, ','), ',', '|') NEW_PROJECT
		                    FROM EPLS T) E
		          CONNECT BY LEVEL <=
		                     LENGTH(REGEXP_REPLACE(E.NEW_PROJECT, '[^|]+', '')) + 1) E2
		   WHERE INSTR('|' || REPLACE(E1.NEW_PROJECT, ',', '|') || '|',
		               '|' || E2.NEW_PROJECT || '|') > 0
		   ORDER BY E1.NEW_PART_NO),
		FILTER_EPLS AS
		 (SELECT SE.NEW_PART_NO,
		         CASE
		           WHEN SE.NEW_PROJECT NOT IN (SELECT * FROM PROJECTS) THEN
		            ''
		           ELSE
		            SE.NEW_PROJECT
		         END NEW_PROJECT
		    FROM SPLIT_EPLS SE)
		SELECT NEW_PART_NO, TO_CHAR(LISTAGG(DISTINCT(NEW_PROJECT), ',')) NEW_PROJECT
		  FROM FILTER_EPLS
		 GROUP BY NEW_PART_NO
   ]]>
   </select>
	<select id="getCANNOTGeneratedList" resultType="java.util.HashMap">
    <![CDATA[
		SELECT DISTINCT I.PITEM_ID PART_NO, IR.PITEM_REVISION_ID PART_REV
		  FROM INFODBA.PITEM            I,
		       INFODBA.PITEMREVISION    IR,
		       INFODBA.PWORKSPACEOBJECT W,
		       INFODBA.PITEM            EI,
		       INFODBA.PITEMREVISION    EIR
		 WHERE I.PUID = IR.RITEMS_TAGU
		   AND IR.PUID = W.PUID
		   AND W.PACTIVE_SEQ = 1
		   AND EI.PUID = EIR.RITEMS_TAGU
		   AND IR.RS7_ECO_NOU = EIR.PUID
		   AND LENGTH(I.PITEM_ID) > 9
       	   AND W.POBJECT_TYPE <> 'S7_FUNCTIONMASTREVISION'
		   AND I.PITEM_ID NOT LIKE '%WeldGroup%'
		   AND EI.PITEM_ID = #{ecoNo, jdbcType=VARCHAR}
		MINUS
		SELECT DISTINCT NEW_PART_NO PART_NO, NEW_PART_REV PART_REV
		  FROM ECO_BOM_LIST
		 WHERE EPL_YN = 'Y'
		   AND ECO_NO = #{ecoNo, jdbcType=VARCHAR}
	]]>
	</select>
	<select id="getCANNOTGeneratedReviseList" resultType="java.util.HashMap">
    <![CDATA[
		SELECT DISTINCT CUT_PART.OLD_PART_NO PART_NO
		  FROM (SELECT *
		          FROM ECO_BOM_LIST
		         WHERE ECO_NO = #{ecoNo, jdbcType=VARCHAR}
		           AND EPL_YN = 'Y'
		           AND CT = 'D'
		           AND NEW_PART_NO IS NULL) CUT_PART,
		       (SELECT *
		          FROM ECO_BOM_LIST
		         WHERE ECO_NO = #{ecoNo, jdbcType=VARCHAR}
		           AND EPL_YN = 'Y'
		           AND OLD_PART_NO IS NULL) PASTE_PART
		 WHERE CUT_PART.OLD_PART_NO = PASTE_PART.NEW_PART_NO
		   AND CUT_PART.OLD_PART_REV <> PASTE_PART.NEW_PART_REV
		   AND CUT_PART.OLD_PART_NO NOT IN
		       (SELECT DISTINCT T.OLD_PART_NO
		          FROM ECO_BOM_LIST T
		         WHERE T.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
		           AND T.EPL_YN = 'Y'
		           AND T.OLD_PART_NO IS NOT NULL
		           AND T.NEW_PART_NO IS NOT NULL
		           AND T.OLD_PART_NO = CUT_PART.OLD_PART_NO
		           AND T.NEW_PART_NO = PASTE_PART.NEW_PART_NO
		           AND T.OLD_PART_REV = CUT_PART.OLD_PART_REV
		           AND T.NEW_PART_REV = PASTE_PART.NEW_PART_REV
		           AND T.OLD_PART_REV <> T.NEW_PART_REV)
	]]>
	</select>
	<!-- [20240228] Oracle Version upgrade 로 인한 WM_CONCAT 을 LISTAGG 로 변경 -->
	<select id="searchECOCorrectionHistory" parameterType="SYMCECOStatusData" resultType="SYMCECOStatusData">
		SELECT E.PS7_ECR_NO ECRNO,
		       (SELECT TO_CHAR(LISTAGG(TE.PVAL_0, ','))
		          FROM INFODBA.PS7_ECI_NO TE
		         WHERE TE.PUID = ECI.PUID) ECINO,
		       I.PITEM_ID ECONO,
		       W.POBJECT_DESC ECOTITLE,
		       DECODE(E.PS7_ECO_MATURITY, NULL, 'In Work', E.PS7_ECO_MATURITY) ECOSTATUS,
		       G.PNAME OWNINGTEAM,
		       P.PUSER_NAME OWNINGUSER,
		       TO_CHAR(A.PCREATION_DATE + 9 / 24, 'YYYY-MM-DD') CREATEDATE,
		       TO_CHAR(TA.PCREATION_DATE + 9 / 24, 'YYYY-MM-DD') REQUESTDATE,
		       TO_CHAR(W.PDATE_RELEASED + 9 / 24, 'YYYY-MM-DD') REALSEDATE
		  FROM INFODBA.PS7_ECOREVISION         E,
		       INFODBA.PWORKSPACEOBJECT        W,
		       INFODBA.PPOM_APPLICATION_OBJECT A,
		       INFODBA.PITEM                   I,
		       INFODBA.PITEMREVISION           R,
		       INFODBA.PRELEASE_STATUS_LIST    RL,
		       INFODBA.PRELEASESTATUS          RS,
		       INFODBA.PPOM_GROUP              G,
		       INFODBA.PPOM_USER               O,
		       INFODBA.PUSER                   U,
		       INFODBA.PPERSON                 P,
		       INFODBA.PATTACHMENTS            T,
		       INFODBA.PPOM_APPLICATION_OBJECT TA,
		       INFODBA.PS7_ECI_NO              ECI,
		       (SELECT DISTINCT ECO_NO FROM ECO_EPL_CORRECTION) COR
		 WHERE E.PUID = W.PUID
		   AND W.PUID = A.PUID
		   AND E.PUID = R.PUID
		   AND R.RITEMS_TAGU = I.PUID
		   AND W.PACTIVE_SEQ = 1
		   AND R.PUID = RL.PUID(+)
		   AND RL.PVALU_0 = RS.PUID(+)
		   AND A.ROWNING_GROUPU = G.PUID
		   AND A.ROWNING_USERU = O.PUID
		   AND O.PUID = U.PUID
		   AND U.RPERSONU = P.PUID
		   AND W.PUID = T.PVALU_0(+)
		   AND T.PUID = TA.PUID(+)
		   AND R.PUID = ECI.PUID(+)
		   AND I.PITEM_ID = COR.ECO_NO
  		<if test="ecoNo != null">
    	   AND UPPER(I.PITEM_ID) LIKE #{ecoNo, jdbcType=VARCHAR}
  		</if>
  		<if test="ecoStatus != null">
    	   AND DECODE(E.PS7_ECO_MATURITY, NULL, 'In Work', E.PS7_ECO_MATURITY) = #{ecoStatus}
  		</if>
  		<if test="ecoStatus == null or ecoStatus == 'Completed'">
    	   AND DECODE(W.PDATE_RELEASED, NULL, '2013-05-04', TO_CHAR(W.PDATE_RELEASED + 9 / 24 ,'YYYY-MM-DD')) <![CDATA[>=]]> #{releaseDateFrom}
    	   AND DECODE(W.PDATE_RELEASED, NULL, '2013-05-04', TO_CHAR(W.PDATE_RELEASED + 9 / 24 ,'YYYY-MM-DD')) <![CDATA[<=]]> #{releaseDateTo}
		</if>
  		<if test="owningTeam != null">
    	   AND UPPER(G.PNAME) LIKE #{owningTeam}
  		</if>
  		<if test="owningUser != null">
    	   AND UPPER(P.PUSER_NAME) LIKE #{owningUser}
  		</if>
		 GROUP BY ECI.PUID,
		          E.PS7_ECR_NO,
		          I.PITEM_ID,
		          W.POBJECT_DESC,
		          DECODE(E.PS7_ECO_MATURITY, NULL, 'In Work', E.PS7_ECO_MATURITY),
		          G.PNAME,
		          P.PUSER_NAME,
		          TO_CHAR(A.PCREATION_DATE + 9 / 24, 'YYYY-MM-DD'),
		          TO_CHAR(TA.PCREATION_DATE + 9 / 24, 'YYYY-MM-DD'),
		          TO_CHAR(W.PDATE_RELEASED + 9 / 24, 'YYYY-MM-DD')
  		 ORDER BY I.PITEM_ID
	</select>
  
    <select id="getRefEcoFromPartList" resultType="java.util.HashMap">
        WITH ECO_SOL_ITEMS AS 
        (  
            SELECT /*+ ordered */ R.PUID, I.PITEM_ID, R.PITEM_REVISION_ID, ECO_NO
            FROM ECO_BOM_LIST B
               , INFODBA.PITEM I
               , INFODBA.PITEMREVISION R
               , INFODBA.PWORKSPACEOBJECT W
            WHERE B.ECO_NO = #{ecoNo, jdbcType=VARCHAR}
            AND B.EPL_YN = 'Y'
            AND B.NEW_PART_NO = I.PITEM_ID
            AND I.PUID = R.RITEMS_TAGU
            AND R.PITEM_REVISION_ID = B.NEW_PART_REV
            AND R.PUID = W.PUID
            AND W.PACTIVE_SEQ = '1'
            AND NOT EXISTS
                    (SELECT 1
                    FROM INFODBA.PRELEASE_STATUS_LIST RSL
                       , INFODBA.PRELEASESTATUS RS
                    WHERE RSL.PUID = R.PUID
                    AND RSL.PVALU_0 = RS.PUID
                    AND RS.PNAME IN ('S7_Released')
                    )
            GROUP BY R.PUID, PITEM_ID, PITEM_REVISION_ID, ECO_NO
        )
        SELECT SOL.PITEM_ID PART_NO , SOL.PITEM_REVISION_ID REV, PPI.PITEM_ID REF_ECO
        FROM INFODBA.PITEM PPI
           , INFODBA.PITEMREVISION PREV
           , ECO_SOL_ITEMS SOL
           , INFODBA.PIMANRELATION REL
           , INFODBA.PIMANTYPE REF_TYPE
        WHERE PPI.PUID = PREV.RITEMS_TAGU
        AND PREV.PUID = REL.RPRIMARY_OBJECTU
        AND REL.RSECONDARY_OBJECTU = SOL.PUID
        AND RRELATION_TYPEU = REF_TYPE.PUID
        AND REF_TYPE.PTYPE_NAME ='CMHasSolutionItem'
        AND PPI.PITEM_ID !=ECO_NO
    </select>
    
        <!-- 중복된 ECO 결재 선 -->
    <select id="getEcoDupApprovalLines" resultType="java.util.HashMap">
      WITH WL
           AS (SELECT TASK, USER_NAME, COUNT (TASK) CNT, MIN(SORT) SORT
                    FROM ECO_APPROVAL_LINE
                  WHERE ECO_NO = #{ecoNo, jdbcType=VARCHAR}
                  GROUP BY TASK, USER_NAME)
      SELECT * FROM WL
            WHERE WL.CNT > 1
              ORDER BY SORT   
    </select>
    <!-- 잘못된 Old Part 리스트 -->
    <select id="getOldRevNotMatchedParts" resultType="java.util.HashMap">
        WITH ECO_BOM_LIST_PARTS AS (  
            SELECT distinct OLD_PART_NO, OLD_PART_REV, NEW_PART_NO, NEW_PART_REV
            FROM ECO_BOM_LIST
            WHERE NEW_PART_NO = OLD_PART_NO
            AND NEW_PART_REV != OLD_PART_REV
            AND ECO_NO = #{ecoNo, jdbcType=VARCHAR}
            AND EPL_YN = 'Y'
        ), 
        DIST_PARTS AS (
            SELECT OLD_PART_NO, OLD_PART_REV
                 , GET_PRE_REVISION_ID (NEW_PART_NO, NEW_PART_REV) REAL_PRE_REV
                 , NEW_PART_REV
            FROM ECO_BOM_LIST_PARTS
        )
        SELECT OLD_PART_NO, OLD_PART_REV, REAL_PRE_REV, NEW_PART_REV
        FROM DIST_PARTS
        WHERE OLD_PART_REV != REAL_PRE_REV                      
    </select>
   <!-- CM ECO일 경우, 신규 Part 중 CM Part 의 수를 확인하여 CM Part 가 아닌 Part 가 있는지 확인한다.  -->
   <select id="getPartCountNotCM" resultType="int" >
    SELECT COUNT(*) CNT FROM ECO_BOM_LIST B , INFODBA.PITEM PI, INFODBA.PITEMREVISION PREV
        WHERE PI.PUID = PREV.RITEMS_TAGU
            AND PI.PITEM_ID = B.NEW_PART_NO
            AND PREV.PITEM_REVISION_ID = B.NEW_PART_REV
            --AND PREV.PS7_PROJECT_CODE !=B.NEW_PROJECT 
            AND B.CT IN ('N1','N2') 
            AND B.NEW_PROJECT IS NOT NULL
            AND PREV.PS7_PROJECT_CODE !=#{PROJECT_CODE, jdbcType=VARCHAR}  
            AND B.ECO_NO =#{ECO_NO, jdbcType=VARCHAR}    
   </select>
   
   <!--[20170613][ljg] OrderNo 중복 체크를 위한 로직 -->
   <select id="duplicateOrderNoCheck" resultType="java.util.HashMap" >
       with parentList as (   
          SELECT DISTINCT PARENT_NO, parent_rev
          FROM ECO_BOM_LIST
          WHERE EPL_YN = 'Y'
          AND ECO_NO = #{ecoNo, jdbcType=VARCHAR}
      )
      select i.pitem_id parent_id, occ.porder_no order_no
      from parentList pl
         , infodba.pitem i
         , infodba.pitemrevision ir
         , infodba.pstructure_revisions sr
         , infodba.ppsbomviewrevision bvr
         , infodba.ppsoccurrence occ
         , infodba.pworkspaceobject wo
      where i.puid = ir.ritems_tagu
      and ir.puid = sr.puid
      and sr.pvalu_0 = bvr.puid
      and bvr.puid = occ.rparent_bvru
      and ir.puid = wo.puid
      and wo.pactive_seq = 1
      and i.pitem_id = pl.parent_no
      and ir.pitem_revision_id = pl.parent_rev
      group by i.pitem_id, occ.porder_no HAVING COUNT(*) > 1
   </select>
   
   <!--[20170613][ljg] ECO의 EPL을 가져옴 -->
   <select id="getECOEPL" resultType="java.lang.String" >
       SELECT DISTINCT PARENT_NO
		  FROM ECO_BOM_LIST
		 WHERE EPL_YN = 'Y'
		   AND ECO_NO = #{ecoNo, jdbcType=VARCHAR}
   </select>
   
    <!--[SR170828-015][LJG]Chassis module 관리를 위한 검증 조건 추가 요청
      // 1. ECO 내의 Part S/mode : P7YP8, C0YP8, P7CP8, P7UP8, PDYP8, P7
      // 2. Module code : FCM or RCM
      // 3. Part의 Option : Z999을 포함하는 경우 -->
    <select id="checkChassisModule" resultType="java.lang.String">
     SELECT NEW_PART_NO FROM ECO_BOM_LIST
        WHERE ECO_NO = #{ECO_NO, jdbcType=VARCHAR}
		AND NEW_SMODE IN('P7YP8', 'C0YP8', 'P7CP8', 'P7UP8', 'PDYP8', 'P7')
        AND NEW_MCODE IN('FCM', 'RCM')
        AND NEW_VC LIKE '%Z999%'
		AND NEW_PART_TYPE IN ('S7_Vehpart','S7_Stdpart')
        AND EPL_YN = 'Y'
   </select>
   
   <update id="updateStep">
    <![CDATA[
      MERGE INTO eco_step_process_log
      USING dual
      ON (ECO_NO = #{ECONO, jdbcType=VARCHAR})
      WHEN MATCHED THEN
      UPDATE
      SET ${STEP} = #{STEPNAME, jdbcType=VARCHAR} || '' || to_char(sysdate,'yyyymmddhh24miss')
      WHEN NOT MATCHED THEN
      INSERT (ECO_NO, ${STEP})
      VALUES (#{ECONO, jdbcType=VARCHAR},  #{STEPNAME, jdbcType=VARCHAR} || '' ||to_char(sysdate,'yyyymmddhh24miss'))
    ]]>
   </update>
   
	<!-- [20240228] Oracle Version upgrade 로 인한 WM_CONCAT 을 LISTAGG 로 변경 -->
   <select id="getNMCDUpdatePartList" resultType="java.lang.String">
        select to_char(LISTAGG(distinct new_part_no, ','))
        from eco_bom_list
        where eco_no = #{ECO_NO, jdbcType=VARCHAR}
        and epl_yn = 'Y'
        and ct != 'D'
        and new_part_no is not null
        and new_part_type != 'S7_FunctionMast'
        and nvl(old_part_no,'1') != nvl(new_part_no,'1')
        <if test="PRJ_CD != null">
             <foreach item="item" index="index" collection="PRJ_CD" open="and (" separator="or" close=")" >
                instr (new_project ,#{item}) > 0
             </foreach>
        </if>
    </select>
    
    <select id="getAdmin" resultType="java.lang.String">
        select value
        from custom_web_env 
        where key='PLM_ADMIN'
    </select>
    
    <select id="getProjectCodeList" resultType="java.util.HashMap">
        select ir.ps7_project_code project_code
        from infodba.ps7_productrevision pr
           , infodba.pitem i
           , infodba.pitemrevision ir
        where ir.puid = pr.puid
        and i.puid = ir.ritems_tagu
        and i.pitem_id in (select column_value from table(pkg_name_group.get_preferences('SYMC_Selected_Product_NMCD')))
    </select>
    
    <!--[20190220][csh] function에 연결되지 않은 ECO Part list 구하는 로직 -->
   <select id="notConnectedFunctionList" resultType="java.util.HashMap" >
          with eco_new_part as
          (
              select distinct new_part_no, new_part_rev
              from eco_bom_list
              where eco_no = #{ecoNo, jdbcType=VARCHAR}
              and epl_yn = 'Y'
              and new_part_no is not null
              and new_part_type != 'S7_Function'
          )
          select new_part_no part_no, new_part_rev part_rev, is_connected_functions(new_part_no,new_part_rev,'Y') func_conn_yn
          from eco_new_part
   </select>
    
	<!--  
	 * [20230406][CF-3876] 기술관리팀 이보현 책임, 안추은 책임 요청
	 * #1. Vehicle ECO에 파워트레인 프로젝트가 존재 유무 체크 
	 * #2. Vehicle ECO(차량 ECO)의 EPL Proj속성에 파워트레인 프로젝트 존재시 오류 처리 
	 * #3. 파워트레인 프로젝트는 Power Traing ECO(엔진 ECO)로 작업 해야한다.
	 * ECO 결재 요청 시 차량 ECO번호를 채번하고 엔진이나 미션 파트를 추가한 경우 error 가 나옴.
	 */ 
	 -->
   <select id="checkPowerTraing" resultType="java.util.HashMap">
		WITH A AS (
		    SELECT DISTINCT NEW_PROJECT
		    FROM   ECO_BOM_LIST EPL,
		           INFODBA.PITEM I,
		           INFODBA.PITEMREVISION R,
		           INFODBA.PS7_ECOREVISION ECOR,
		           INFODBA.PWORKSPACEOBJECT WSO
		    WHERE  EPL.ECO_NO = I.PITEM_ID
		    AND    I.PUID = R.RITEMS_TAGU
		    AND    R.PUID = ECOR.PUID
		    AND    R.PUID = WSO.PUID
		    AND    ECOR.PS7_ECO_KIND = 'V'
		    AND    ECO_NO = #{ecoNo, jdbcType=VARCHAR}
			), PJTTABLE AS (
			    SELECT DISTINCT TRIM(REGEXP_SUBSTR(NEW_PROJECT, '[^,]+', 1, LEVEL)) PJT
			    FROM   A
			    CONNECT BY REGEXP_SUBSTR(NEW_PROJECT, '[^,]+', 1, LEVEL ) IS NOT NULL
			)
			SELECT DECODE(COUNT(*), 0, 'pass', 'error') CHECK_ENGINE_PART
			FROM   PJTTABLE
			WHERE  PJT IN (
		        SELECT D.PVAL_0 AS ENGINCODE
		        FROM   INFODBA.PLOV_VALUES_3 V, INFODBA.PLOV_VALUE_DESCRIPTIONS_3 D,
		               (SELECT PUID FROM INFODBA.PLISTOFVALUESSTRING WHERE PUID = (SELECT PUID FROM INFODBA.PLISTOFVALUES WHERE PLOV_NAME = 'S7_PRODUCT_CODE')) LOV
		        WHERE  V.PUID = LOV.PUID AND D.PUID = LOV.PUID AND V.PSEQ = D.PSEQ
		        )
   </select>
   
   <select id="getYear" resultType="java.lang.String"> 
	SELECT TO_CHAR(IRW.PDATE_RELEASED + 9/24, 'YYYY') AS YEAR  
        FROM INFODBA.PITEM I                               
        , INFODBA.PITEMREVISION IR                         
        , INFODBA.PWORKSPACEOBJECT IRW                     
        , INFODBA.PS7_ECOREVISION ECO                      
        WHERE ECO.PS7_ECO_MATURITY = 'Completed'           
        AND ECO.PUID = IR.PUID                             
        AND IRW.PUID = IR.PUID                             
        AND IR.RITEMS_TAGU = I.PUID                        
        GROUP BY TO_CHAR(IRW.PDATE_RELEASED + 9/24, 'YYYY')
      ORDER BY YEAR DESC         
   	</select>  
    
    <select id="getPlantList" resultType="java.util.HashMap">
	   	SELECT V.PVAL_0 AS PLANT_CODE                 
	             , V.PSEQ AS PLANT_SEQ                    
	             , DECODE(D.PVAL_0,'Y400','G4-REXTON','C300','KORANDO','Q200','REXTON SPORTS',D.PVAL_0) AS PLANT_DESC                 
	          FROM infodba.PLISTOFVALUES L                
	             , infodba.PLOV_VALUE_DESCRIPTIONS_3 D    
	             , infodba.PLOV_VALUES_3 V                
	        WHERE L.PLOV_NAME LIKE 'S7_VEHICLE_NO'        
	          AND L.puid = V.PUID                         
	          AND D.PSEQ = V.PSEQ                         
	          AND D.PVAL_0 IN ('TIVOLI', 'Y400', 'C300', 'Q200', 'E100', 'J100')                         
	     ORDER BY V.PSEQ      
	</select>  
	
	<select id="getAnnualReport" resultType="java.util.HashMap">
       SELECT X.VEHICLE_NO, DECODE(X.VEHICLE_NAME,'Y400','G4-REXTON','C300','KORANDO','Q200','REXTON SPORTS',X.VEHICLE_NAME) AS VEHICLE_NAME, X.VEHICLE_SEQ                                       
            , X.MON                                                                             
            , X.ECO_CNT, Y.EITEM_CNT                                                            
         FROM (                                                                                 
                SELECT SUBSTR(Y1.ECO_NO, 1, 2) AS VEHICLE_NO                                    
                     , LOV.VEHICLE_DESC AS VEHICLE_NAME                                         
                     , LOV.VEHICLE_SEQ                                                          
                     , TO_CHAR(Y1.PDATE_RELEASED + 9/24, 'MM') AS MON                           
                     , SUM(EITEM_CNT) AS EITEM_CNT                                              
                  FROM (                                                                        
                        SELECT EA.ECO_NO AS ECO_NO                                              
                             , IRW.PDATE_RELEASED AS PDATE_RELEASED                             
                             , COUNT(DISTINCT EA.NEW_PART_NO) AS EITEM_CNT                      
                          FROM ECO_BOM_LIST EA                                                  
                             , INFODBA.PITEM I                                                  
                             , INFODBA.PITEMREVISION IR                                         
                             , INFODBA.PWORKSPACEOBJECT IRW                                     
                             , INFODBA.PS7_ECOREVISION ECO                                      
                        WHERE ECO.PUID = IR.PUID                                                
                          AND ECO.PS7_ECO_MATURITY = 'Completed'                                
                          AND ECO.PS7_ECO_KIND = 'V'                                            
                          AND IRW.PUID = IR.PUID                                                
                          AND IRW.PACTIVE_SEQ = 1                                               
                          AND TO_CHAR(IRW.PDATE_RELEASED + 9/24, 'YYYY') = #{year, jdbcType=VARCHAR}                    
                          AND IR.RITEMS_TAGU = I.PUID                                           
                          AND I.PITEM_ID = EA.ECO_NO                                            
                          AND EA.CT IN ('N1', 'N2', 'F1', 'F2', 'R0', 'R1')                     
                          AND EA.NEW_SMODE IN ('P7', 'PD', 'P7MP8', 'PDMP8', 'P7CP8', 'P1',     
                                               'C0 P7', 'C1', 'C1 P7', 'C7', 'C7 P7', 'CD')     
                     GROUP BY EA.ECO_NO                                                         
                            , IRW.PDATE_RELEASED                                                
                        ) Y1                                                                    
                     , (  SELECT V.PVAL_0 AS VEHICLE_NO                                         
                               , V.PSEQ AS VEHICLE_SEQ                                          
                               , D.PVAL_0 AS VEHICLE_DESC                                       
                            FROM infodba.PLISTOFVALUES L                                        
                               , infodba.PLOV_VALUE_DESCRIPTIONS_3 D                            
                               , infodba.PLOV_VALUES_3 V                                        
                          WHERE L.PLOV_NAME LIKE 'S7_VEHICLE_NO'                                
                            AND L.puid = D.PUID                                                 
                            AND L.puid = V.PUID                                                 
                            AND D.PSEQ = V.PSEQ                                                 
                       ) LOV                                                                    
                 WHERE SUBSTR(Y1.ECO_NO, 1, 2) = LOV.VEHICLE_NO                                 
              GROUP BY SUBSTR(Y1.ECO_NO, 1, 2)                                                  
                     , LOV.VEHICLE_DESC                                                         
                     , LOV.VEHICLE_SEQ                                                          
                     , TO_CHAR(Y1.PDATE_RELEASED + 9/24, 'MM')                                  
              ) Y                                                                               
            , (                                                                                 
                SELECT SUBSTR(I.PITEM_ID, 1, 2) AS VEHICLE_NO                                   
                     , LOV.VEHICLE_DESC AS VEHICLE_NAME                                         
                     , LOV.VEHICLE_SEQ                                                          
                     , TO_CHAR(IRW.PDATE_RELEASED + 9/24, 'MM') AS MON                          
                     , COUNT(I.PITEM_ID) AS ECO_CNT                                             
                  FROM INFODBA.PITEM I                                                          
                     , INFODBA.PITEMREVISION IR                                                 
                     , INFODBA.PWORKSPACEOBJECT IRW                                             
                     , INFODBA.PS7_ECOREVISION ECO                                              
                     , (  SELECT V.PVAL_0 AS VEHICLE_NO                                         
                               , V.PSEQ AS VEHICLE_SEQ                                          
                               , D.PVAL_0 AS VEHICLE_DESC                                       
                            FROM infodba.PLISTOFVALUES L                                        
                               , infodba.PLOV_VALUE_DESCRIPTIONS_3 D                            
                               , infodba.PLOV_VALUES_3 V                                        
                          WHERE L.PLOV_NAME LIKE 'S7_VEHICLE_NO'                                
                            AND L.puid = D.PUID                                                 
                            AND L.puid = V.PUID                                                 
                            AND D.PSEQ = V.PSEQ                                                 
                       ) LOV                                                                    
                 WHERE ECO.PUID = IR.PUID                                                       
                   AND ECO.PS7_ECO_MATURITY = 'Completed'                                       
                   AND ECO.PS7_ECO_KIND = 'V'                                                   
                   AND IRW.PUID = IR.PUID                                                       
                   AND IRW.PACTIVE_SEQ = 1                                                      
                   AND IR.RITEMS_TAGU = I.PUID                                                  
                   AND SUBSTR(I.PITEM_ID, 1, 2) = LOV.VEHICLE_NO                                
                   AND TO_CHAR(IRW.PDATE_RELEASED + 9/24, 'YYYY') = #{year, jdbcType=VARCHAR}                           
              GROUP BY SUBSTR(I.PITEM_ID, 1, 2)                                                 
                     , LOV.VEHICLE_DESC                                                         
                     , LOV.VEHICLE_SEQ                                                          
                     , TO_CHAR(IRW.PDATE_RELEASED + 9/24, 'MM')                                 
              ) X                                                                               
          WHERE X.VEHICLE_NO = Y.VEHICLE_NO (+)                                                 
            AND X.VEHICLE_NAME = Y.VEHICLE_NAME (+)                                             
            AND X.VEHICLE_SEQ = Y.VEHICLE_SEQ (+)                                               
            AND X.MON = Y.MON (+)                                                               
       ORDER BY VEHICLE_SEQ, MON                  
	</select>
	
</mapper>