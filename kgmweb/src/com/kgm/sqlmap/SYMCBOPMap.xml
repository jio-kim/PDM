<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.kgm.mapper.SYMCBOPMapper">

	<resultMap id="EndItemDataMap" type="EndItemData">
		<result property="pitem_id" column="PITEM_ID" />
		<result property="pitem_revision_id" column="PITEM_REVISION_ID" />
		<result property="occ_puid" column="OCC_PUID" />
		<result property="occ_threadu" column="OCC_THREADU" />
		<result property="citem_id" column="CITEM_ID" />
		<result property="citem_revision_id" column="CITEM_REVISION_ID" />
		<result property="cobject_type" column="POBJECT_TYPE" />
		<result property="ebom_item_id" column="EBOM_ITEM_ID" />
	</resultMap>
<!-- 
  <select id="findReplacedEndItems" parameterType="java.lang.String" resultType="EndItemData">
    SELECT *
      FROM (
         SELECT PI.PITEM_ID, PREV.PITEM_REVISION_ID, CWSO.POBJECT_TYPE, OT.PNAME, CI.PITEM_ID CITEM_ID, POCC.PUID OCC_PUID 
         , POCC.ROCC_THREADU OCC_THREADU
         , (
            SELECT CREV.PITEM_REVISION_ID
            FROM INFODBA.PITEMREVISION CREV
            WHERE CI.PUID = CREV.RITEMS_TAGU
            AND EXISTS (
               SELECT 1
               FROM INFODBA.PRELEASE_STATUS_LIST PSL, INFODBA.PRELEASESTATUS PST
               WHERE PSL.PUID = CREV.PUID
               AND PSL.PVALU_0 = PST.PUID)
               AND CREV.PITEM_REVISION_ID IN (
                  SELECT DISTINCT MAX(MAX_REV.PITEM_REVISION_ID)
                  FROM INFODBA.PITEMREVISION MAX_REV
                  WHERE MAX_REV.RITEMS_TAGU = CREV.RITEMS_TAGU)
         ) CITEM_REVISION_ID
         , (
            SELECT PNCI.PITEM_ID
            FROM INFODBA.PIMANRELATION PREL, INFODBA.PMEAPPEARANCEPATHNODE PNODE, INFODBA.PMEAPPEARANCEPATHROOT PROOT,
            INFODBA.PITEM RI, INFODBA.PPSOCCURRENCE PNODEOCC, INFODBA.PITEM PNCI, INFODBA.PSTRUCTURE_REVISIONS PNSTR,
            INFODBA.PITEMREVISION PNPREV, INFODBA.PITEM PNPI
            WHERE POCC.PUID = PREL.RPRIMARY_OBJECTU
            AND PREL.RSECONDARY_OBJECTU = PNODE.PUID
            AND PNODE.RPATH_ROOTU = PROOT.PUID
            AND PROOT.RTRACKED_ITEMU = RI.PUID
            AND RI.PITEM_ID = #{productId, jdbcType=VARCHAR}
            AND PNODE.ROCC_THREADU = PNODEOCC.ROCC_THREADU
            AND PNODEOCC.RCHILD_ITEMU = PNCI.PUID
            AND PNODEOCC.RPARENT_BVRU = PNSTR.PVALU_0
            AND PNSTR.PUID = PNPREV.PUID
            AND PNPREV.RITEMS_TAGU = PNPI.PUID
            AND PNPREV.PITEM_REVISION_ID IN ( 
            	 SELECT DISTINCT MAX(MAX_REV.PITEM_REVISION_ID)
               FROM INFODBA.PITEMREVISION MAX_REV
               WHERE MAX_REV.RITEMS_TAGU = PNPREV.RITEMS_TAGU
            )
         ) EBOM_ITEM_ID
         FROM INFODBA.PITEM PI, INFODBA.PITEMREVISION PREV, INFODBA.PSTRUCTURE_REVISIONS PSTR, INFODBA.PPSOCCURRENCE POCC,
         INFODBA.PITEM CI, INFODBA.PWORKSPACEOBJECT CWSO, INFODBA.PPSOCCURRENCETYPE OT, infodba.pworkspaceobject pwso
         WHERE PI.PUID = PREV.RITEMS_TAGU
         AND PI.PUID = PWSO.PUID
         AND PREV.PUID = PSTR.PUID
         AND PSTR.PVALU_0 = POCC.RPARENT_BVRU
         AND POCC.RCHILD_ITEMU = CI.PUID
         AND POCC.ROCC_TYPEU = OT.PUID(+)
         AND CI.PUID = CWSO.PUID
	     START WITH PI.PUID = #{targetUid, jdbcType=VARCHAR}
	     CONNECT BY PRIOR CI.PUID = PI.PUID
	                AND (OT.PNAME IS NULL OR OT.PNAME = 'MEConsumed')
	                AND PWSO.POBJECT_TYPE IN ('M7_BOPShop', 'M7_BOPLine', 'M7_BOPStation', 'M7_BOPBodyOp', 'M7_BOPAssyOp', 'M7_BOPPaintOp'))
	     WHERE CITEM_ID != EBOM_ITEM_ID
	     ORDER BY PITEM_ID
	</select>
   -->
  
  <!-- 
    <select id="findReplacedEndItems" parameterType="java.lang.String" resultType="EndItemData">
      SELECT *
      FROM (
         SELECT PI.PITEM_ID, PREV.PITEM_REVISION_ID, CWSO.POBJECT_TYPE, OT.PNAME, CI.PITEM_ID CITEM_ID, POCC.PUID OCC_PUID 
         , POCC.ROCC_THREADU OCC_THREADU
         , (
            SELECT CREV.PITEM_REVISION_ID
            FROM INFODBA.PITEMREVISION CREV
            WHERE CI.PUID = CREV.RITEMS_TAGU
            AND EXISTS(   
               SELECT MAX(CREV.PITEM_REVISION_ID)
               FROM INFODBA.PRELEASE_STATUS_LIST PSL, INFODBA.PRELEASESTATUS PST
               WHERE PSL.PUID = CREV.PUID
               AND PSL.PVALU_0 = PST.PUID
            )
         ) CITEM_REVISION_ID
         , (
            SELECT PNCI.PITEM_ID
            FROM INFODBA.PIMANRELATION PREL, INFODBA.PMEAPPEARANCEPATHNODE PNODE, INFODBA.PMEAPPEARANCEPATHROOT PROOT,
            INFODBA.PITEM RI, INFODBA.PPSOCCURRENCE PNODEOCC, INFODBA.PITEM PNCI, INFODBA.PSTRUCTURE_REVISIONS PNSTR,
            INFODBA.PITEMREVISION PNPREV, INFODBA.PITEM PNPI
            WHERE POCC.PUID = PREL.RPRIMARY_OBJECTU
            AND PREL.RSECONDARY_OBJECTU = PNODE.PUID
            AND PNODE.RPATH_ROOTU = PROOT.PUID
            AND PROOT.RTRACKED_ITEMU = RI.PUID
            AND RI.PITEM_ID = #{productId, jdbcType=VARCHAR}
            AND PNODE.ROCC_THREADU = PNODEOCC.ROCC_THREADU
            AND PNODEOCC.RCHILD_ITEMU = PNCI.PUID
            AND PNODEOCC.RPARENT_BVRU = PNSTR.PVALU_0
            AND PNSTR.PUID = PNPREV.PUID
            AND PNPREV.RITEMS_TAGU = PNPI.PUID
            AND PNPREV.PITEM_REVISION_ID IN (
               SELECT DISTINCT MAX(MAX_REV.PITEM_REVISION_ID)
               FROM INFODBA.PITEMREVISION MAX_REV
               WHERE MAX_REV.RITEMS_TAGU = PNPREV.RITEMS_TAGU
            )
            AND EXISTS(
               SELECT 1
               FROM INFODBA.PRELEASE_STATUS_LIST PSL, INFODBA.PRELEASESTATUS PST
               WHERE PSL.PUID = PNPREV.PUID
               AND PSL.PVALU_0 = PST.PUID
            )
         ) EBOM_ITEM_ID
	        , (
	          SELECT PNODE.RABS_OCCU
	          FROM INFODBA.PIMANRELATION PREL, INFODBA.PMEAPPEARANCEPATHNODE PNODE, INFODBA.PMEAPPEARANCEPATHROOT PROOT,
	          INFODBA.PITEM RI, INFODBA.PPSOCCURRENCE PNODEOCC, INFODBA.PITEM PNCI, INFODBA.PSTRUCTURE_REVISIONS PNSTR,
	          INFODBA.PITEMREVISION PNPREV, INFODBA.PITEM PNPI
	          WHERE POCC.PUID = PREL.RPRIMARY_OBJECTU
	          AND PREL.RSECONDARY_OBJECTU = PNODE.PUID
	          AND PNODE.RPATH_ROOTU = PROOT.PUID
	          AND PROOT.RTRACKED_ITEMU = RI.PUID
	          AND RI.PITEM_ID = #{productId1, jdbcType=VARCHAR}
	          AND PNODE.ROCC_THREADU = PNODEOCC.ROCC_THREADU
	          AND PNODEOCC.RCHILD_ITEMU = PNCI.PUID
	          AND PNODEOCC.RPARENT_BVRU = PNSTR.PVALU_0
	          AND PNSTR.PUID = PNPREV.PUID
	          AND PNPREV.RITEMS_TAGU = PNPI.PUID
	          AND PNPREV.PITEM_REVISION_ID = ( SELECT DISTINCT MAX(REV.PITEM_REVISION_ID)
	                                             FROM INFODBA.pitem pi
	                                                , INFODBA.PRELEASE_STATUS_LIST PSL
	                                                , INFODBA.PRELEASESTATUS PST
	                                                , INFODBA.PITEMREVISION rev
	                                             WHERE pi.puid = PNPI.PUID
	                                               AND pi.puid = REV.RITEMS_TAGU
	                                               AND PSL.PUID = REV.PUID
	                                               AND PSL.PVALU_0 = PST.PUID 
	                                          )
	     ) EBOM_ABS_OCC_ID
         FROM INFODBA.PITEM PI, INFODBA.PITEMREVISION PREV, INFODBA.PSTRUCTURE_REVISIONS PSTR, INFODBA.PPSOCCURRENCE POCC,
         INFODBA.PITEM CI, INFODBA.PWORKSPACEOBJECT CWSO, INFODBA.PPSOCCURRENCETYPE OT, infodba.pworkspaceobject pwso
         WHERE PI.PUID = PREV.RITEMS_TAGU
         AND PI.PUID = PWSO.PUID
         AND PREV.PUID = PSTR.PUID
         AND PSTR.PVALU_0 = POCC.RPARENT_BVRU
         AND POCC.RCHILD_ITEMU = CI.PUID
         AND POCC.ROCC_TYPEU = OT.PUID(+)
         AND CI.PUID = CWSO.PUID
       START WITH PI.PUID = #{targetUid, jdbcType=VARCHAR}
       CONNECT BY PRIOR CI.PUID = PI.PUID
                  AND (OT.PNAME IS NULL OR OT.PNAME = 'MEConsumed')
                  AND PWSO.POBJECT_TYPE IN ('M7_BOPShop', 'M7_BOPLine', 'M7_BOPStation', 'M7_BOPBodyOp', 'M7_BOPAssyOp', 'M7_BOPPaintOp'))
       WHERE CITEM_ID != EBOM_ITEM_ID
       ORDER BY PITEM_ID
  </select>
   -->
   

    <select id="findReplacedEndItems" parameterType="java.lang.String" resultType="EndItemData">
    
      SELECT *
      FROM (
         SELECT PI.PITEM_ID, PREV.PITEM_REVISION_ID, CWSO.POBJECT_TYPE, OT.PNAME, CI.PITEM_ID CITEM_ID, POCC.PUID OCC_PUID 
         , POCC.ROCC_THREADU OCC_THREADU
         , (
            SELECT CREV.PITEM_REVISION_ID
            FROM INFODBA.PITEMREVISION CREV
            WHERE CI.PUID = CREV.RITEMS_TAGU
            AND CREV.PITEM_REVISION_ID = ( SELECT DISTINCT MAX(REV.PITEM_REVISION_ID)
                                                   FROM INFODBA.pitem pi
                                                      , INFODBA.PRELEASE_STATUS_LIST PSL
                                                      , INFODBA.PRELEASESTATUS PST
                                                      , INFODBA.PITEMREVISION rev
                                                   WHERE pi.puid = CI.PUID
                                                     AND pi.puid = REV.RITEMS_TAGU
                                                     AND PSL.PUID = REV.PUID
                                                     AND PSL.PVALU_0 = PST.PUID 
                                         )
         ) CITEM_REVISION_ID
         , (
            SELECT PNCI.PITEM_ID
            FROM INFODBA.PIMANRELATION PREL, INFODBA.PMEAPPEARANCEPATHNODE PNODE, INFODBA.PMEAPPEARANCEPATHROOT PROOT,
            INFODBA.PITEM RI, INFODBA.PPSOCCURRENCE PNODEOCC, INFODBA.PITEM PNCI, INFODBA.PSTRUCTURE_REVISIONS PNSTR,
            INFODBA.PITEMREVISION PNPREV, INFODBA.PITEM PNPI
            WHERE POCC.PUID = PREL.RPRIMARY_OBJECTU
            AND PREL.RSECONDARY_OBJECTU = PNODE.PUID
            AND PNODE.RPATH_ROOTU = PROOT.PUID
            AND PROOT.RTRACKED_ITEMU = RI.PUID
            AND RI.PITEM_ID = #{productId, jdbcType=VARCHAR}
            AND PNODE.ROCC_THREADU = PNODEOCC.ROCC_THREADU
            AND PNODEOCC.RCHILD_ITEMU = PNCI.PUID
            AND PNODEOCC.RPARENT_BVRU = PNSTR.PVALU_0
            AND PNSTR.PUID = PNPREV.PUID
            AND PNPREV.RITEMS_TAGU = PNPI.PUID
             AND PNPREV.PITEM_REVISION_ID = ( SELECT DISTINCT MAX(REV.PITEM_REVISION_ID)
                                               FROM INFODBA.pitem pi
                                                  , INFODBA.PRELEASE_STATUS_LIST PSL
                                                  , INFODBA.PRELEASESTATUS PST
                                                  , INFODBA.PITEMREVISION rev
                                               WHERE pi.puid = PNPI.PUID
                                                 AND pi.puid = REV.RITEMS_TAGU
                                                 AND PSL.PUID = REV.PUID
                                                 AND PSL.PVALU_0 = PST.PUID 
                                            )
         ) EBOM_ITEM_ID
         FROM INFODBA.PITEM PI, INFODBA.PITEMREVISION PREV, INFODBA.PSTRUCTURE_REVISIONS PSTR, INFODBA.PPSOCCURRENCE POCC,
         INFODBA.PITEM CI, INFODBA.PWORKSPACEOBJECT CWSO, INFODBA.PPSOCCURRENCETYPE OT, infodba.pworkspaceobject pwso
         WHERE PI.PUID = PREV.RITEMS_TAGU
         AND PI.PUID = PWSO.PUID
         AND PREV.PUID = PSTR.PUID
         AND PSTR.PVALU_0 = POCC.RPARENT_BVRU
         AND POCC.RCHILD_ITEMU = CI.PUID
         AND POCC.ROCC_TYPEU = OT.PUID(+)
         AND CI.PUID = CWSO.PUID
       START WITH PI.PUID = #{targetUid, jdbcType=VARCHAR}
       CONNECT BY PRIOR CI.PUID = PI.PUID
                  AND (OT.PNAME IS NULL OR OT.PNAME = 'MEConsumed')
                  AND PWSO.POBJECT_TYPE IN ('M7_BOPShop', 'M7_BOPLine', 'M7_BOPStation', 'M7_BOPBodyOp', 'M7_BOPAssyOp', 'M7_BOPPaintOp'))
       WHERE CITEM_ID != EBOM_ITEM_ID
       ORDER BY PITEM_ID
        
  </select>

	<!-- 
	   SoaWeb에서 EndItemList 조회시 
	   Mbom 과 Ebom 의 모든 EndItem을 조회 하여야 하나 속도가 너무 느려 
	   개선된 쿼리를 적용한 메서드 
   -->
   <select id="findReplacedRootEndItems" parameterType="java.lang.String" resultType="EndItemData">
    
      WITH MBOM AS( 

         SELECT    PI.PITEM_ID  PARENT_ID
                 , pir.PITEM_REVISION_ID
                 , CI.PITEM_ID  CITEM_ID
                 , cir.PITEM_REVISION_ID  CHILD_ITEM_REV
                 , CI.PUID    CHILD_ITEM_PUID
                 , CIRW.POBJECT_TYPE CHILD_OBJECT_TYPE
                 , occ.PUID  PARENT_OCC_PUID
                 , occ.POCCURRENCE_NAME
                 , occ.ROCC_TYPEU PARENT_OCC_TYPE
                 , occ.ROCC_THREADU OCC_THREADU
                 , OT.PNAME  OCC_TYPE_NAME
                 , pirw.POBJECT_TYPE POBJECT_TYPE
                 , occ.rparent_bvru
                 , CIW.POBJECT_TYPE PARENT_OBJECT_TYPE
       	    FROM infodba.pitem pi
               , infodba.pitemrevision pir
               , infodba.pworkspaceobject pirw
               , infodba.pstructure_revisions psr
               , infodba.ppsbomviewrevision pbvr
               , infodba.ppsbomview pbv
               , infodba.ppsviewtype vt
               , infodba.ppsoccurrence occ
               , infodba.pitem ci
               , INFODBA.PWORKSPACEOBJECT CIW
               , infodba.pworkspaceobject cirw
               , infodba.pitemrevision cir
               , infodba.PPSOCCURRENCETYPE OT 
            WHERE pi.puid = pir.ritems_tagu
            AND pirw.puid = pir.puid
            AND pirw.PACTIVE_SEQ = 1 
            AND pirw.pdate_released IS NOT NULL
            AND pir.puid = psr.puid
            AND psr.pvalu_0 = pbvr.puid
            AND pbvr.RBOM_VIEWU =pbv.PUID
            AND pbv.RVIEW_TYPEU = vt.PUID
            AND vt.PNAME = 'view'
            AND pbvr.puid = occ.rparent_bvru
            AND occ.rchild_itemu = ci.puid
            AND OCC.ROCC_TYPEU = OT.PUID(+)
            AND cirw.PACTIVE_SEQ = 1 
            AND cirw.pdate_released IS NOT NULL
            AND cirw.puid = cir.puid
            AND CI.PUID = CIW.PUID
            AND ci.puid = cir.ritems_tagu
            AND cir.pitem_revision_id = (SELECT max(ir.pitem_revision_id) FROM infodba.pitemrevision ir, infodba.pworkspaceobject w WHERE ci.puid = ir.ritems_tagu AND ir.puid = w.puid AND w.pdate_released IS NOT NULL)
            AND pir.pitem_revision_id = (SELECT max(ir.pitem_revision_id) FROM infodba.pitemrevision ir, infodba.pworkspaceobject w WHERE pi.puid = ir.ritems_tagu AND ir.puid = w.puid AND w.pdate_released IS NOT NULL)
            START WITH PI.PUID = #{targetUid, jdbcType=VARCHAR}
            connect BY PRIOR ci.pitem_id = pi.pitem_id
            AND PRIOR cir.pitem_revision_id = pir.pitem_revision_id
            AND cir.pitem_revision_id = (SELECT max(ir.pitem_revision_id) FROM infodba.pitemrevision ir, infodba.pworkspaceobject w WHERE ci.puid = ir.ritems_tagu AND ir.puid = w.puid AND w.pdate_released IS NOT NULL)
            AND pir.pitem_revision_id = (SELECT max(ir.pitem_revision_id) FROM infodba.pitemrevision ir, infodba.pworkspaceobject w WHERE pi.puid = ir.ritems_tagu AND ir.puid = w.puid AND w.pdate_released IS NOT NULL)
             AND (OT.PNAME IS NULL OR OT.PNAME = 'MEConsumed')
            AND pirw.POBJECT_TYPE IN ( 'M7_BOPShopRevision', 'M7_BOPLineRevision', 'M7_BOPStationRevision',
                                       'M7_BOPBodyOpRevision', 'M7_BOPAssyOpRevision', 'M7_BOPPaintOpRevision')
           )
            
         , EBOM AS (
                        SELECT 
                                MBOM.PARENT_ID PITEM_ID
                             , MBOM.PITEM_REVISION_ID PITEM_REVISION_ID
                             , MBOM.PARENT_OBJECT_TYPE POBJECT_TYPE
                             , MBOM.OCC_TYPE_NAME PNAME
                             , MBOM.OCC_THREADU
                             , MBOM.CITEM_ID CITEM_ID
                             , MBOM.CHILD_ITEM_REV CITEM_REVISION_ID
                             , PNCI.PITEM_ID EBOM_ITEM_ID
                             , MBOM.PARENT_OCC_PUID OCC_PUID
                          FROM MBOM MBOM
                              , INFODBA.PIMANRELATION PREL
	               , INFODBA.PMEAPPEARANCEPATHNODE PNODE
	               , INFODBA.PMEAPPEARANCEPATHROOT PROOT
	               , INFODBA.PITEM RI
	               , INFODBA.PPSOCCURRENCE PNODEOCC
	               , INFODBA.PPSBOMVIEWREVISION PBOMVIEW
	               , INFODBA.PSTRUCTURE_REVISIONS PSTRREV 
	               , INFODBA.PITEMREVISION PREV
	               , INFODBA.PWORKSPACEOBJECT PWORK
	               , INFODBA.PITEM PI
	               , INFODBA.PITEM PNCI
	            WHERE 1 = 1 
	            AND PREL.RPRIMARY_OBJECTU = MBOM.PARENT_OCC_PUID
	            AND PREL.RSECONDARY_OBJECTU = PNODE.PUID
	            AND PNODE.RPATH_ROOTU = PROOT.PUID
	            AND PROOT.RTRACKED_ITEMU = RI.PUID
	            AND RI.PITEM_ID = #{productId, jdbcType=VARCHAR}
	            AND PNODE.ROCC_THREADU = PNODEOCC.ROCC_THREADU
	            AND PBOMVIEW.PUID = PNODEOCC.RPARENT_BVRU  
	            AND PSTRREV.PVALU_0 = PBOMVIEW.PUID
	            AND PREV.PUID = PSTRREV.PUID
	            AND PI.PUID = PREV.RITEMS_TAGU
	            AND PWORK.PUID = PREV.PUID
	            AND PWORK.PACTIVE_SEQ = 1
	            AND PWORK.PDATE_RELEASED IS NOT NULL
	            AND PREV.PITEM_REVISION_ID = (SELECT max(ir.pitem_revision_id) FROM infodba.pitemrevision ir, infodba.pworkspaceobject w WHERE pi.puid = ir.ritems_tagu AND ir.puid = w.puid AND w.pdate_released IS NOT NULL)
	            AND PNODEOCC.RCHILD_ITEMU = PNCI.PUID
	                           AND MBOM.CITEM_ID != PNCI.PITEM_ID
                    )
               
               SELECT * 
                 FROM EBOM
        
  </select>
 
	<!-- [NONE_SR][20151123] taeku.jeong 조립작업 표준서를 검색하기위한 Data를 Shop 기준으로 하향 전개한 Data를 저장한다.  -->
	<insert id="insertOperationOccurenceForInstructionSheets" parameterType="java.util.HashMap">
			INSERT INTO BOP_OP_LISTS (
				FIND_KEY,
				FIND_DATE,
			    PARENT_ID, 
			    PARENT_TYPE, 
			    PARENT_REV, 
			    PARENT_REV_PUID, 
			    BOM_LEVEL, 
			    PART_ID, 
			    PART_REV, 
			    PART_TYPE, 
			    PART_NAME, 
			    ENG_NAME, 
			    CHILD_ITEM_NAME, 
			    STATION_CODE, 
			    PARENTLINE, 
			    PARENTSHOP, 
			    PARENTPRODUCT, 
			    CHILD_ITEM_PUID, 
			    CHILD_REV_PUID, 
			    OCCURENCE_PUID, 
			    IDINCONTEXT_TOP, 
			    OCC_THREADU, 
			    APN_PUID_IN_TOP, 
			    RNOTES_REFU
			)
			SELECT DISTINCT
			    #{findKey, jdbcType=VARCHAR} AS FIND_KEY,
				SYSDATE,
			    PARENT_VIEW.PARENT_ID AS PARENT_ID,
			    PARENT_VIEW.PARENT_TYPE AS PARENT_TYPE,
			    PARENT_VIEW.PARENT_REV AS PARENT_REV,
			    --PPSOCCURRENCE.PORDER_NO AS ORDER_NO,
			    PARENT_VIEW.PARENT_REV_PUID,
			    LEVEL AS BOM_LEVEL,
			    CHILD_NODE.ITEM_ID AS PART_ID,
			    CHILD_NODE.REV_ID AS PART_REV,
			    CHILD_NODE.CHILD_TYPE AS PART_TYPE,
			    CHILD_NODE.CHILD_NAME AS PART_NAME,
			    PM7_BOPOPERATIONREVISION.PM7_ENG_NAME AS ENG_NAME,
			    CHILD_NODE.CHILD_ITEM_NAME AS CHILD_ITEM_NAME,
			    OPERATION_DATA.STATION_CODE AS STATION_CODE,
			    --PM7_BOPLINEREVISION.PM7_LINE AS LINE_CODE,
			    TRIM(SUBSTR(SYS_CONNECT_BY_PATH( (PRIOR PM7_BOPLINEREVISION.PM7_LINE) , ' '),2)) PARENTLINE,
			    TRIM(SUBSTR(SYS_CONNECT_BY_PATH( (PRIOR PM7_BOPLINEREVISION.PM7_SHOP) , ' '),2)) PARENTSHOP,
			    TRIM(SUBSTR(SYS_CONNECT_BY_PATH( (PRIOR PM7_BOPLINEREVISION.PM7_PRODUCT_CODE) , ' '),2)) PARENTPRODUCT,
			    PPSOCCURRENCE.RCHILD_ITEMU CHILD_ITEM_PUID,
			    CHILD_NODE.CHILD_REV_PUID CHILD_REV_PUID,
			    PPSOCCURRENCE.PUID OCCURENCE_PUID,
			    ABS_OCC.IDINCONTEXT_TOP,
			    ABS_OCC.OCC_THREADU,
			    ABS_OCC.APN_PUID_IN_TOP,
			    PPSOCCURRENCE.RNOTES_REFU
			FROM INFODBA.PPSOCCURRENCE , (
			      SELECT PITEM.PITEM_ID AS PARENT_ID,
			        PITEMREVISION.PITEM_REVISION_ID AS PARENT_REV,
			        PWORKSPACEOBJECT.POBJECT_NAME AS PARENT_NAME,
			        PWORKSPACEOBJECT.POBJECT_TYPE AS PARENT_TYPE,
			        PITEMREVISION.PUID AS PARENT_REV_PUID,
			        PITEM.PUID AS PARENT_ITEM_PUID,
			        PPSVIEWTYPE.PNAME AS VIEW_TYPE_NAME,
			        PPSBOMVIEWREVISION.PUID AS BOM_VIEW_REV_UID
			      FROM INFODBA.PITEM, INFODBA.PITEMREVISION, INFODBA.PSTRUCTURE_REVISIONS,
			        INFODBA.PPSBOMVIEWREVISION, INFODBA.PPSBOMVIEW, INFODBA.PPSVIEWTYPE,
			        INFODBA.PWORKSPACEOBJECT
			      WHERE PPSBOMVIEW.PUID=PPSBOMVIEWREVISION.RBOM_VIEWU
			        AND PPSBOMVIEWREVISION.PUID=PSTRUCTURE_REVISIONS.PVALU_0
			        AND PSTRUCTURE_REVISIONS.PUID=PITEMREVISION.PUID
			        AND PSTRUCTURE_REVISIONS.PSEQ is not null
			        AND PITEM.PUID=PITEMREVISION.RITEMS_TAGU
			        AND PWORKSPACEOBJECT.PUID=PITEMREVISION.PUID
			        AND PPSVIEWTYPE.PUID=PPSBOMVIEW.RVIEW_TYPEU
			        --AND PPSBOMVIEWREVISION.PIS_PRECISE=0
			        --AND PPSVIEWTYPE.PNAME IN ('view','MBOM')
			        AND PPSVIEWTYPE.PNAME IN ('view')
			        AND PWORKSPACEOBJECT.POBJECT_TYPE IN (
			          'M7_BOPAssyOpRevision','M7_BOPBodyOpRevision',
			          'M7_BOPLineRevision','M7_BOPPaintOpRevision',
			          'M7_BOPShopRevision','M7_BOPStationRevision'
			          )
			      ) PARENT_VIEW, (
			        SELECT PITEM.PITEM_ID AS ITEM_ID,
			          PITEMREVISION.PITEM_REVISION_ID AS REV_ID,
			          PITEM.PUID AS CHILD_PUID,
			          PITEMREVISION.PUID AS CHILD_REV_PUID,
			          ITEM_OBJ.POBJECT_NAME AS CHILD_ITEM_NAME,
			          PWORKSPACEOBJECT.POBJECT_NAME AS CHILD_NAME,
			          PWORKSPACEOBJECT.POBJECT_TYPE AS CHILD_TYPE
			        FROM INFODBA.PITEM, INFODBA.PITEMREVISION, INFODBA.PWORKSPACEOBJECT,
			          INFODBA.PWORKSPACEOBJECT ITEM_OBJ
			        WHERE PITEMREVISION.PUID=PWORKSPACEOBJECT.PUID
			          AND PITEMREVISION.RITEMS_TAGU=PITEM.PUID
			          AND ITEM_OBJ.PUID=PITEM.PUID
			          AND PWORKSPACEOBJECT.POBJECT_TYPE IN (
			            'M7_BOPAssyOpRevision','M7_BOPBodyOpRevision',
			            'M7_BOPLineRevision','M7_BOPPaintOpRevision',
			            'M7_BOPShopRevision','M7_BOPStationRevision'
			            )
			      ) CHILD_NODE, (
			          SELECT PITEMREVISION.PUID AS ITEM_REV_PUID,
			            PITEM.PITEM_ID AS OPEARTION_ID,
			            PITEMREVISION.PITEM_REVISION_ID AS OPERATION_REV_ID,
			            PWORKSPACEOBJECT.POBJECT_NAME AS OPERATION_NAME,
			            DATA1.STATION_CODE AS STATION_CODE
			          FROM (
			              SELECT PUID, STATION_CODE
			              FROM(
			                  SELECT PUID, PM7_STATION_NO AS STATION_CODE FROM INFODBA.PM7_BOPASSYOPREVISION
			                  UNION
			                  SELECT PUID, PM7_STATION_CODE AS STATION_CODE FROM INFODBA.PM7_BOPBODYOPREVISION
			                  UNION
			                  SELECT PUID, PM7_STATION_CODE AS STATION_CODE FROM INFODBA.PM7_BOPPAINTOPREVISION
			              ) 
			            ) DATA1,
			            INFODBA.PITEM, INFODBA.PITEMREVISION, INFODBA.PWORKSPACEOBJECT
			          WHERE PITEM.PUID=PITEMREVISION.RITEMS_TAGU
			            AND DATA1.PUID=PITEMREVISION.PUID
			            AND PWORKSPACEOBJECT.PUID=PITEMREVISION.PUID
			      ) OPERATION_DATA, 
			      INFODBA.PM7_BOPLINEREVISION, (
			          SELECT DISTINCT PPSOCCURRENCE.PUID AS OCC_PUID,
			              --PABSOCCURRENCE.PUID AS ABS_OCC_PUID,
			              --PPSOCCURRENCE.POCCURRENCE_NAME AS INSTANCE_ID,
			              PABSOCCURRENCE.PABS_OCC_ID AS IDINCONTEXT_TOP,
			              PMEAPPEARANCEPATHNODE.ROCC_THREADU AS OCC_THREADU,
			              PMEAPPEARANCEPATHNODE.PUID AS APN_PUID_IN_TOP
			              --PPSOCCURRENCE.RNOTES_REFU AS OCC_NOTE_UID
			          FROM INFODBA.PMEAPPEARANCEPATHNODE,
			              INFODBA.PPSOCCURRENCE, INFODBA.PABSOCCURRENCE
			          WHERE PMEAPPEARANCEPATHNODE.ROCC_THREADU=PPSOCCURRENCE.ROCC_THREADU
			              AND PABSOCCURRENCE.PUID=PMEAPPEARANCEPATHNODE.RABS_OCCU
			      ) ABS_OCC, INFODBA.PM7_BOPOPERATIONREVISION
			WHERE PPSOCCURRENCE.PUID=ABS_OCC.OCC_PUID
			    AND PPSOCCURRENCE.RPARENT_BVRU=PARENT_VIEW.BOM_VIEW_REV_UID
			    AND PPSOCCURRENCE.RCHILD_ITEMU=CHILD_NODE.CHILD_PUID
			    AND CHILD_NODE.CHILD_REV_PUID=OPERATION_DATA.ITEM_REV_PUID(+)
			    AND CHILD_NODE.CHILD_REV_PUID=PM7_BOPLINEREVISION.PUID(+)
			    AND CHILD_NODE.CHILD_REV_PUID=PM7_BOPOPERATIONREVISION.PUID(+)
			    START WITH PARENT_VIEW.PARENT_ID=#{shop_item_Id, jdbcType=VARCHAR}
			    CONNECT BY PRIOR PPSOCCURRENCE.RCHILD_ITEMU=PARENT_VIEW.PARENT_ITEM_PUID
	</insert>
	<!-- [NONE_SR][20151123] taeku.jeong Find Key를 조건으로 조립작업 표준서 검색 Data를 삭제 한다. -->
	<delete id="deleteOperationOccurenceForInstructionSheets" parameterType="java.util.HashMap">
		DELETE BOP_OP_LISTS
		WHERE
			FIND_KEY = #{findKey, jdbcType=VARCHAR}
	</delete>
	<!-- [NONE_SR][20151123] taeku.jeong 하루전 조립작업 표준서 검색 Data를 삭제 한다. -->
	<delete id="deleteOperationOccurenceForInstructionSheets2" parameterType="java.util.HashMap">
		DELETE BOP_OP_LISTS WHERE FIND_DATE <![CDATA[<=]]> (TO_DATE(SYSDATE, 'YY-MM-DD') - 1) 
	</delete>
	<!-- [NONE_SR][20151123] taeku.jeong Operation검색 속도 개선을위해 API를 이용한 전개 방식이 아닌 Query를 이용하는 방식으로 개선 -->
	<select id="findOperationOccurenceForInstructionSheets" parameterType="java.util.HashMap" resultType="java.util.HashMap">
				WITH STRU_DATA AS ( 
							SELECT DISTINCT
							    PARENT_VIEW.PARENT_ID AS PARENT_ID,
							    PARENT_VIEW.PARENT_TYPE AS PARENT_TYPE,
							    PARENT_VIEW.PARENT_REV AS PARENT_REV,
							    PARENT_VIEW.PARENT_REV_PUID,
							    LEVEL AS BOM_LEVEL,
							    CHILD_NODE.ITEM_ID AS PART_ID,
							    CHILD_NODE.REV_ID AS PART_REV,
							    CHILD_NODE.CHILD_TYPE AS PART_TYPE,
							    CHILD_NODE.CHILD_NAME AS PART_NAME,
							    PM7_BOPOPERATIONREVISION.PM7_ENG_NAME AS ENG_NAME,
							    CHILD_NODE.CHILD_ITEM_NAME AS CHILD_ITEM_NAME,
							    OPERATION_DATA.STATION_CODE AS STATION_CODE,
							    TRIM(SUBSTR(SYS_CONNECT_BY_PATH( (PRIOR PM7_BOPLINEREVISION.PM7_LINE) , ' '),2)) PARENTLINE,
							    TRIM(SUBSTR(SYS_CONNECT_BY_PATH( (PRIOR PM7_BOPLINEREVISION.PM7_SHOP) , ' '),2)) PARENTSHOP,
							    TRIM(SUBSTR(SYS_CONNECT_BY_PATH( (PRIOR PM7_BOPLINEREVISION.PM7_PRODUCT_CODE) , ' '),2)) PARENTPRODUCT,
							    PPSOCCURRENCE.RCHILD_ITEMU CHILD_ITEM_PUID,
							    CHILD_NODE.CHILD_REV_PUID CHILD_REV_PUID,
							    PPSOCCURRENCE.PUID OCCURENCE_PUID,
							    ABS_OCC.IDINCONTEXT_TOP,
							    ABS_OCC.OCC_THREADU,
							    ABS_OCC.APN_PUID_IN_TOP,
							    PPSOCCURRENCE.RNOTES_REFU
							FROM INFODBA.PPSOCCURRENCE , (
							      SELECT PITEM.PITEM_ID AS PARENT_ID,
							        PITEMREVISION.PITEM_REVISION_ID AS PARENT_REV,
							        PWORKSPACEOBJECT.POBJECT_NAME AS PARENT_NAME,
							        PWORKSPACEOBJECT.POBJECT_TYPE AS PARENT_TYPE,
							        PITEMREVISION.PUID AS PARENT_REV_PUID,
							        PITEM.PUID AS PARENT_ITEM_PUID,
							        PPSVIEWTYPE.PNAME AS VIEW_TYPE_NAME,
							        PPSBOMVIEWREVISION.PUID AS BOM_VIEW_REV_UID
							      FROM INFODBA.PITEM, INFODBA.PITEMREVISION, INFODBA.PSTRUCTURE_REVISIONS,
							        INFODBA.PPSBOMVIEWREVISION, INFODBA.PPSBOMVIEW, INFODBA.PPSVIEWTYPE,
							        INFODBA.PWORKSPACEOBJECT
							      WHERE PPSBOMVIEW.PUID=PPSBOMVIEWREVISION.RBOM_VIEWU
							        AND PPSBOMVIEWREVISION.PUID=PSTRUCTURE_REVISIONS.PVALU_0
							        AND PSTRUCTURE_REVISIONS.PUID=PITEMREVISION.PUID
							        AND PSTRUCTURE_REVISIONS.PSEQ is not null
							        AND PITEM.PUID=PITEMREVISION.RITEMS_TAGU
							        AND PWORKSPACEOBJECT.PUID=PITEMREVISION.PUID
							        AND PPSVIEWTYPE.PUID=PPSBOMVIEW.RVIEW_TYPEU
							        --AND PPSBOMVIEWREVISION.PIS_PRECISE=0
							        --AND PPSVIEWTYPE.PNAME IN ('view','MBOM')
							        AND PPSVIEWTYPE.PNAME IN ('view')
							        AND PWORKSPACEOBJECT.POBJECT_TYPE IN (
							          'M7_BOPAssyOpRevision','M7_BOPBodyOpRevision',
							          'M7_BOPLineRevision','M7_BOPPaintOpRevision',
							          'M7_BOPShopRevision','M7_BOPStationRevision'
							          )
							      ) PARENT_VIEW, (
							        SELECT PITEM.PITEM_ID AS ITEM_ID,
							          PITEMREVISION.PITEM_REVISION_ID AS REV_ID,
							          PITEM.PUID AS CHILD_PUID,
							          PITEMREVISION.PUID AS CHILD_REV_PUID,
							          ITEM_OBJ.POBJECT_NAME AS CHILD_ITEM_NAME,
							          PWORKSPACEOBJECT.POBJECT_NAME AS CHILD_NAME,
							          PWORKSPACEOBJECT.POBJECT_TYPE AS CHILD_TYPE
							        FROM INFODBA.PITEM, INFODBA.PITEMREVISION, INFODBA.PWORKSPACEOBJECT,
							          INFODBA.PWORKSPACEOBJECT ITEM_OBJ
							        WHERE PITEMREVISION.PUID=PWORKSPACEOBJECT.PUID
							          AND PITEMREVISION.RITEMS_TAGU=PITEM.PUID
							          AND ITEM_OBJ.PUID=PITEM.PUID
							          AND PWORKSPACEOBJECT.POBJECT_TYPE IN (
							            'M7_BOPAssyOpRevision','M7_BOPBodyOpRevision',
							            'M7_BOPLineRevision','M7_BOPPaintOpRevision',
							            'M7_BOPShopRevision','M7_BOPStationRevision'
							            )
							      ) CHILD_NODE, (
							          SELECT PITEMREVISION.PUID AS ITEM_REV_PUID,
							            PITEM.PITEM_ID AS OPEARTION_ID,
							            PITEMREVISION.PITEM_REVISION_ID AS OPERATION_REV_ID,
							            PWORKSPACEOBJECT.POBJECT_NAME AS OPERATION_NAME,
							            DATA1.STATION_CODE AS STATION_CODE
							          FROM (
							              SELECT PUID, STATION_CODE
							              FROM(
							                  SELECT PUID, PM7_STATION_NO AS STATION_CODE FROM INFODBA.PM7_BOPASSYOPREVISION
							                  UNION
							                  SELECT PUID, PM7_STATION_CODE AS STATION_CODE FROM INFODBA.PM7_BOPBODYOPREVISION
							                  UNION
							                  SELECT PUID, PM7_STATION_CODE AS STATION_CODE FROM INFODBA.PM7_BOPPAINTOPREVISION
							              ) 
							            ) DATA1,
							            INFODBA.PITEM, INFODBA.PITEMREVISION, INFODBA.PWORKSPACEOBJECT
							          WHERE PITEM.PUID=PITEMREVISION.RITEMS_TAGU
							            AND DATA1.PUID=PITEMREVISION.PUID
							            AND PWORKSPACEOBJECT.PUID=PITEMREVISION.PUID
							      ) OPERATION_DATA, 
							      INFODBA.PM7_BOPLINEREVISION, (
							          SELECT DISTINCT PPSOCCURRENCE.PUID AS OCC_PUID,
							              PABSOCCURRENCE.PABS_OCC_ID AS IDINCONTEXT_TOP,
							              PMEAPPEARANCEPATHNODE.ROCC_THREADU AS OCC_THREADU,
							              PMEAPPEARANCEPATHNODE.PUID AS APN_PUID_IN_TOP
							          FROM INFODBA.PMEAPPEARANCEPATHNODE,
							              INFODBA.PPSOCCURRENCE, INFODBA.PABSOCCURRENCE
							          WHERE PMEAPPEARANCEPATHNODE.ROCC_THREADU=PPSOCCURRENCE.ROCC_THREADU
							              AND PABSOCCURRENCE.PUID=PMEAPPEARANCEPATHNODE.RABS_OCCU
							              AND PMEAPPEARANCEPATHNODE.RPATH_ROOTU IN (
						                        SELECT PUID 
						                        FROM INFODBA.PMEAPPEARANCEPATHROOT 
						                        WHERE RTRACKED_ITEMU 
						                            IN (
						                            	SELECT PUID 
						                            	FROM INFODBA.PITEM 
						                            	WHERE PITEM_ID=#{shop_item_Id, jdbcType=VARCHAR}
						                            )
						                    )
							      ) ABS_OCC, INFODBA.PM7_BOPOPERATIONREVISION
							WHERE PPSOCCURRENCE.PUID=ABS_OCC.OCC_PUID
							    AND PPSOCCURRENCE.RPARENT_BVRU=PARENT_VIEW.BOM_VIEW_REV_UID
							    AND PPSOCCURRENCE.RCHILD_ITEMU=CHILD_NODE.CHILD_PUID
							    AND CHILD_NODE.CHILD_REV_PUID=OPERATION_DATA.ITEM_REV_PUID(+)
							    AND CHILD_NODE.CHILD_REV_PUID=PM7_BOPLINEREVISION.PUID(+)
							    AND CHILD_NODE.CHILD_REV_PUID=PM7_BOPOPERATIONREVISION.PUID(+)
							    START WITH PARENT_VIEW.PARENT_ID=#{shop_item_Id, jdbcType=VARCHAR}
							    CONNECT BY PRIOR PPSOCCURRENCE.RCHILD_ITEMU=PARENT_VIEW.PARENT_ITEM_PUID
				)
            SELECT DISTINCT APN_PUID_IN_TOP
			FROM STRU_DATA 
			WHERE PART_TYPE IN (
                'M7_BOPAssyOpRevision',
                'M7_BOPBodyOpRevision','M7_BOPPaintOpRevision'
              )
			<if test="shop_code != null and shop_code != '' ">
			  AND PARENTSHOP=#{shop_code, jdbcType=VARCHAR}
			</if>
			<if test="line_code != null and line_code != '' ">
			  AND PARENTLINE=#{line_code, jdbcType=VARCHAR}
			</if>
			<if test="station_code != null and station_code != '' ">  
			  AND STATION_CODE=#{station_code, jdbcType=VARCHAR}
			</if>
			<if test="item_id != null and item_id != '' ">
			  AND PART_ID LIKE '%'||#{item_id, jdbcType=VARCHAR}||'%'
			</if>
			<if test="m7_KOR_NAME != null and m7_KOR_NAME != '' ">
			  AND ( UPPER(PART_NAME) LIKE '%'||#{m7_KOR_NAME, jdbcType=VARCHAR}||'%' OR ENG_NAME LIKE '%'||#{m7_KOR_NAME, jdbcType=VARCHAR}||'%')
			</if>
	</select>
	<!-- New way of find sheets -->
	<select id="findOperationOccurenceForInstructionSheetsNew" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		WITH FIND_KEY AS (SELECT #{findKey, jdbcType=VARCHAR} AS FIND_KEY FROM DUAL)
		SELECT DISTINCT
			RELATED_STATION.OPERATION_PUID AS OPERATION_PUID,
			RELATED_LINE.LINE_CODE AS LINE_CODE,
			NVL2(
		            RELATED_LINE.PARENT_APP_PATH,
		            SUBSTR(RELATED_LINE.PARENT_APP_PATH, 4),
		            NULL
		        ) AS PARENT_APP_PATH,
			RELATED_STATION.STATION_CODE AS STATION_CODE,
			RELATED_LINE.OPERATION_ID AS OPERATION_ID,
			RELATED_STATION.OPERATION_REV_ID AS OPERATION_REV_ID,
			OPERATOIN_OBJ.POBJECT_NAME AS OPERATION_NAME,
			PM7_BOPOPERATIONREVISION.PM7_ENG_NAME AS ENG_NAME,
			DBMS_LOB.SUBSTR( IMAN_MVLBLOB.DATA, 4000, 1 ) AS "OPTION",
			OPERATION_OCCURRENCE.APP_NODE_PUID AS APP_NODE_PUID,
			OPERATION_OCCURRENCE.ABS_OCC_ID AS ABS_OCC_ID,
			OPERATION_MECO.MECO_ID AS MECO_ID,
			OPERATION_MECO.OWNING_USER_NAME AS MECO_OWNER,
			KOR_PUB_INFO.INFO_LIST AS KOR_PUB_LIST,
			KOR_PUB_INFO.MAX_REV AS KOR_PUB_MAX_REV,
			ENG_PUB_INFO.INFO_LIST AS ENG_PUB_LIST,
			ENG_PUB_INFO.MAX_REV AS ENG_PUB_MAX_REV,
			OPERATOIN_PUB_USER.PUBLISH_USER_NAME AS PUB_USER,
			TO_CHAR (
		            NVL2(
		                    M_RELEASED_INFO.RELEASED_DATE,
		                    (M_RELEASED_INFO.RELEASED_DATE + 9 / 24),
		                    NULL
		                ) , 'YYYY-MM-DD HH24:MI:SS'
		        ) AS OPERATION_RELEASED_DATE,
			M_RELEASED_INFO.STATUS_NAME AS OPERATION_STATUS_NAME
		FROM
			<!-- OPERATION 과 관련된 STATION DATA를 QUERY  -->
			(
				<!-- OPERATION의 STATION COCDE -->
				SELECT PITEMREVISION.PUID AS OPERATION_PUID,
					PITEMREVISION.PITEM_REVISION_ID AS OPERATION_REV_ID,
					STATION_INFO.STATION_CODE AS STATION_CODE
				FROM (
						SELECT PUID, PM7_STATION_NO AS STATION_CODE
						FROM INFODBA.PM7_BOPASSYOPREVISION
						UNION
						SELECT PUID, PM7_STATION_CODE AS STATION_CODE
						FROM INFODBA.PM7_BOPBODYOPREVISION
						UNION
						SELECT PUID, PM7_STATION_CODE AS STATION_CODE
						FROM INFODBA.PM7_BOPPAINTOPREVISION
					) STATION_INFO,
					INFODBA.PITEM,
					INFODBA.PITEMREVISION,
					INFODBA.PWORKSPACEOBJECT,
					(
						SELECT REV_PUID AS REV_PUID
						FROM BOP_STRUCT_DATA
						WHERE KEY_CODE IN ( SELECT FIND_KEY FROM FIND_KEY )
							AND CHILD_TYPE IN (
								'M7_BOPAssyOp',
								'M7_BOPBodyOp',
								'M7_BOPPaintOp'
							)
					) TARGET_OP
				WHERE PITEM.PUID = PITEMREVISION.RITEMS_TAGU
					AND STATION_INFO.PUID = PITEMREVISION.PUID
					AND PWORKSPACEOBJECT.PUID = PITEMREVISION.PUID
					AND TARGET_OP.REV_PUID = PITEMREVISION.PUID
					<!-- STATION 검색 조건 -->
					<if test="station_code != null and station_code != '' ">  
					  AND STATION_INFO.STATION_CODE = #{station_code, jdbcType=VARCHAR}
					</if>
			) RELATED_STATION,
			<!-- OPERATION과 관련된 LINE DATA QUERY -->
		    (
				SELECT TARGET_OPERATIONS.CHILD_ID AS OPERATION_ID,
					TARGET_OPERATIONS.REV_PUID AS OPERATION_PUID,
					TARGET_OPERATIONS.CHILD_TYPE AS OPERATION_TYPE,
					TARGET_OPERATIONS.LINE_CODE AS LINE_CODE,
					TARGET_OPERATIONS.PARENT_APP_PATH AS PARENT_APP_PATH
				FROM (
						SELECT PARENT_ID,
							PARENT_REV_PUID,
							PARENT_TYPE,
							CHILD_ID,
							REV_PUID,
							CHILD_TYPE,
							SUBSTR (
		                            SYS_CONNECT_BY_PATH (TRIM (PARENT_ID), '__'),
		                            10,
		                            2
		                        ) AS LINE_CODE,
							SYS_CONNECT_BY_PATH (PARENT_ID, ']*[') AS PARENT_APP_PATH
						FROM BOP_STRUCT_DATA
						WHERE KEY_CODE IN (SELECT FIND_KEY FROM FIND_KEY)
						START WITH PARENT_ID IN (
								SELECT DISTINCT PARENT_ID
								FROM BOP_STRUCT_DATA
								WHERE KEY_CODE IN (SELECT FIND_KEY FROM FIND_KEY)
									AND PARENT_TYPE = 'M7_BOPLine'
							)
						CONNECT BY PRIOR REV_PUID = PARENT_REV_PUID
					) TARGET_OPERATIONS
				WHERE TARGET_OPERATIONS.CHILD_TYPE IN (
						'M7_BOPAssyOp',
						'M7_BOPBodyOp',
						'M7_BOPPaintOp'
					)
					<!-- OPERATION_ID 검색 조건 -->
					<if test="item_id != null and item_id != '' ">
					  AND TARGET_OPERATIONS.CHILD_ID LIKE '%'||#{item_id, jdbcType=VARCHAR}||'%'
					</if>
			) RELATED_LINE,
			(
				SELECT REV_PUID,
		            ABS_OCC_ID,
		            OCC_THREADU,
		            APP_NODE_PUID,
		            ABS_OCC_PUID,
		            OCC_PUID
				FROM BOP_STRUCT_DATA
				WHERE KEY_CODE IN (SELECT FIND_KEY FROM FIND_KEY)
				AND CHILD_TYPE IN (
						'M7_BOPAssyOp',
						'M7_BOPBodyOp',
						'M7_BOPPaintOp'
					)
			) OPERATION_OCCURRENCE,
			(
				SELECT PITEMREVISION.PUID AS ITEM_REV_PUID,
					MECO_REVISION.MECO_ID AS MECO_ID,
					MECO_REVISION.OWNING_USER_NAME AS OWNING_USER_NAME,
					MECO_REVISION.OWNING_USER_ID AS OWNING_USER_ID
				FROM INFODBA.PITEMREVISION,
					INFODBA.PMEOPREVISION, (
						SELECT PITEM.PITEM_ID AS MECO_ID,
							PM7_MECOREVISION.PM7_MECO_TYPE AS MECO_TYPE,
							PPOM_USER.PUSER_ID AS OWNING_USER_ID,
							PPOM_USER.PUSER_NAME AS OWNING_USER_NAME,
							PITEMREVISION.PUID AS MECO_REV_PUID,
							PITEM.PUID AS MECO_PUID
						FROM INFODBA.PITEM,
							INFODBA.PWORKSPACEOBJECT,
							INFODBA.PITEMREVISION,
							INFODBA.PM7_MECOREVISION,
							INFODBA.PPOM_APPLICATION_OBJECT,
							INFODBA.PPOM_USER
						WHERE PM7_MECOREVISION.PUID = PWORKSPACEOBJECT.PUID
							AND PITEM.PUID = PITEMREVISION.RITEMS_TAGU
							AND PITEMREVISION.PUID = PM7_MECOREVISION.PUID
							AND PPOM_APPLICATION_OBJECT.ROWNING_USERU = PPOM_USER.PUID
							AND PPOM_APPLICATION_OBJECT.PUID = PWORKSPACEOBJECT.PUID
							AND PWORKSPACEOBJECT.POBJECT_TYPE = 'M7_MECORevision'
					) MECO_REVISION
				WHERE PITEMREVISION.PUID = PMEOPREVISION.PUID
				AND PMEOPREVISION.RM7_MECO_NOU = MECO_REVISION.MECO_REV_PUID
			) OPERATION_MECO,
			(
				SELECT PWORKSPACEOBJECT.PUID AS ITEM_REV_PUID,
					PPOM_USER.PUSER_NAME AS PUBLISH_USER_NAME
				FROM INFODBA.PPOM_USER,
					INFODBA.PPOM_APPLICATION_OBJECT,
					INFODBA.PWORKSPACEOBJECT
				WHERE PWORKSPACEOBJECT.PUID = PPOM_APPLICATION_OBJECT.PUID
					AND PPOM_APPLICATION_OBJECT.ROWNING_USERU = PPOM_USER.PUID
			) OPERATOIN_PUB_USER,
			(
				SELECT DISTINCT
					PITEMREVISION.PUID AS REVISION_PUID,
					PRELEASESTATUS.PNAME AS STATUS_NAME,
					PWORKSPACEOBJECT.PDATE_RELEASED AS RELEASED_DATE
				FROM INFODBA.PRELEASE_STATUS_LIST,
					INFODBA.PRELEASESTATUS,
					INFODBA.PITEMREVISION,
					INFODBA.PITEM,
					INFODBA.PWORKSPACEOBJECT
				WHERE PRELEASE_STATUS_LIST.PVALU_0 = PRELEASESTATUS.PUID
					AND PITEMREVISION.PUID = PRELEASE_STATUS_LIST.PUID
					AND PITEMREVISION.RITEMS_TAGU = PITEM.PUID
					AND PRELEASESTATUS.PNAME = 'M7_Released'
					AND PRELEASE_STATUS_LIST.PUID = PWORKSPACEOBJECT.PUID
			) M_RELEASED_INFO,
			INFODBA.PM7_BOPOPERATIONREVISION,
			INFODBA.PWORKSPACEOBJECT OPERATOIN_OBJ,
			(  
				SELECT OPERATION_PUID,
					LISTAGG (INFO_STR, ']*[')
		                WITHIN GROUP (ORDER BY INFO_STR) AS INFO_LIST,
		            MAX(PUB_REV) MAX_REV
				FROM (
					SELECT DISTINCT OPERATION_INFO.OPERATION_PUID AS OPERATION_PUID,
		                TO_CHAR (
		                        PITEMREVISION.PITEM_REVISION_ID || '/' || 
		                        NVL(RELEASED_INFO.STATUS_NAME, 'NULL') || '/' || 
		                        TO_CHAR (
		                                NVL2(
		                                        PPOM_APPLICATION_OBJECT.PLAST_MOD_DATE,
		                                        (  PPOM_APPLICATION_OBJECT.PLAST_MOD_DATE + 9 / 24),
		                                        NULL
		                                    ), 'YYYY-MM-DD HH24:MI:SS'
		                            ) || '/' || 
		                        PPOM_USER.PUSER_NAME
		                    ) AS INFO_STR,
						SUBSTR(PITEMREVISION.PITEM_REVISION_ID, 1, 3) AS PUB_REV 
					FROM INFODBA.PITEM,
						INFODBA.PITEMREVISION,
						INFODBA.PWORKSPACEOBJECT,
						INFODBA.PPOM_APPLICATION_OBJECT,
						(
							SELECT DISTINCT
								PITEMREVISION.PUID AS REVISION_PUID,
								PRELEASESTATUS.PNAME AS STATUS_NAME,
								PWORKSPACEOBJECT.PDATE_RELEASED
								AS RELEASED_DATE
							FROM INFODBA.PRELEASE_STATUS_LIST,
								INFODBA.PRELEASESTATUS,
								INFODBA.PITEM, INFODBA.PITEMREVISION,
								INFODBA.PWORKSPACEOBJECT
							WHERE PRELEASE_STATUS_LIST.PVALU_0 = PRELEASESTATUS.PUID
							AND PITEMREVISION.PUID = PRELEASE_STATUS_LIST.PUID
							AND PITEMREVISION.RITEMS_TAGU = PITEM.PUID
							AND PRELEASESTATUS.PNAME = 'M7_Released'
							AND PRELEASE_STATUS_LIST.PUID = PWORKSPACEOBJECT.PUID
						) RELEASED_INFO,
						(
							SELECT REV_PUID AS OPERATION_PUID,
		                        CHILD_ID AS OPERATION_ID
							FROM BOP_STRUCT_DATA
							WHERE KEY_CODE IN (SELECT FIND_KEY FROM FIND_KEY)
								AND CHILD_TYPE IN (
										'M7_BOPAssyOp',
										'M7_BOPBodyOp',
										'M7_BOPPaintOp'
									)
						) OPERATION_INFO, INFODBA.PPOM_USER
					WHERE PITEM.PUID = PWORKSPACEOBJECT.PUID
		                AND PITEM.PUID = PITEMREVISION.RITEMS_TAGU
		                AND PWORKSPACEOBJECT.POBJECT_TYPE = 'M7_ProcessSheet'
		                AND PITEMREVISION.PUID = PPOM_APPLICATION_OBJECT.PUID
		                AND SUBSTR (PITEM.PITEM_ID, 5) = OPERATION_INFO.OPERATION_ID
		                AND SUBSTR(PITEM.PITEM_ID, 1, 3) = 'KPS'
		                AND PITEMREVISION.PUID = RELEASED_INFO.REVISION_PUID(+)
		                AND PPOM_APPLICATION_OBJECT.ROWNING_USERU = PPOM_USER.PUID
				)
				GROUP BY OPERATION_PUID
			) KOR_PUB_INFO,
			(  
				SELECT OPERATION_PUID,
					LISTAGG (INFO_STR, ']*[') 
		                WITHIN GROUP (ORDER BY INFO_STR) AS INFO_LIST,
		            MAX(PUB_REV) MAX_REV
				FROM (
					SELECT DISTINCT OPERATION_INFO.OPERATION_PUID AS OPERATION_PUID,
		                TO_CHAR (
		                        PITEMREVISION.PITEM_REVISION_ID || '/' || 
		                        NVL(RELEASED_INFO.STATUS_NAME, 'NULL') || '/' || 
		                        TO_CHAR (
		                                NVL2(
		                                        PPOM_APPLICATION_OBJECT.PLAST_MOD_DATE,
		                                        (  PPOM_APPLICATION_OBJECT.PLAST_MOD_DATE + 9 / 24),
		                                        NULL
		                                    ), 'YYYY-MM-DD HH24:MI:SS'
		                            ) || '/' || 
		                        PPOM_USER.PUSER_NAME
		                    ) AS INFO_STR,
						SUBSTR(PITEMREVISION.PITEM_REVISION_ID, 1, 3) AS PUB_REV 
					FROM INFODBA.PITEM,
						INFODBA.PITEMREVISION,
						INFODBA.PWORKSPACEOBJECT,
						INFODBA.PPOM_APPLICATION_OBJECT,
						(
							SELECT DISTINCT
								PITEMREVISION.PUID AS REVISION_PUID,
								PRELEASESTATUS.PNAME AS STATUS_NAME,
								PWORKSPACEOBJECT.PDATE_RELEASED
								AS RELEASED_DATE
							FROM INFODBA.PRELEASE_STATUS_LIST,
								INFODBA.PRELEASESTATUS,
								INFODBA.PITEM, INFODBA.PITEMREVISION,
								INFODBA.PWORKSPACEOBJECT
							WHERE PRELEASE_STATUS_LIST.PVALU_0 = PRELEASESTATUS.PUID
							AND PITEMREVISION.PUID = PRELEASE_STATUS_LIST.PUID
							AND PITEMREVISION.RITEMS_TAGU = PITEM.PUID
							AND PRELEASESTATUS.PNAME = 'M7_Released'
							AND PRELEASE_STATUS_LIST.PUID = PWORKSPACEOBJECT.PUID
						) RELEASED_INFO,
						(
							SELECT REV_PUID AS OPERATION_PUID,
		                        CHILD_ID AS OPERATION_ID
							FROM BOP_STRUCT_DATA
							WHERE KEY_CODE IN (SELECT FIND_KEY FROM FIND_KEY)
								AND CHILD_TYPE IN (
										'M7_BOPAssyOp',
										'M7_BOPBodyOp',
										'M7_BOPPaintOp'
									)
						) OPERATION_INFO, INFODBA.PPOM_USER
					WHERE PITEM.PUID = PWORKSPACEOBJECT.PUID
					AND PITEM.PUID = PITEMREVISION.RITEMS_TAGU
		                AND PWORKSPACEOBJECT.POBJECT_TYPE = 'M7_ProcessSheet'
		                AND PITEMREVISION.PUID = PPOM_APPLICATION_OBJECT.PUID
		                AND SUBSTR (PITEM.PITEM_ID, 5) = OPERATION_INFO.OPERATION_ID
		                AND SUBSTR(PITEM.PITEM_ID, 1, 3) = 'EPS'
		                AND PITEMREVISION.PUID = RELEASED_INFO.REVISION_PUID(+)
		                AND PPOM_APPLICATION_OBJECT.ROWNING_USERU = PPOM_USER.PUID
				)
				GROUP BY OPERATION_PUID
			) ENG_PUB_INFO, INFODBA.IMAN_MVLBLOB
		 WHERE OPERATION_OCCURRENCE.REV_PUID=RELATED_STATION.OPERATION_PUID
		       AND RELATED_STATION.OPERATION_PUID = RELATED_LINE.OPERATION_PUID
		       AND RELATED_STATION.OPERATION_PUID = OPERATION_MECO.ITEM_REV_PUID(+)
		       AND RELATED_STATION.OPERATION_PUID = OPERATOIN_PUB_USER.ITEM_REV_PUID (+)
		       AND RELATED_STATION.OPERATION_PUID = PM7_BOPOPERATIONREVISION.PUID
		       AND RELATED_STATION.OPERATION_PUID = OPERATOIN_OBJ.PUID
		       AND RELATED_STATION.OPERATION_PUID = M_RELEASED_INFO.REVISION_PUID(+)
		       AND OPERATOIN_OBJ.PUID = KOR_PUB_INFO.OPERATION_PUID(+)
		       AND OPERATOIN_OBJ.PUID = ENG_PUB_INFO.OPERATION_PUID(+)
		       AND OPERATION_OCCURRENCE.OCC_PUID = IMAN_MVLBLOB.NAME (+)
				<!-- MECO NO 검색조건 -->
				<if test="m7_MECO_NO != null and m7_MECO_NO != '' ">
				AND OPERATION_MECO.MECO_ID = #{m7_MECO_NO, jdbcType=VARCHAR}
				</if>
				<!-- MECO OWNER 검색조건-->
				<if test="owning_user != null and owning_user != '' ">
				AND OPERATION_MECO.OWNING_USER_NAME = #{owning_user, jdbcType=VARCHAR}
				</if>
				<!-- PUBLISH USER 검색조건 -->
				<if test="publish_user != null and publish_user != '' ">
				AND OPERATOIN_PUB_USER.PUBLISH_USER_NAME = #{publish_user, jdbcType=VARCHAR}
				</if>
		       <!-- Option 조건 : Option의 이름을 List하는 형태라 API를 통화 확인 하는것이 좋겠음.
		       <if test="bl_occ_mvl_condition != null and bl_occ_mvl_condition != '' ">
		       AND DBMS_LOB.SUBSTR( IMAN_MVLBLOB.DATA, 4000, 1 ) like '%'||#{bl_occ_mvl_condition, jdbcType=VARCHAR}||'%'
		       </if>
		        -->
		       <!-- OPERATION 이름 검색 조건 -->
				<if test="m7_KOR_NAME != null and m7_KOR_NAME != '' ">
			  	AND (OPERATOIN_OBJ.POBJECT_NAME LIKE '%'||#{m7_KOR_NAME, jdbcType=VARCHAR}||'%' OR PM7_BOPOPERATIONREVISION.PM7_ENG_NAME LIKE '%'||#{m7_KOR_NAME, jdbcType=VARCHAR}||'%')
				</if>
				<choose>
					<!-- 두 조건 모두 만족하면 별다른 Query를 만들지 않아도 됨. -->
					<when test="release_operation != null and release_operation != ''  and norelease_operation != null and norelease_operation != '' ">
					</when>
					<!-- RELEASED -->
					<when test="release_operation != null and release_operation != '' ">
				       AND M_RELEASED_INFO.STATUS_NAME IS NOT NULL
					</when>
					<!-- UN RELEASED -->
					<when test="norelease_operation != null and norelease_operation != '' ">
				       AND M_RELEASED_INFO.STATUS_NAME IS NULL
					</when>
				</choose>
				<choose>
					<when test="searchTargetType.equals('KPS')  and empty_operation != null  and  empty_operation != ''  and different_operation != null and different_operation != '' ">
						AND (
							KOR_PUB_INFO.MAX_REV IS NULL
							OR KOR_PUB_INFO.MAX_REV <![CDATA[<>]]> RELATED_STATION.OPERATION_REV_ID
						)
					</when>
					<otherwise>
				       <!-- 없는공법 (KOR) -->
						<if test="empty_operation != null and empty_operation != '' and searchTargetType.equals('KPS')"  >
							AND KOR_PUB_INFO.MAX_REV IS NULL
						</if>
				       <!-- 다른 공법 (KOR) -->
				       <if test="different_operation != null and different_operation != ''  and searchTargetType.equals('KPS')">
							AND KOR_PUB_INFO.MAX_REV <![CDATA[<>]]> RELATED_STATION.OPERATION_REV_ID
				       </if>
					</otherwise>				
				</choose>
				<choose>
					<when test="  searchTargetType.equals('EPS')  and empty_operation != null  and  empty_operation != ''  and different_operation != null and different_operation != ''  ">
						AND (
							ENG_PUB_INFO.MAX_REV IS NULL
							OR ENG_PUB_INFO.MAX_REV <![CDATA[<>]]> RELATED_STATION.OPERATION_REV_ID
						)
					</when>
					<otherwise>
				       <!-- 없는공법 (ENG) -->
						<if test="empty_operation != null and empty_operation != '' and searchTargetType.equals('EPS')"  >
							AND ENG_PUB_INFO.MAX_REV IS NULL
						</if>
				       <!-- 다른 공법 (ENG) -->
				       <if test="different_operation != null and different_operation != ''  and searchTargetType.equals('EPS')">
							AND ENG_PUB_INFO.MAX_REV <![CDATA[<>]]> RELATED_STATION.OPERATION_REV_ID
				       </if>
					</otherwise>				
				</choose>
				<if test="line_code != null and line_code != '' ">
					AND UPPER(TRIM(RELATED_LINE.LINE_CODE))=UPPER(TRIM(#{line_code, jdbcType=VARCHAR}))
				</if>
	</select>
	<!-- [NONE_SR][20151126] taeku.jeong 표준서 문서보호 암호변경 대상 Query -->
	<select id="findAISPasswordMigrationTarget" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT PITEM.PITEM_ID AS ITEM_ID,
		    PITEMREVISION.PITEM_REVISION_ID AS REVISION_ID,
		    PRELEASESTATUS.PNAME AS RELEASD_STATUS,
		    PITEM.PUID AS ITEM_PUID,
		    PITEMREVISION.PUID AS REVISION_PUID,
		    PDATASET.PUID AS DATASET_PUID,
		    PWORKSPACEOBJECT.POBJECT_TYPE AS ITEM_REVISION_TYPE,
		    PIMANFILE.PORIGINAL_FILE_NAME AS ORIGN_FILE_NAME,
		    PDATASETTYPE.PDATASETTYPE_NAME AS DATASET_TYPE,
		    PIMANTYPE.PTYPE_NAME AS RELATION_TYPE
		FROM INFODBA.PITEM,
		    INFODBA.PITEMREVISION,
		    INFODBA.PPOM_APPLICATION_OBJECT,
		    INFODBA.PIMANRELATION,
		    INFODBA.PDATASETTYPE,
		    INFODBA.PDATASET,
		    INFODBA.PREF_LIST_0,
		    INFODBA.PIMANFILE,
		    INFODBA.PIMANVOLUME,
		    INFODBA.PWORKSPACEOBJECT,
		    INFODBA.PIMANTYPE,
		    INFODBA.PRELEASE_STATUS_LIST,
		    INFODBA.PRELEASESTATUS
		WHERE PITEM.PUID=PITEMREVISION.RITEMS_TAGU
		    AND PITEMREVISION.PUID=PPOM_APPLICATION_OBJECT.PUID
		    AND PIMANRELATION.RPRIMARY_OBJECTU=PITEMREVISION.PUID
		    AND PIMANRELATION.RSECONDARY_OBJECTU=PDATASET.PUID
		    AND PDATASET.PUID = PREF_LIST_0.PUID
		    AND PREF_LIST_0.PVALU_0 = PIMANFILE.PUID
		    AND PIMANFILE.RVOLUME_TAGU = PIMANVOLUME.PUID
		    --AND PPOM_APPLICATION_OBJECT.PCREATION_DATE >= TO_DATE ( '201502270000', 'YYYYMMDDHH24MI' )
		    AND PDATASETTYPE.PUID=PDATASET.RDATASET_TYPEU
		    AND PWORKSPACEOBJECT.PUID=PITEMREVISION.PUID
		    AND PWORKSPACEOBJECT.POBJECT_TYPE IN (
		        'M7_BOPAssyOpRevision',
		        'M7_BOPBodyOpRevision',
		        'M7_BOPPaintOpRevision'
		    )
		    AND PIMANTYPE.PUID=PIMANRELATION.RRELATION_TYPEU
		    AND PIMANTYPE.PTYPE_NAME IN (
		        'M7_PROCESS_SHEET_KO_REL',
				    'M7_PROCESS_SHEET_EN_REL'
		    )
		    AND PRELEASE_STATUS_LIST.PUID(+)=PITEMREVISION.PUID
		    AND PRELEASE_STATUS_LIST.PVALU_0=PRELEASESTATUS.PUID(+)
		ORDER BY PWORKSPACEOBJECT.POBJECT_TYPE,
		    PITEM.PITEM_ID,
		    PITEMREVISION.PITEM_REVISION_ID,
		    PIMANTYPE.PTYPE_NAME
	</select>
	<!-- [SR151207-041][20151215] taeku.jeong 용접점의 끊어지기전 Occurrence Name을 찾아서 표시해주는 메뉴추가 (ABS_OCC_ID) -->
	<select id="findPWProductAbsOccurenceId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT DISTINCT PABSOCCURRENCE.PABS_OCC_ID AS ABS_OCC_ID
		FROM INFODBA.PMEAPPEARANCEPATHNODE,
            INFODBA.PPSOCCURRENCE, 
            INFODBA.PMEAPPEARANCEPATHROOT,
            INFODBA.PITEM PRODUCT_ITEM,
            INFODBA.PABSOCCURRENCE
		WHERE PMEAPPEARANCEPATHROOT.RTRACKED_ITEMU=PRODUCT_ITEM.PUID
		  AND PMEAPPEARANCEPATHROOT.PUID=PMEAPPEARANCEPATHNODE.RPATH_ROOTU
		  AND PMEAPPEARANCEPATHNODE.ROCC_THREADU=PPSOCCURRENCE.ROCC_THREADU
		  AND PABSOCCURRENCE.PUID=PMEAPPEARANCEPATHNODE.RABS_OCCU
		  AND PRODUCT_ITEM.PITEM_ID= #{PRODUCT_ITEM_ID, jdbcType=VARCHAR}
		  AND ( PPSOCCURRENCE.POCCURRENCE_NAME LIKE
			  <foreach item="item" index="index" collection="USER_INPUT_VALUES"
			      open="" separator=" OR PPSOCCURRENCE.POCCURRENCE_NAME LIKE " close="">
			        #{item}
			  </foreach>
		  )
	</select>
	<!-- [SR151207-041][20151215] taeku.jeong 용접점의 끊어지기전 Occurrence Name을 찾아서 표시해주는 메뉴추가(OCC_NAME)  -->
	<select id="findWPProductOccurenceName" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT DISTINCT PABSOCCURRENCE.PABS_OCC_ID AS ABS_OCC_ID,
			PPSOCCURRENCE.POCCURRENCE_NAME AS OCC_NAME
		FROM INFODBA.PMEAPPEARANCEPATHNODE,
            INFODBA.PPSOCCURRENCE, 
            INFODBA.PMEAPPEARANCEPATHROOT,
            INFODBA.PITEM PRODUCT_ITEM,
            INFODBA.PABSOCCURRENCE
		WHERE PMEAPPEARANCEPATHROOT.RTRACKED_ITEMU=PRODUCT_ITEM.PUID
		  AND PMEAPPEARANCEPATHROOT.PUID=PMEAPPEARANCEPATHNODE.RPATH_ROOTU
		  AND PMEAPPEARANCEPATHNODE.ROCC_THREADU=PPSOCCURRENCE.ROCC_THREADU
		  AND PABSOCCURRENCE.PUID=PMEAPPEARANCEPATHNODE.RABS_OCCU
		  AND PRODUCT_ITEM.PITEM_ID= #{PRODUCT_ITEM_ID, jdbcType=VARCHAR}
		  AND PABSOCCURRENCE.PABS_OCC_ID IN
  		 <foreach collection="ABS_OCC_ID_LIST" item="absOccId" open="(" separator="," close=")">
            #{absOccId,jdbcType=VARCHAR}
         </foreach>
	</select>

</mapper>